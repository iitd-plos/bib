@string{POT = "Proceedings of the"}
@string{POTAS = "Proceedings of the {ACM} {SIGPLAN}"}

@string{PLDI = "Conference on Programming Language Design and Implementation"}
@string{SIGPLAN92 = POTAS # " 1992 " # PLDI}
@string{SIGPLAN94 = POTAS # " 1994 " # PLDI}
@string{SIGPLAN95 = POTAS # " 1995 " # PLDI}
@string{SIGPLAN96 = POTAS # " 1996 " # PLDI}
@string{SIGPLAN00 = POTAS # " 2000 " # PLDI}
@string{SIGPLAN02 = POTAS # " 2002 " # PLDI}
@string{SIGPLAN03 = POTAS # " 2003 " # PLDI}
@string{SIGPLAN04 = POTAS # " 2004 " # PLDI}

@string{POPL = "Annual Symposium on Principles of Programming Languages"}
@string{POPL94 = POT # " 21st " # POPL}
@string{POPL02 = POT # " 29th " # POPL}
@string{POPL05 = POT # " 32nd " # POPL}

@string{ICSE = "International Conference on Software Engineering"}
@string{ICSE04 = POT # " 26th " # ICSE }

@inproceedings{massalin:asplos87,
	AUTHOR = "Henry Massalin",
	TITLE = "Superoptimizer: A Look at the Smallest Program",
	booktitle= "ASPLOS '87: Proceedings of the Second International Conference on Architectural Support for Programming Languages and Operating Systems",
	PAGES = {122-126},
	YEAR = {1987}	}

@misc{icc:software,
	TITLE = "Intel {C}++ {C}ompiler 9.0",
	howpublished = "\url{http://www.intel.com/software/products/compilers/clin}",
	key = "Intel {C}++ {C}ompiler 9.0"
}

@misc{gcc:software,
	title = "{G}{N}{U} {C}ompiler {C}ollection ({\texttt gcc})",
	howpublished = "\url{http://gcc.gnu.org}",
	key = "{G}{N}{U} {C}ompiler {C}ollection ({\texttt gcc})",
}

@misc{hoh:software,
	title = {{ HoH Instructional and Research OS}},
  howpublished = "\url{https://hohlabs.github.io/}",
	key = "{H}o{H} Instructional and Research OS",
}

@misc{llvm:software,
	title = "The {L}{L}{V}{M} {C}ompiler {I}nfrastructure {P}roject",
	howpublished = "\url{http://llvm.org}",
	key = "The {L}{L}{V}{M} {C}ompiler {I}nfrastructure {P}roject",
}

@misc{ack_compiler,
	title = "The {A}msterdam {C}ompiler {K}it",
	howpublished = "\url{https://tack.sourceforge.net/}",
	key = "The {A}msterdam {C}ompiler {K}it",
}

@misc{i386abi,
    title="{S}ystem {V} {A}pplication {B}inary {I}nterface. Intel386 Architecture Processor Supplement. Version 1.0",
    howpublished = "\url{https://uclibc.org/docs/psABI-i386.pdf}",
}


@inproceedings{ gso:pldi92,
  author = "{Torbj\"orn} Granlund and Richard Kenner",
  title = "Eliminating branches using a superoptimizer and the {\small {GNU}} {C} compiler",
  booktitle = "PLDI '92: Proceedings of the {ACM} {SIGPLAN} Conference on Programming Language Design and Implementation",
  journal = "SIGPLAN Notices",
  volume = "27",
  number = "7",
  month = "June",
  pages = "341--352",
  year = "1992",
  url = "citeseer.ist.psu.edu/granlund92eliminating.html" }

@inproceedings{ denali:pldi02,
  author = "Rajeev Joshi and Greg Nelson and Keith H. Randall",
  title = "Denali: A Goal-directed Superoptimizer",
  booktitle = "PLDI '02: Proceedings of the {ACM} {SIGPLAN} Conference on Programming Language Design and Implementation",
  journal = "SIGPLAN Notices",
  PAGES = {304-314},
  month = "June",
  address = "Berlin, Germany",
  year = "2002"}

@article{ codeselection:toplas84,
  author = "J.W. Davidson and C.W. Fraser",
  title = "Code Selection through Object Code Optimization",
  journal = "ACM Transactions on Programming Languages and Systems (TOPLAS)",
  volume = "6",
  number = "4",
  PAGES = {505-526},
  year = "1984",
  url = "http://citeseer.ifi.unizh.ch/context/1043971/0"}

@inproceedings{ portable_optimizer:sigplan88,
  author = "M. E. Benitez and J. W. Davidson",
  title = "A Portable Global Optimizer and Linker",
  booktitle = "Proceedings of the {SIGPLAN} '88 " # PLDI,
  PAGES = {329-338},
  YEAR = {1988} }

@inproceedings{ zhang:zchaff,
    author = "Lintao Zhang and Conor F. Madigan and Matthew W. Moskewicz and Sharad Malik",
    title = "Efficient Conflict Driven Learning in Boolean Satisfiability Solver",
    booktitle = "{ICCAD '01: Proceedings of the International Conference on Computer-Aided Design}",
    pages = "279-285",
    month = "November",
    year = "2001",
    url = "citeseer.ist.psu.edu/article/zhang01efficient.html" }


@inproceedings{ moskewicz:chaff,
      author = "Matthew W. Moskewicz and Conor F. Madigan and Ying Zhao and Lintao Zhang and Sharad Malik",
      title = "{Chaff: Engineering an Efficient {SAT} Solver}",
      booktitle = "{DAC}'01: Proceedings of the 38th Design Automation Conference",
      year = "2001",
      pages = "530-535",
      url = "citeseer.ist.psu.edu/moskewicz01chaff.html" }

@misc{ocaml:software,
  	AUTHOR = "X. Leroy and D. Doligez and J. Garrigue and J. Vouillon",
	TITLE = "The {O}bjective {C}aml System",
	howpublished = "\url{http://caml.inria.fr}",
	key = "The {O}bjective {C}aml System"
}

@inproceedings{ anckaert:diablo,
  	AUTHOR = "Bertrand Anckaert and Frederick Vandeputte and Bruno De Bus and Bjorn De Sutter and Koen De Bosschere",
	TITLE = "Link-Time Optimization of {I}{A}64 Binaries",
	booktitle = "Proceedings of the 10th International Euro-par Conference",
	PAGES = {211-220},
	YEAR = "2004"
}

@inproceedings{ vanput:diablo,
  	AUTHOR = "L. Van Put and D. Chanet and B. De Bus and B. De Sutter and K. De Bosschere",
	TITLE = "DIABLO: a reliable, retargetable and extensible link-time rewriting framework",
	booktitle = "Proceedings of the 2005 IEEE International Symposium on Signal Processing and Information Technology",
	PAGES = {7-12},
	YEAR = "2005"
}

@misc{ spec:cint2000_web,
 title = "{S}tandard {P}erformance {E}valuation {C}orporation Integer Benchmarks",
 howpublished = "\url{http://www.spec.org/cpu/CINT2000/}",
 key = "{S}tandard {P}erformance {E}valuation {C}orporation Integer Benchmarks"
}

@article{ spec:cint2000,
  author = {John L. Henning},
  title = {{S}{P}{E}{C} {C}{P}{U}2000: Measuring {C}{P}{U} performance in the new millenium},
  journal = {IEEE Computer},
  volume = {33},
  number = {7},
  pages = {28-35},
  year = {2000},
  month = {July},
}

@misc{ superopt_online:web06,
 title = "Superoptimizer Prototype",
 howpublished = "\url{http://cs.stanford.edu/$\sim$sbansal/superoptimizer/}",
 key = "Superoptimizer Prototype"
 }

@inproceedings{asplos06,
 author = {Bansal, Sorav and Aiken, Alex},
 title = {Automatic Generation of Peephole Superoptimizers},
 booktitle = {Proceedings of the 12th International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS XII},
 year = {2006},
 isbn = {1-59593-451-0},
 location = {San Jose, California, USA},
 pages = {394--403},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1168857.1168906},
 doi = {10.1145/1168857.1168906},
 acmid = {1168906},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code selection, peephole optimization, superoptimization},
}

@misc{ apple:company,
  title = "{A}pple {C}omputer, {I}nc.",
  howpublished = "\url{http://www.apple.com}",
  key = "{A}pple {C}omputer, {I}nc."
}

@misc{ rosetta:software,
  title = "{A}pple {R}osetta",
  howpublished = "\url{http://www.apple.com/rosetta/}",
  key = "{A}pple {R}osetta."
}

@inproceedings{qemu,
 author = {Bellard, Fabrice},
 title = {QEMU, a fast and portable dynamic translator},
 booktitle = {USENIX Annual Technical Concerence '05},
}


@misc{ ardi_executor:software,
  title = "{E}xecutor by {ARDI}",
  howpublished = "\url{http://en.wikipedia.org/wiki/\\Executor\_(software)}",
  key = "{E}xecutor by {ARDI}"
}

@misc{ sun_wabi:software,
  title = "{S}un{S}oft {W}abi",
  howpublished = "\url{http://www.sun.com/sunsoft/\\Products/PC-Integration-products/}",
  key = "{S}un{S}oft {W}abi"
}

@misc{ vmware:company,
  title = "{V}m{W}are Inc.",
  howpublished = "\url{http://www.vmware.com/}",
  key = "{V}m{W}are Inc."
}

@misc{ vmware:workstation,
  title = "{V}{M}ware {W}orkstation",
  howpublished = "\url{http://www.vmware.com/products/workstation}",
  key = "{V}{M}ware {W}orkstation"
}

@inproceedings{adams_asplos06,
 author = {Adams, Keith and Agesen, Ole},
 title = {A Comparison of Software and Hardware Techniques for x86 Virtualization},
 booktitle = {Proceedings of the 12th International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS XII},
 year = {2006},
 isbn = {1-59593-451-0},
 location = {San Jose, California, USA},
 pages = {2--13},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1168857.1168860},
 doi = {10.1145/1168857.1168860},
 acmid = {1168860},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {MMU, SVM, TLB, VT, dynamic binary translation, nested paging, virtual machine monitor, virtualization, x86},
}


@inproceedings{xenserver,
	author = {Barham, Paul and Dragovic, Boris and Fraser, Keir and Hand, Steven and Harris, Tim and Ho, Alex and Neugebauer, Rolf and Pratt, Ian and Warfield, Andrew},
	title = {Xen and the art of virtualization},
	booktitle = {SOSP '03: Proceedings of the nineteenth ACM Symposium on Operating Systems Principles},
	year = {2003},
	isbn = {1-58113-757-5},
	pages = {164--177},
	location = {Bolton Landing, NY, USA},
	doi = {http://doi.acm.org/10.1145/945445.945462},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{bellard,
	author    = {Fabrice Bellard},
	title     = {QEMU, a Fast and Portable Dynamic Translator},
	booktitle = {USENIX Annual Technical Conference, FREENIX Track},
	year      = {2005},
	pages     = {41-46},
	ee        = {http://www.usenix.org/events/usenix05/tech/freenix/bellard.html},
	bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{superpages,
	author = {Navarro, Juan and Iyer, Sitararn and Druschel, Peter and Cox, Alan},
	title = {Practical, transparent operating system support for superpages},
	journal = {SIGOPS Oper. Syst. Rev.},
	volume = {36},
	number = {SI},
	year = {2002},
	issn = {0163-5980},
	pages = {89--104},
	doi = {http://doi.acm.org/10.1145/844128.844138},
	publisher = {ACM},
	address = {New York, NY, USA},
}




@misc{ transitive:company,
  title = "{T}ransitive {T}echnologies",
  howpublished = "\url{http://www.transitive.com/}",
  key = "{T}ransitive {T}echnologies"
}

@misc{ transitive_performance_claim,
  title = "{Q}uick{T}ransit for {P}ower-to-{X}86",
  howpublished = "\url{http://transitive.com/products/pow\_x86.htm}",
  key = "{Q}uick{T}ransit for {P}ower-to-{X}86"
}

@misc{ azul_systems:company,
  title = "{A}zul {S}ystems",
  howpublished = "\url{http://www.azulsystems.com/}",
  key = "{A}zul {S}ystems"
}

@misc{ vmware_transitive,
  title = "{S}erver Consolidation and Containment with {V}{M}ware {V}irtual {I}nfrastructure and {T}ransitive",
  howpublished = "\url{http://www.transitive.com/pdf/\\VMwareTransitiveSolutionBrief.pdf}",
  key = "Server Consolidation and Containment with {V}{M}ware {V}irtual {I}nfrastructure and {T}ransitive"
}

@article{ transmeta_crusoe_power:chip,
  author = "Tom Halfhill",
  title = "Transmeta breaks x86 low-power barrier",
  journal = "Microprocessor Report",
  month = "February",
  year = "2000"
}

@article{souper,
  author    = {Raimondas Sasnauskas and
               Yang Chen and
               Peter Collingbourne and
               Jeroen Ketema and
               Jubi Taneja and
               John Regehr},
  title     = {Souper: {A} Synthesizing Superoptimizer},
  journal   = {CoRR},
  volume    = {abs/1711.04422},
  year      = {2017},
  url       = {http://arxiv.org/abs/1711.04422},
  eprinttype = {arXiv},
  eprint    = {1711.04422},
  timestamp = {Mon, 02 Aug 2021 08:40:02 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1711-04422.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@techreport{ transmeta_crusoe:chip,
  author = "Alex Klaiber",
  title = "The technology behind {C}rusoe processors",
  month = "January",
  year = "2000",
  URL = "\url{http://www.transmeta.com}",
  institution = "Transmeta Corp."
}

@inproceedings{ ebcioglu97daisy,
  author = "Kemal Ebcioglu and Erik R. Altman",
  title = "{DAISY}: Dynamic Compilation for 100\% Architectural Compatibility",
  booktitle = "{ISCA '97: Proceedings of the 24th International Symposium on Computer Architecture}",
  pages = "26-37",
  year = "1997",
  url = "citeseer.ist.psu.edu/ebcioglu97daisy.html"
}

@inproceedings{bala00dynamo,
 author = {Bala, Vasanth and Duesterwald, Evelyn and Banerjia, Sanjeev},
 title = {Dynamo: A Transparent Dynamic Optimization System},
 booktitle = {Proceedings of the ACM SIGPLAN 2000 Conference on Programming Language Design and Implementation},
 series = {PLDI '00},
 year = {2000},
 isbn = {1-58113-199-2},
 location = {Vancouver, British Columbia, Canada},
 pages = {1--12},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/349299.349303},
 doi = {10.1145/349299.349303},
 acmid = {349303},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@article{ chernoff98fx,
  author = "Anton Chernoff and Mark Herdeg and Ray Hookway and Chris Reeve and Norman Rubin and Tony Tye and S. Bharadwaj Yadavalli and John Yates",
  title = "{FX!32}: {A} Profile-Directed Binary Translator",
  journal = "IEEE Micro",
  volume = "18",
  number = "2",
  month = "Mar/Apr",
  pages = "56--64",
  year = "1998",
  url = "citeseer.ist.psu.edu/chernoff98fx.html"
}

@inproceedings{ yang99latte,
  author = "Byung-Sun Yang and Soo-Mook Moon and Seongbae Park and Junpyo Lee and SeungIl Lee and Jinpyo Park and Yoo C. Chung and Suhyun Kim and Kemal Ebcioglu and Erik R. Altman",
  title = "La{T}{T}e: A {J}ava {VM} Just-In-Time Compiler with Fast and Efficient Register Allocation",
  booktitle = "PACT '99: Proceedings of the International Conference on Parallel Architecture and Compilation Techniques",
  pages = "128-138",
  year = "1999",
  url = "citeseer.ist.psu.edu/yang99latte.html"
}

@inproceedings{ gschwind00binary,
  author = "Michael Gschwind and Kemal Ebcio{\u{g}}lu and Erik Altman and Sumedh Sathaye",
  title = "Binary translation and architecture convergence issues for {IBM System\slash 390}",
  booktitle = "Conference proceedings of the 2000 International Conference on Supercomputing: Santa Fe, New Mexico, May 8--11, 2000 [{ICS} '00]",
  publisher = "ACM Press",
  address = "New York, NY, USA",
  isbn = "1-58113-270-0",
  pages = "336--347",
  year = "2000",
  url = "citeseer.ist.psu.edu/gschwind00binary.html"
}

@article{373592,
  author = {Michael Gschwind and Erik Altman},
  title = {Optimization and precise exceptions in dynamic compilation},
  journal = {SIGARCH Comput. Archit. News},
  volume = {29},
  number = {1},
  year = {2001},
  issn = {0163-5964},
  pages = {66--74},
  doi = {http://doi.acm.org/10.1145/373574.373592},
  publisher = {ACM Press},
  address = {New York, NY, USA},
}

@inproceedings{ witchel96embra,
  author = "Emmett Witchel and Mendel Rosenblum",
  title = "Embra: Fast and Flexible Machine Simulation",
  booktitle = "Proceedings of the {ACM} {SIGMETRICS} conference on Measurement and Modeling of Computer Systems",
  pages = "68-79",
  year = "1996",
  url = "citeseer.ist.psu.edu/article/witchel96embra.html"
}

@inproceedings{ ung00machineadaptable,
  author = "David Ung and Cristina Cifuentes",
  title = "Machine-adaptable dynamic binary translation",
  booktitle = "Dynamo '00: ACM SIGPLAN Workshop on Dynamic and Adaptive Compilation and Optimization",
  pages = "41-51",
  year = "2000",
  url = "citeseer.ist.psu.edu/ung00machineadaptable.html"
}

@phdthesis{bruening04thesis,
  author = "Derek Bruening",
  title = "Efficient, Transparent and Comprehensive Runtime Code Manipulation",
  school = "MIT",
  year = "2004"
}

@phdthesis{churchill_thesis,
  author = "Berkeley Churchill",
  title = "Blackbox Equivalence Checking of Program Optimizations",
  school = "Stanford University",
  year = "2019"
}

@phdthesis{bansal08thesis,
  author = "Sorav Bansal",
  title = "Peephole Superoptimization",
  school = "Stanford University",
  year = "2008"
}

@article{ davidson89quick,
  author = "Jack W. Davidson and David B. Whalley",
  title = "Quick Compilers Using Peephole Optimization",
  journal = "Software - Practice and Experience",
  volume = "19",
  number = "1",
  pages = "79-97",
  year = "1989",
  url = "citeseer.ist.psu.edu/davidson89quick.html" }

@article{ davidson87auto,
  author = "Jack W. Davidson and C.W. Fraser",
  title = "Automatic Inference and Fast Interpretation of Peephole Optimization Rules",
  journal = "Software - Practice and Experience",
  volume = "17",
  pages = "801-812",
  month="November",
  year = "1987"}

@article{ lamb81construction,
  author = "D.A. Lamb",
  title = "Construction of a Peephole Optimizer",
  journal = "Software - Practice and Experience",
  volume = "11",
  pages = "639-647",
  month="June",
  year = "1981"}


@inproceedings{ scott01strata,
  author = "Kevin Scott and Jack Davidson",
  title = "Strata: {A} Software Dynamic Translation Infrastructure",
  booktitle = "IEEE Workshop on Binary Translation",
  year = {2001}}

@misc{ IBMpowervmlx86,
  TITLE = "{P}ower{V}{M} {L}x86 for x86 {L}inux applications",
  howpublished = "\url{http://www.ibm.com/developerworks/linux/\\lx86/index.html}",
  key = "{P}ower{V}{M} {L}x86 for x86 {L}inux applications"
}

@misc{ kvm_ppc_exittimings,
	TITLE = "{K}{V}{M} {P}ower{P}{C}: {A}bout exit timing",
	howpublished = "\url{http:///www.linux-kvm.org/page/\\PowerPC\_Exittimings}",
	key = "{K}{V}{M} {P}ower{P}{C}: {A}bout exit timing"
}

@article{ popekgoldberg,
	author = {Popek, Gerald J. and Goldberg, Robert P.},
	title  = {Formal requirements for virtualizable third generation architectures},
	journal = {Commun. ACM},
	volume = {17},
	number = {7},
	year = {1974},
	issn = {0001-0782},
	pages = {412--421},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{osdi08,
 author = {Bansal, Sorav and Aiken, Alex},
 title = {Binary Translation Using Peephole Superoptimizers},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {177--192},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855754},
 acmid = {1855754},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@misc{ bansal:cloudfutures_abstract,
	author = {Sorav Bansal},
	title = {Looking Inside the Virtualization Layer for Performance, Security and Software Fault Tolerance},
	howpublished = "\url{http://www.cse.iitd.ernet.in/$\sim$sbansal/pubs/cloudfutures2010\_abstract.pdf}",
	key = {Looking Inside the Virtualization Layer for Performance, Security and Software Fault Tolerance}
}

@misc{ virtio,
	TITLE = "{L}ibvirt {V}irtualization {A}{P}{I}: {V}irt{I}{O}",
	howpublished = "\url{http://wiki.livirt.org/page/{V}irtio}",
	key = "{L}ibvirt {V}irtualization {A}{P}{I}: {V}irt{I}{O}"
}

@inproceedings{sugerman,
	author    = {Jeremy Sugerman and
		Ganesh Venkitachalam and
			Beng-Hong Lim},
	title     = {Virtualizing I/O Devices on VMware Workstation's Hosted
		Virtual Machine Monitor},
	booktitle = {USENIX Annual Technical Conference, General Track},
	year      = {2001},
	pages     = {1-14},
	ee        = {http://www.usenix.org/publications/library/proceedings/usenix01/sugerman.html},
	bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{waldspurger,
	author    = {Carl A. Waldspurger},
	title     = {Memory Resource Management in VMware ESX Server},
	booktitle = {OSDI '02: Proceedings of the 5th conference on Symposium on Operating Systems Design \& Implementation},
	year      = {2002},
	ee        = {http://www.usenix.org/events/osdi02/tech/waldspurger.html},
	bibsource = {DBLP, http://dblp.uni-trier.de}
}

@misc{ hugeTLB,
	TITLE = {{H}uge{T}{L}{B} - Large Page Support in the Linux Kernel},
	howpublished = "\url{http://linuxgazette.net/155/krishnakumar.html}",
	key = {{H}uge{T}{L}{B} - Large Page Support in the Linux Kernel}
}

@inproceedings{acceptability_oriented_computing,
	author = {Rinard, Martin},
	title = {Acceptability-oriented computing},
	booktitle = {OOPSLA '03: Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
	year = {2003},
	isbn = {1-58113-751-6},
	pages = {221--239},
	location = {Anaheim, CA, USA},
	doi = {http://doi.acm.org/10.1145/949344.949402},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{failure_oblivious_computing,
	author = {Rinard, Martin and Cadar, Cristian and Dumitran, Daniel and Roy, Daniel M. and Leu, Tudor and Beebee,Jr., William S.},
	title = {Enhancing server availability and security through failure-oblivious computing},
	booktitle = {OSDI '04: Proceedings of the 6th conference on Symposium on Operating Systems Design \& Implementation},
	year = {2004},
	pages = {21--21},
	location = {San Francisco, CA},
	publisher = {USENIX Association},
	address = {Berkeley, CA, USA},
}

@inproceedings{clearview,
	author = {Jeff H. Perkins and Sunghun Kim and Sam Larsen and Saman
		Amarasinghe and Jonathan Bachrach and Michael Carbin and Carlos
			Pacheco and Frank Sherwood and Stelios Sidiroglou and Greg
			Sullivan and Weng-Fai Wong and Yoav Zibin and Michael D. Ernst and
			Martin Rinard},
	title = {Automatically patching errors in deployed software},
	booktitle = {SOSP '09: Proceedings of the 21st ACM Symposium on Operating Systems
		Principles},
	pages = {87-102},
	address = {Big Sky, MT, USA},
	month = {October~12--14,},
	year = {2009}
}

@inproceedings{program_shepherding,
 author = {Kiriansky, Vladimir and Bruening, Derek and Amarasinghe, Saman P.},
 title = {Secure Execution via Program Shepherding},
 booktitle = {Proceedings of the 11th USENIX Security Symposium},
 year = {2002},
 isbn = {1-931971-00-5},
 pages = {191--206},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=647253.720293},
 acmid = {720293},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{microreboots,
	author = {Candea, George and Cutler, James and Fox, Armando},
	title = {Improving availability with recursive microreboots: a soft-state system case study},
	journal = {Perform. Eval.},
	volume = {56},
	number = {1-4},
	year = {2004},
	issn = {0166-5316},
	pages = {213--248},
	doi = {http://dx.doi.org/10.1016/j.peva.2003.07.007},
	publisher = {Elsevier Science Publishers B. V.},
	address = {Amsterdam, The Netherlands, The Netherlands},
}

@inproceedings{coredet,
 author = {Bergan, Tom and Anderson, Owen and Devietti, Joseph and Ceze, Luis and Grossman, Dan},
 title = {CoreDet: A Compiler and Runtime System for Deterministic Multithreaded Execution},
 booktitle = {ASPLOS '10},
}

@inproceedings{grace,
 author = {Berger, Emery D. and Yang, Ting and Liu, Tongping and Novark, Gene},
 title = {Grace: Safe Multithreaded Programming for C/C++},
 booktitle = {OOPSLA '09},
}

@inproceedings{pres,
 author = {Park, Soyeon and Zhou, Yuanyuan and Xiong, Weiwei and Yin, Zuoning and Kaushik, Rini and Lee, Kyu H. and Lu, Shan},
 title = {PRES: Probabilistic Replay with Execution Sketching on Multiprocessors},
 booktitle = {Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles},
 series = {SOSP '09},
 year = {2009},
 isbn = {978-1-60558-752-3},
 location = {Big Sky, Montana, USA},
 pages = {177--192},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/1629575.1629593},
 doi = {10.1145/1629575.1629593},
 acmid = {1629593},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency bug, replay},
}



@article{instantreplay,
	author={Leblanc, T.J. and Mellor-Crummey, J.M.},
	journal={Computers, IEEE Transactions on},
	title={Debugging Parallel Programs with Instant Replay},
	year={1987},
	month={april },
	volume={C-36},
	number={4},
	pages={471 -482},
}

@inproceedings{capo,
	author = {Montesinos, Pablo and Hicks, Matthew and King, Samuel T. and Torrellas, Josep},
	title = {Capo: a software-hardware interface for practical deterministic multiprocessor replay},
	booktitle = {ASPLOS '09: Proceeding of the 14th international conference on Architectural support for programming languages and operating systems},
	year = {2009},
	isbn = {978-1-60558-406-5},
	pages = {73--84},
	location = {Washington, DC, USA},
	doi = {http://doi.acm.org/10.1145/1508244.1508254},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{DeLorean,
	author = {Montesinos, Pablo and Ceze, Luis and Torrellas, Josep},
	title = {DeLorean: Recording and Deterministically Replaying Shared-Memory Multiprocessor Execution Efficiently},
	booktitle = {ISCA '08},
}

@article{rtr,
	author = {Xu, Min and Hill, Mark D. and Bodik, Rastislav},
	title = {A regulated transitive reduction (RTR) for longer memory race recording},
	journal = {SIGARCH Comput. Archit. News},
	volume = {34},
	number = {5},
	year = {2006},
	issn = {0163-5964},
	pages = {49--60},
	doi = {http://doi.acm.org/10.1145/1168919.1168865},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{flightrecorder,
 author = {Xu, Min and Bodik, Rastislav and Hill, Mark D.},
 title = {A "Flight Data Recorder" for Enabling Full-system Multiprocessor Deterministic Replay},
 booktitle = {ISCA '03},
}

@inproceedings{flashback,
 author = {Srinivasan, Sudarshan M. and Kandula, Srikanth and Andrews, Christopher R. and Zhou, Yuanyuan},
 title = {Flashback: A Lightweight Extension for Rollback and Deterministic Replay for Software Debugging},
 booktitle = {ATEC '04},
}

@article{agesen_evolution_of_vmm,
 author = {Agesen, Ole and Garthwaite, Alex and Sheldon, Jeffrey and Subrahmanyam, Pratap},
 title = {The evolution of an x86 virtual machine monitor},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {December 2010},
 volume = {44},
 number = {4},
 month = dec,
 year = {2010},
}

@inproceedings{timetravel,
	author = {King, Samuel T. and Dunlap, George W. and Chen, Peter M.},
	title = {Debugging operating systems with time-traveling virtual machines},
	booktitle = {ATEC '05: Proceedings of the annual conference on USENIX Annual Technical Conference},
	year = {2005},
	pages = {1--1},
	location = {Anaheim, CA},
	publisher = {USENIX Association},
	address = {Berkeley, CA, USA},
}


@inproceedings{chess,
	author = {Madanlal Musuvathi and Shaz Qadeer and Thomas Ball and Gérard Basler and Piramanayagam Arumuga Nainar and Iulian Neamtiu},
	booktitle = {OSDI '08: Proceedings of the 8th conference on Symposium on Operating Systems Design \& Implementation},
	pages = {267-280},
	publisher = {USENIX Association},
	title = {Finding and Reproducing Heisenbugs in Concurrent Programs.},
	year = 2008,
	date = {2009-01-07}
}

@inproceedings{pct,
	author    = {Sebastian Burckhardt and
		Pravesh Kothari and
			Madanlal Musuvathi and
			Santosh Nagarakatte},
	title     = {A randomized scheduler with probabilistic guarantees of
		finding bugs},
	booktitle = {ASPLOS '10: Proceeding of the 15th international conference on Architectural support for programming languages and operating systems},
	year      = {2010},
	pages     = {167-178},
	ee        = {http://doi.acm.org/10.1145/1736020.1736040},
	bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{ctrigger,
	author = {Park, Soyeon and Lu, Shan and Zhou, Yuanyuan},
	title = {CTrigger: exposing atomicity violation bugs from their hiding places},
	booktitle = {ASPLOS '09: Proceeding of the 14th international conference on Architectural support for programming languages and operating systems},
	year = {2009},
	isbn = {978-1-60558-406-5},
	pages = {25--36},
	location = {Washington, DC, USA},
	doi = {http://doi.acm.org/10.1145/1508244.1508249},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{retrace,
    author = {Xu, Min and Malyugin, Vyacheslav and Sheldon, Jeffrey and Venkitachalam, Ganesh and Weissman, Boris},
    booktitle = {In Proceedings of the 3rd Annual Workshop on Modeling, Benchmarking and Simulation, MoBS},
    citeulike-article-id = {6488200},
    citeulike-linkout-0 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.84.5732},
    keywords = {debug, tool, vm},
    posted-at = {2010-01-05 16:25:25},
    priority = {2},
    title = {Retrace: Collecting execution trace with virtual machine deterministic replay},
    url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.84.5732},
    volume = {3},
    year = {2007}
}

@inproceedings{odr,
 author = {Altekar, Gautam and Stoica, Ion},
 title = {ODR: Output-deterministic Replay for Multicore Debugging},
 booktitle = {Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles},
 series = {SOSP '09},
 year = {2009},
 isbn = {978-1-60558-752-3},
 location = {Big Sky, Montana, USA},
 pages = {193--206},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1629575.1629594},
 doi = {10.1145/1629575.1629594},
 acmid = {1629594},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {debugging, deterministic replay, inference, multicore},
}



@inproceedings{txlinux,
	author = {Rossbach, Christopher J. and Hofmann, Owen S. and Porter, Donald E. and Ramadan, Hany E. and Aditya, Bhandari and Witchel, Emmett},
	title = {TxLinux: using and managing hardware transactional memory in an operating system},
	booktitle = {SOSP '07: Proceedings of 21st ACM SIGOPS Symposium on Operating Systems Principles},
	year = {2007},
	isbn = {978-1-59593-591-5},
	pages = {87--102},
	location = {Stevenson, Washington, USA},
	doi = {http://doi.acm.org/10.1145/1294261.1294271},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{ostrans,
	author = {Porter, Donald E. and Hofmann, Owen S. and Rossbach, Christopher J. and Benn, Alexander and Witchel, Emmett},
	title = {Operating System Transactions},
	booktitle = {SOSP '09: Proceedings of the ACM SIGOPS 22nd Symposium on Operating Systems Principles},
	year = {2009},
	isbn = {978-1-60558-752-3},
	pages = {161--176},
	location = {Big Sky, Montana, USA},
	doi = {http://doi.acm.org/10.1145/1629575.1629591},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@inproceedings{transactional_memory,
	author={Herlihy, M. and Eliot, J. and Moss, B.},
	booktitle={Computer Architecture, 1993., Proceedings of the 20th Annual International Symposium on}, title={Transactional Memory: Architectural Support For Lock-free Data Structures},
	year={1993},
	month={16-19},
	volume={},
	number={},
	pages={289 -300},
	keywords={},
	doi={},
	ISSN={},
}

@inproceedings{execution_filters,
	author = {Jingyue Wu and Heming Cui and Junfeng Yang},
	title = {Bypassing Races in Live Applications with Execution Filters},
	year = {2010},
	booktitle = {OSDI '10: Proceedings of the Ninth Symposium on Operating Systems Design and Implementation (to appear)},
}

@inproceedings{determinator,
	author = {Amittai Aviram and Shu-Chun Weng and Sen Hu and Bryan Ford},
	title = {Efficient System-Enforced Deterministic Parallelism},
	year = {2010},
	booktitle = {OSDI '10: Proceedings of the Ninth Symposium on Operating Systems Design and Implementation (to appear)},
}

@article{concurrency_bug_characteristics,
	author = {Lu, Shan and Park, Soyeon and Seo, Eunsoo and Zhou, Yuanyuan},
	title = {Learning from mistakes: a comprehensive study on real world concurrency bug characteristics},
	journal = {SIGARCH Comput. Archit. News},
	volume = {36},
	number = {1},
	year = {2008},
	issn = {0163-5964},
	pages = {329--339},
	doi = {http://doi.acm.org/10.1145/1353534.1346323},
	publisher = {ACM},
	address = {New York, NY, USA},
}

@misc{ intelRefManual3B,
	TITLE = "Intel 64 and {I}{A}-32 Architectures Software Developer's Manual Volume 3{B}: {S}ystem Programming Guide Part 2",
	howpublished = "\url{http://www.intel.com/products/processor/manuals/}",
	key = "Intel® 64 and {I}{A}-32 Architectures Software Developer's Manual Volume 3{B}: {S}ystem Programming Guide Part 2"
}

@inproceedings{xiong:adhoc:osdi10,
  author = "Weiwei Xiong and Soyeon Park and Jiaqi Zhang and Yuanyuan Zhou and Zhiqiang Ma",
  title = {Ad Hoc Synchronization Considered Harmful},
  booktitle = {9th USENIX Symposium on Operating Systems Design and Implementation},
  year = {2010},
  location = {Vancouver, BC, Canada},
  publisher = {USENIX Association},
  address = {Berkeley, CA, USA},
}

@inproceedings{musuvathi:icb:pldi07,
  author = {Musuvathi, Madanlal and Qadeer, Shaz},
  title = {Iterative context bounding for systematic testing of multithreaded programs},
  booktitle = {Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation},
  series = {PLDI '07},
  year = {2007},
  isbn = {978-1-59593-633-2},
  location = {San Diego, California, USA},
  pages = {446--455},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1250734.1250785},
  doi = {http://doi.acm.org/10.1145/1250734.1250785},
  acmid = {1250785},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency, context-bounding, model checking, multithreading, partial-order reduction, shared-memory programs, software testing},
}

@inproceedings{lu:learning_from_mistakes:asplos08,
  author = {Lu, Shan and Park, Soyeon and Seo, Eunsoo and Zhou, Yuanyuan},
  title = {Learning from mistakes: a comprehensive study on real world concurrency bug characteristics},
  booktitle = {Proceedings of the 13th international conference on Architectural support for programming languages and operating systems},
  series = {ASPLOS XIII},
  year = {2008},
  isbn = {978-1-59593-958-6},
  location = {Seattle, WA, USA},
  pages = {329--339},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/1346281.1346323},
  doi = {http://doi.acm.org/10.1145/1346281.1346323},
  acmid = {1346323},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {bug characteristics, concurrency bug, concurrent program},
}

@techreport{andersen94programanalysis,
  author = {Lars Ole Andersen},
  title = {Program Analysis and Specialization for the {C} Programming Language},
  institution = {},
  year = {1994}
}

@article{lhotak:alias:tosem08,
  author = {Lhot\'{a}k, Ond\v{r}ej and Hendren, Laurie},
  title = {Evaluating the benefits of context-sensitive points-to analysis using a BDD-based implementation},
  journal = {ACM Trans. Softw. Eng. Methodol.},
  volume = {18},
  issue = {1},
  month = {October},
  year = {2008},
  issn = {1049-331X},
  pages = {3:1--3:53},
  articleno = {3},
  numpages = {53},
  url = {http://doi.acm.org/10.1145/1391984.1391987},
  doi = {http://doi.acm.org/10.1145/1391984.1391987},
  acmid = {1391987},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Interprocedural program analysis, Java, binary decision diagrams, call graph construction, cast safety analysis, context sensitivity, points-to analysis},
}

@inproceedings{whaley:alias:pldi04,
  author = {Whaley, John and Lam, Monica S.},
  title = {Cloning-based context-sensitive pointer alias analysis using binary decision diagrams},
  booktitle = {Proceedings of the ACM SIGPLAN 2004 conference on Programming language design and implementation},
  series = {PLDI '04},
  year = {2004},
  isbn = {1-58113-807-5},
  location = {Washington DC, USA},
  pages = {131--144},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/996841.996859},
  doi = {http://doi.acm.org/10.1145/996841.996859},
  acmid = {996859},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Datalog, Java, binary decision diagrams, cloning, context-sensitive, inclusion-based, logic programming, pointer analysis, program analysis, scalable},
}

@techreport{bruening:systematic_testing,
  author = {Derek Bruening and John Chapin},
  title = {Systematic Testing of Multithreaded Programs},
  institution = {LCS-TM-607, MIT/LCS},
  year = {2000}
}

@techreport{sen:permutations,
  author = {Sandeep Sen and Sorav Bansal},
  title = {Number of Permutations Required to Enumerate all Relative Orderings of all k-sized Subsets},
  institution = {IIT Delhi},
  year = {2010}
}

@inproceedings{elmas:goldilocks:pldi07,
  author = {Elmas, Tayfun and Qadeer, Shaz and Tasiran, Serdar},
  title = {Goldilocks: a race and transaction-aware java runtime},
  booktitle = {Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation},
  series = {PLDI '07},
  year = {2007},
  isbn = {978-1-59593-633-2},
  location = {San Diego, California, USA},
  pages = {245--255},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/1250734.1250762},
  doi = {http://doi.acm.org/10.1145/1250734.1250762},
  acmid = {1250762},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Java runtime, data-race detection, runtime monitoring, software transactions},
}

@article{savage:eraser:tcs97,
  author = {Savage, Stefan and Burrows, Michael and Nelson, Greg and Sobalvarro, Patrick and Anderson, Thomas},
  title = {Eraser: a dynamic data race detector for multithreaded programs},
  journal = {ACM Trans. Comput. Syst.},
  volume = {15},
  issue = {4},
  month = {November},
  year = {1997},
  issn = {0734-2071},
  pages = {391--411},
  numpages = {21},
  url = {http://doi.acm.org/10.1145/265924.265927},
  doi = {http://doi.acm.org/10.1145/265924.265927},
  acmid = {265927},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {binary code modification, multithreaded programming, race detection},
}

@inproceedings{yu:racetrack:sosp05,
  author = {Yu, Yuan and Rodeheffer, Tom and Chen, Wei},
  title = {RaceTrack: efficient detection of data race conditions via adaptive tracking},
  booktitle = {Proceedings of the twentieth ACM symposium on Operating systems principles},
  series = {SOSP '05},
  year = {2005},
  isbn = {1-59593-079-5},
  location = {Brighton, United Kingdom},
  pages = {221--234},
  numpages = {14},
  url = {http://doi.acm.org/10.1145/1095810.1095832},
  doi = {http://doi.acm.org/10.1145/1095810.1095832},
  acmid = {1095832},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {race detection, virtual machine instrumentation},
}

@inproceedings{apt:fairness:popl87,
  author = {Apt, K. R. and Francez, N. and Katz, S.},
  title = {Appraising fairness in distributed languages},
  booktitle = {Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
  series = {POPL '87},
  year = {1987},
  isbn = {0-89791-215-2},
  location = {Munich, West Germany},
  pages = {189--198},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/41625.41642},
  doi = {http://doi.acm.org/10.1145/41625.41642},
  acmid = {41642},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{park:ctrigger:asplos09,
  author = {Park, Soyeon and Lu, Shan and Zhou, Yuanyuan},
  title = {CTrigger: exposing atomicity violation bugs from their hiding places},
  booktitle = {Proceeding of the 14th international conference on Architectural support for programming languages and operating systems},
  series = {ASPLOS '09},
  year = {2009},
  isbn = {978-1-60558-406-5},
  location = {Washington, DC, USA},
  pages = {25--36},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1508244.1508249},
  doi = {http://doi.acm.org/10.1145/1508244.1508249},
  acmid = {1508249},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency bug, software testing},
}

@inproceedings{naik:chord:pldi06,
  author = {Naik, Mayur and Aiken, Alex and Whaley, John},
  title = {Effective static race detection for Java},
  booktitle = {Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation},
  series = {PLDI '06},
  year = {2006},
  isbn = {1-59593-320-4},
  location = {Ottawa, Ontario, Canada},
  pages = {308--319},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1133981.1134018},
  doi = {http://doi.acm.org/10.1145/1133981.1134018},
  acmid = {1134018},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {Java, concurrency, multi-threading, static race detection, synchronization},
}

@inproceedings{sen:racefuzzer:pldi08,
  author = {Sen, Koushik},
  title = {Race directed random testing of concurrent programs},
  booktitle = {Proceedings of the 2008 ACM SIGPLAN conference on Programming language design and implementation},
  series = {PLDI '08},
  year = {2008},
  isbn = {978-1-59593-860-2},
  location = {Tucson, AZ, USA},
  pages = {11--21},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/1375581.1375584},
  doi = {http://doi.acm.org/10.1145/1375581.1375584},
  acmid = {1375584},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency, dynamic analysis, race detection, random testing},
}

@inproceedings{joshi:deadlockfuzzer:pldi09,
  author = {Joshi, Pallavi and Park, Chang-Seo and Sen, Koushik and Naik, Mayur},
  title = {A randomized dynamic program analysis technique for detecting real deadlocks},
  booktitle = {Proceedings of the 2009 ACM SIGPLAN conference on Programming language design and implementation},
  series = {PLDI '09},
  year = {2009},
  isbn = {978-1-60558-392-1},
  location = {Dublin, Ireland},
  pages = {110--120},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/1542476.1542489},
  doi = {http://doi.acm.org/10.1145/1542476.1542489},
  acmid = {1542489},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {active testing, concurrency, deadlock detection, dynamic program analysis},
}

@inproceedings{lu:avio:asplos06,
  author = {Lu, Shan and Tucek, Joseph and Qin, Feng and Zhou, Yuanyuan},
  title = {AVIO: detecting atomicity violations via access interleaving invariants},
  booktitle = {Proceedings of the 12th international conference on Architectural support for programming languages and operating systems},
  series = {ASPLOS-XII},
  year = {2006},
  isbn = {1-59593-451-0},
  location = {San Jose, California, USA},
  pages = {37--48},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1168857.1168864},
  doi = {http://doi.acm.org/10.1145/1168857.1168864},
  acmid = {1168864},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {atomicity violation, bug detection, concurrency bug, concurrent program, hardware support, program invariant},
}

@book{godefroid:verisoft:book96,
  author = {Godefroid, Patrice},
  editor = {Leeuwen, J. van and Hartmanis, J. and Goos, G.},
  title = {Partial-Order Methods for the Verification of Concurrent Systems: An Approach to the State-Explosion Problem},
  year = {1996},
  isbn = {3540607617},
  publisher = {Springer-Verlag New York, Inc.},
  address = {Secaucus, NJ, USA},
}

@inproceedings{stoller:modelcheck:spin00,
  author = {Stoller, Scott D.},
  title = {Model-Checking Multi-threaded Distributed Java Programs},
  booktitle = {Proceedings of the 7th International SPIN Workshop on SPIN Model Checking and Software Verification},
  year = {2000},
  isbn = {3-540-41030-9},
  pages = {224--244},
  numpages = {21},
  url = {http://portal.acm.org/citation.cfm?id=645880.672084},
  acmid = {672084},
  publisher = {Springer-Verlag},
  address = {London, UK},
}

@inproceedings{godefroid:verisoft:popl97,
  author = {Godefroid, Patrice},
  title = {Model checking for programming languages using {V}eri{S}oft},
  booktitle = {Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  series = {POPL '97},
  year = {1997},
  isbn = {0-89791-853-3},
  location = {Paris, France},
  pages = {174--186},
  numpages = {13},
  url = {http://doi.acm.org/10.1145/263699.263717},
  doi = {http://doi.acm.org/10.1145/263699.263717},
  acmid = {263717},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{godefroid:verisoft:issta98,
  author = {Godefroid, Patrice and Hanmer, Robert S. and Jagadeesan, Lalita Jategaonkar},
  title = {Model checking without a model: an analysis of the heart-beat monitor of a telephone switch using {V}eri{S}oft},
  booktitle = {Proceedings of the 1998 ACM SIGSOFT international symposium on Software testing and analysis},
  series = {ISSTA '98},
  year = {1998},
  isbn = {0-89791-971-8},
  location = {Clearwater Beach, Florida, United States},
  pages = {124--133},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/271771.271800},
  doi = {http://doi.acm.org/10.1145/271771.271800},
  acmid = {271800},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{chiba:javassist:oopsla98,
  author = {Chiba, Shigeru},
  title = {Javassist --- a reflection-based programming wizard for Java},
  booktitle = {Proceedings of the ACM OOPSLA'98 Workshop on Reflective Programming in C++ and Java},
  series = {OOPSLA '98},
  year = {1998},
}

@inproceedings{burckhardt:pct:asplos10,
  author = {Burckhardt, Sebastian and Kothari, Pravesh and Musuvathi, Madanlal and Nagarakatte, Santosh},
  title = {A randomized scheduler with probabilistic guarantees of finding bugs},
  booktitle = {Proceedings of the fifteenth edition of ASPLOS on Architectural support for programming languages and operating systems},
  series = {ASPLOS '10},
  year = {2010},
  isbn = {978-1-60558-839-1},
  location = {Pittsburgh, Pennsylvania, USA},
  pages = {167--178},
  numpages = {12},
  url = {http://doi.acm.org/10.1145/1736020.1736040},
  doi = {http://doi.acm.org/10.1145/1736020.1736040},
  acmid = {1736040},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency, race conditions, randomized algorithms, testing},
}

@inproceedings{exokernel,
 author = {Engler, D. R. and Kaashoek, M. F. and O'Toole,Jr., J.},
 title = {Exokernel: An Operating System Architecture for Application-level Resource Management},
 booktitle = {Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles},
 series = {SOSP '95},
 year = {1995},
 isbn = {0-89791-715-4},
 location = {Copper Mountain, Colorado, USA},
 pages = {251--266},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/224056.224076},
 doi = {10.1145/224056.224076},
 acmid = {224076},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{barrelfish,
 author = {Baumann, Andrew and Barham, Paul and Dagand, Pierre-Evariste and Harris, Tim and Isaacs, Rebecca and Peter, Simon and Roscoe, Timothy and Sch\"{u}pbach, Adrian and Singhania, Akhilesh},
 title = {The Multikernel: A New OS Architecture for Scalable Multicore Systems},
 booktitle = {Proceedings of the ACM SIGOPS 22Nd Symposium on Operating Systems Principles},
 series = {SOSP '09},
 year = {2009},
 isbn = {978-1-60558-752-3},
 location = {Big Sky, Montana, USA},
 pages = {29--44},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/1629575.1629579},
 doi = {10.1145/1629575.1629579},
 acmid = {1629579},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {message passing, multicore processors, scalability},
}

@article{bessey:coverity:acmcomm10,
  author = {Bessey, Al and Block, Ken and Chelf, Ben and Chou, Andy and Fulton, Bryan and Hallem, Seth and Henri-Gros, Charles and Kamsky, Asya and McPeak, Scott and Engler, Dawson},
  title = {A few billion lines of code later: using static analysis to find bugs in the real world},
  journal = {Commun. ACM},
  volume = {53},
  issue = {2},
  month = {February},
  year = {2010},
  issn = {0001-0782},
  pages = {66--75},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1646353.1646374},
  doi = {http://doi.acm.org/10.1145/1646353.1646374},
  acmid = {1646374},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{visser:pathfinder:issta04,
  author = {Visser, Willem and P\v{a}s\v{a}reanu, Corina S. and Khurshid, Sarfraz},
  title = {Test input generation with java PathFinder},
  booktitle = {Proceedings of the 2004 ACM SIGSOFT international symposium on Software testing and analysis},
  series = {ISSTA '04},
  year = {2004},
  isbn = {1-58113-820-2},
  location = {Boston, Massachusetts, USA},
  pages = {97--107},
  numpages = {11},
  url = {http://doi.acm.org/10.1145/1007512.1007526},
  doi = {http://doi.acm.org/10.1145/1007512.1007526},
  acmid = {1007526},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {coverage, model checking, red-black trees, symbolic execution, testing object-oriented programs},
}

@inproceedings{khurshid:pathfinder:tacas03,
  author = {Khurshid, Sarfraz and P\u{a}s\u{a}reanu, Corina S. and Visser, Willem},
  title = {Generalized symbolic execution for model checking and testing},
  booktitle = {Proceedings of the 9th international conference on Tools and algorithms for the construction and analysis of systems},
  series = {TACAS'03},
  year = {2003},
  isbn = {3-540-00898-5},
  location = {Warsaw, Poland},
  pages = {553--568},
  numpages = {16},
  url = {http://portal.acm.org/citation.cfm?id=1765871.1765924},
  acmid = {1765924},
  publisher = {Springer-Verlag},
  address = {Berlin, Heidelberg},
}

@inproceedings{marino:literace:pldi09,
  author = {Marino, Daniel and Musuvathi, Madanlal and Narayanasamy, Satish},
  title = {LiteRace: effective sampling for lightweight data-race detection},
  booktitle = {Proceedings of the 2009 ACM SIGPLAN conference on Programming language design and implementation},
  series = {PLDI '09},
  year = {2009},
  isbn = {978-1-60558-392-1},
  location = {Dublin, Ireland},
  pages = {134--143},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1542476.1542491},
  doi = {http://doi.acm.org/10.1145/1542476.1542491},
  acmid = {1542491},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {concurrency bugs, dynamic data race detection, sampling},
}

@article{eytani:concbench:jconcom06,
  author= {Yaniv Eytani and Klaus Havelund and Scott D. Stoller and Shmuel Ur},
  title= {Toward a Framework and Benchmark for Testing Tools for Multi-Threaded Programs},
  journal = {Concurrency and Computation: Practice \& Experience},
  year =  2006,
  volume = 19,
  number=3,
  pages = {267-279}
}

@INPROCEEDINGS{shadowdrivers,
  author = {Michael M. Swift and Muthukaruppan Annamalai and Brian N. Bershad and Henry M. Levy},
  title = {Recovering Device Drivers},
  booktitle = {IN OSDI},
  year = {2004},
  pages = {1--16},
  publisher = {}
}

@MISC{tandem,
  author = {Joel Bartlett and Jim Gray and Bob Horst},
  title = {Fault Tolerance In Tandem Computer Systems},
  year = {1986}
}

@article{raid,
  author = {Patterson, David A. and Gibson, Garth and Katz, Randy H.},
  title = {A case for redundant arrays of inexpensive disks (RAID)},
  journal = {SIGMOD Rec.},
  volume = {17},
  issue = {3},
  month = {June},
  year = {1988},
  issn = {0163-5808},
  pages = {109--116},
  numpages = {8},
  url = {http://doi.acm.org/10.1145/971701.50214},
  doi = {http://doi.acm.org/10.1145/971701.50214},
  acmid = {50214},
  publisher = {ACM},
  address = {New York, NY, USA},
}

@inproceedings{klee,
  author    = {Cristian Cadar and
    Daniel Dunbar and
      Dawson R. Engler},
  title     = {KLEE: Unassisted and Automatic Generation of High-Coverage
    Tests for Complex Systems Programs},
  booktitle = {OSDI},
  year      = {2008},
  pages     = {209-224},
}

@INPROCEEDINGS{ doubleplay,
      AUTHOR = "Kaushik Veeraraghavan and Dongyoon Lee and Benjamin Wester and Jessica Ouyang and Peter M. Chen and Jason Flinn and Satish Narayanasamy",
      TITLE = "DoublePlay: parallelizing sequential logging and replay.",
      booktitle = "ASPLOS '11",
      PAGES = {15-26},
      YEAR = {2011}
}

@MISC{kvm,
  author = {Qumranet},
  title = {{K}{V}{M}: {K}ernel-based {V}irtualization {D}river White Paper},
  year = {2006}
}

@misc{qcow2,
	TITLE = "Qcow2 Virtual Disk Image Format",
  howpublished = "\url{http://www.linux-kvm.org/page/Qcow2}",
	key = "Qcow2 Virtual Disk Image Format",
}

@INPROCEEDINGS{recoverybox,
  author = {Mary Baker and Mark Sullivan},
  title = {The Recovery Box: Using Fast Recovery to Provide High Availability in the UNIX Environment},
  booktitle = {In Proceedings USENIX Summer Conference},
  year = {1992},
  pages = {31--43}
}

@INPROCEEDINGS{xsyncfs,
  author = {Edmund B. Nightingale and Kaushik Veeraraghavan and Peter M. Chen and Jason Flinn},
  title = {Rethink the sync},
  booktitle = {In Proc. OSDI},
  year = {2006},
  pages = {1--14}
}

@misc{chronicle,
	TITLE = "{C}hronicle {R}ecorder: {V}algrind-based complete, indexed recording of process execution",
  howpublished = "\url{http://code.google.com/p/chronicle-recorder/}",
	key = "{C}hronicle {R}ecorder: {V}algrind-based complete, indexed recording of process execution",
}

@article{valgrind,
 author = {Nethercote, Nicholas and Seward, Julian},
 title = {Valgrind: a framework for heavyweight dynamic binary instrumentation},
 journal = {SIGPLAN Not.},
 volume = {42},
 number = {6},
 month = jun,
 year = {2007},
 pages = {89--100},
 numpages = {12},
}


@misc{vmware_ha,
	TITLE = "{V}{M}ware {H}igh {A}vailability",
  howpublished = "\url{http://www.vmware.com/files/pdf/VMware-High-Availability-DS-EN.pdf}",
	key = "VMware High Availability",
}

@misc{agesen_vmm_benchmarking,
  TITLE = "Performance Aspects of x86 Virtualization by {O}le {A}gesen",
  howpublished = "\url{http://www.vmworld.com/docs/DOC-2476}",
  key = "Performance Aspects of x86 Virtualization by {O}le {A}gesen",
}

@article{embedded_virtualization,
  author = "Gernot Heiser",
  YEAR = {2008},
  title = "The role of virtualization in embedded systems",
  booktitle = "Proceedings of the 1st Workshop on Isolation and Integration in Embedded
    Systems (IIES '08)",
}

@misc{freescale_embedded_hyperv,
  howpublished="P4 Series Communications Platform",
  title="Freescale {S}emiconductor. {F}reescale's Embedded Hypervisor for {Q}or{I}{Q}{T}{M}",
  YEAR="Rev 1, Oct. 2008"
}

@misc{hwassists_hyperv,
  YEAR="Rev 0, Aug. 2009",
  title="Freescale {S}emiconductor. {H}ardware and Software Assists in Virtualization"
}

@misc{pvpower,
  title="{P}aravirtual Extensions to {L}inux for {P}ower {A}rchitecture Virtualization",
  howpublished="\url{http://svn.dd-wrt.com/browser/src/\\linux/pb42/linux-3.2/Documentation/\\virtual/kvm/ppc-pv.txt?rev=18112}"
}

@misc{KVM_on_embedded_Power,
  title="{K}{V}{M} on {E}mbedded {P}ower {A}rchitecture {P}latforms",
  author="Stuart Yoder",
  howpublished="\url{http://www.linux-kvm.org/wiki/images\\/c/c2/2011-forum-embedded-power.pdf}"
}

@misc{ePAPR,
  title="{P}ower.org {S}tandard for {E}mbedded {P}ower {A}rchitecture {P}latform {R}equirements (e{P}{A}{P}{R}) version 1.1",
  howpublished="\url{https://www.power.org/resources/\\downloads/Power\_ePAPR\_APPROVED\_v1.1.pdf}"
}

@inproceedings{lmbench,
 author = {McVoy, Larry and Staelin, Carl},
 title = {lmbench: portable tools for performance analysis},
 booktitle = {USENIX ATC '96},
}

@misc{p1023,
  TITLE= "P1023 Product Summary",
  howpublished = "\url{http://www.freescale.com/webapp/sps/\\site/prod\_summary.jsp?code=P1023}",
  key= "P1023 Product Summary"
}

@misc{p1010,
  TITLE= "P1010 and P1014 low-power communication processors",
  howpublished = "\url{http://cache.freescale.com/files/\\32bit/doc/fact\_sheet/QP1010FS.pdf}",
  key= "P1010 and P1014 low-power communication processors",
}

@misc{bsc9131,
  TITLE = "{Q}or{I}{Q} {Q}onverge {B}{S}{C} 9131 {R}{D}{B} for {F}emtocell Base Station Development",
  howpublished = "\url{http://www.freescale.com/webapp/sps/\\site/prod\_summary.jsp?code=BSC9131RDB}",
  TITLE = "{Q}or{I}{Q} {Q}onverge {B}{S}{C} 9131 {R}{D}{B} for {F}emtocell Base Station Development",
}

@inproceedings{bhargava:npt,
 author = {Bhargava, Ravi and Serebrin, Benjamin and Spadini, Francesco and Manne, Srilatha},
 title = {Accelerating two-dimensional page walks for virtualized systems},
 booktitle = {ASPLOS '08},
}

@misc{power_isa,
  TITLE = "{P}ower {I}{S}{A} {V}ersion 2.06 {R}evision {B}",
  howpublished = "\url{http://www.power.org/resources/\\downloads/PowerISA\_V2.06\_PUBLIC.pdf}",
  key = "{P}ower {I}{S}{A} {V}ersion 2.06 {R}evision {B}"
}

@misc{unixbench,
  TITLE = "byte-unixbench: {A} {U}nix benchmark suite",
  howpublished = "\url{http://code.google.com/p/byte-unixbench}",
  key = "byte-unixbench: {A} {U}nix benchmark suite",
}

@inproceedings{drk,
 author = {Feiner, Peter and Brown, Angela Demke and Goel, Ashvin},
 title = {Comprehensive Kernel Instrumentation via Dynamic Binary Translation},
 booktitle = {Proceedings of the Seventeenth International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS XVII},
 year = {2012},
 isbn = {978-1-4503-0759-8},
 location = {London, England, UK},
 pages = {135--146},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2150976.2150992},
 doi = {10.1145/2150976.2150992},
 acmid = {2150992},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Linux, dynamic binary translation, interrupts, operating system instrumentation},
}

 [download]

@inproceedings{needlepoint,
 author = {Nagarakatte, Santosh and Burckhardt, Sebastian and Martin, Milo M.K. and Musuvathi, Madanlal},
 title = {Multicore acceleration of priority-based schedulers for concurrency bug detection},
 booktitle = {PLDI '12},
}

@inproceedings{taint_trace,
 author = {Cheng, Winnie and Zhao, Qin and Yu, Bei and Hiroshige, Scott},
 title = {TaintTrace: Efficient Flow Tracing with Dynamic Binary Rewriting},
 booktitle = {ISCC '06},
}

@inproceedings{million_watchpoints,
 author = {Zhao, Qin and Rabbah, Rodric and Amarasinghe, Saman and Rudolph, Larry and Wong, Weng-Fai},
 title = {How to do a million watchpoints: efficient debugging using dynamic instrumentation},
 booktitle = {CC'08/ETAPS'08},
}

@inproceedings{dbt_cache_contention_detection,
 author = {Zhao, Qin and Koh, David and Raza, Syed and Bruening, Derek and Wong, Weng-Fai and Amarasinghe, Saman},
 title = {Dynamic cache contention detection in multi-threaded applications},
 booktitle = {VEE '11},
}

@inproceedings{transparent_dbt,
 author = {Bruening, Derek and Zhao, Qin and Amarasinghe, Saman},
 title = {Transparent dynamic instrumentation},
 booktitle = {VEE '12},
}

@inproceedings{pinos_vee07,
 author = {Bungale, Prashanth P. and Luk, Chi-Keung},
 title = {Pin{O}{S}: a programmable framework for whole-system dynamic instrumentation},
 booktitle = {VEE '07},
}

#author = {Song, Dawn and Brumley, David and Yin, Heng and Caballero, Juan and Jager, Ivan and Kang, Min Gyung and Liang, Zhenkai and Newsome, James and Poosankam, Pongsin and Saxena, Prateek},
@inproceedings{bitblaze_iss08,
 author = {Song et. al., Dawn},
 title = {BitBlaze: A New Approach to Computer Security via Binary Analysis},
 booktitle = {ICISS '08},
}

@misc{vmware_precise_exceptions_patent,
  author = {Bugnion, Edouard},
  title = {Binary translator with precise exception synchronization mechanism},
  howpublished={US Patent 7516453, filed June 2000.}
}

@inproceedings{pin,
 author = {Luk, Chi-Keung and Cohn, Robert and Muth, Robert and Patil, Harish and Klauser, Artur and Lowney, Geoff and Wallace, Steven and Reddi, Vijay Janapa and Hazelwood, Kim},
 title = {Pin: building customized program analysis tools with dynamic instrumentation},
 booktitle = {PLDI '05},
}

@inproceedings{vx32,
 author = {Ford, Bryan and Cox, Russ},
 title = {Vx32: lightweight user-level sandboxing on the x86},
 booktitle = {USENIX ATC'08},
}

@inproceedings{jifl,
 author = {Olszewski, Marek and Mierle, Keir and Czajkowski, Adam and Brown, Angela Demke},
 title = {JIT instrumentation: a novel approach to dynamically instrument operating systems},
 booktitle = {EuroSys '07},
}

@misc{kprobes,
  author = "{L}inux {T}echnology {C}enter",
  howpublished="KProbes.\url{http://sourceware.org/systemtap/kprobes/}. last accessed Oct. 19, 2012."
}

@inproceedings{kerninst,
 author = {Tamches, Ariel and Miller, Barton P.},
 title = {Fine-grained dynamic instrumentation of commodity operating system kernels},
 booktitle = {OSDI '99},
}

@inproceedings{dtrace,
 author = {Cantrill, Bryan M. and Shapiro, Michael W. and Leventhal, Adam H.},
 title = {Dynamic instrumentation of production systems},
 booktitle = {ATEC '04},
}

[download]

@inproceedings{splash,
 author = {Woo, Steven Cameron and Ohara, Moriyoshi and Torrie, Evan and Singh, Jaswinder Pal and Gupta, Anoop},
 title = {The {S}{P}{L}{A}{S}{H}-2 programs: characterization and methodological considerations},
 booktitle = {ISCA '95},
}

@misc{double_blind_smprr,
	TITLE = "Technical Report on implementing multiprocessor VM record/replay",
	howpublished = "Full details removed for double blind review",
	TITLE = "Technical Report on implementing multiprocessor VM record/replay",
}

@inproceedings{bershad92fastmutual,
    author = {Brian N. Bershad and David D. Redell and John R. Ellis},
    title = {Fast Mutual Exclusion for Uniprocessors},
    booktitle = {ASPLOS '92},
}

@misc{ooelala_github,
	TITLE = {{ [SOURCE-CODE-REPO] The source code repository of the OOElala compiler by Ankush Phulia, Vaibhav Bhagee, and Sorav Bansal (PLDI20). This repository has received ``Artifact functional'' and ``Artifact reusable'' stamps from PLDI20 artifact review committee.}},
	howpublished = "\url{https://github.com/compilerai/ooelala-project}",
}

@misc{porter_cse591,
	TITLE = {{ [COURSE-WEBPAGE] Don Porter's course on ``Virtualization'' at University of Northern Carolina at Chapel Hill lists the BTKernel paper as required reading, and dedicates a full lecture to it.}},
	howpublished = "\url{https://www.cs.unc.edu/~porter/courses/cse591/s14/syllabus.html}",
}

@misc{sandip_chakraborty_cs60038,
	TITLE = {{ [COURSE-WEBPAGE] Sandip Chakraborty's course on ``Advances in Operating System Design'' at IIT Kharagpur lists Sorav's ASPLOS19 paper in its reading list.}},
	howpublished = "\url{https://cse.iitkgp.ac.in/~sandipc/Courses/CS_60038_Autumn_2019.html}",
}

@misc{c_wg14,
	TITLE = {{ WG14 - The C Standards Committee}},
	howpublished = "\url{http://www.open-std.org/jtc1/sc22/wg14/}",
	key = {{ WG14 - The C Standards Committee}},
}

@misc{cpp_wg21,
	TITLE = {{ WG21 - The C++ Standards Committee - ISOCPP}},
	howpublished = "\url{http://www.open-std.org/jtc1/sc22/wg21/}",
	key = {{ WG21 - The C++ Standards Committee - ISOCPP}},
}

@misc{unicorn_github,
	TITLE = {{ [SOURCE-CODE-REPO] The source code repository of the Unicorn system for distributed CPU/GPU computation by Tarun Beri, Sorav Bansal, and Subodh Kumar (TPDS17).}},
	howpublished = "\url{https://github.com/iitd-plos/unicorn}",
}

@misc{hawkeye_github,
	TITLE = {{ [SOURCE-CODE-REPO] The source code repository of the HawkEye system for OS huge-page management by Ashish Panwar, Sorav Bansal, and K. Gopinath (ASPLOS19).}},
	howpublished = "\url{https://github.com/apanwariisc/HawkEye}",
}

@misc{counter_github,
	TITLE = {{ [SOURCE-CODE-REPO] The source code repository of the counter algorithm for equivalence checker on Github by Shubhani Gupta, Abhishek Rose, and Sorav Bansal (OOPSLA20).}},
	howpublished = "\url{https://github.com/compilerai/counter}",
}

@misc{btkernel_github,
	TITLE = {{ [SOURCE-CODE-REPO] The source code repository of {\sc BTKernel} on Github has received 20 ``Github stars'' (as of August 2020) from several research groups. This work was done by Piyus Kedia and Sorav Bansal (SOSP13).}},
	howpublished = "\url{https://github.com/piyus/btkernel}",
}

@misc{counter_demo,
	TITLE = {{ [ONLINE-DEMO] Online demo of the equivalence checker.}},
	howpublished = "\url{https://compiler.ai/demo/}",
  year = {2020},
}

@misc{ooelala_demo,
	TITLE = {{ [ONLINE-DEMO] Online demo for the OOElala compiler developed by Ankush Phulia, Vaibhav Bhagee, and Sorav Bansal (PLDI20).}},
	howpublished = "\url{http://compiler.ai/}",
}




@inproceedings{lightweight,
	author={Mathias Payer and Enrico Kravina and Thomas R. Gross},
  title={Lightweight Memory Tracing},
  booktitle = {USENIX ATC '13},
}

@inproceedings{btkernel,
 author = {Kedia, Piyus and Bansal, Sorav},
 title = {Fast Dynamic Binary Translation for the Kernel},
 booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
 series = {SOSP '13},
 year = {2013},
 isbn = {978-1-4503-2388-8},
 location = {Farminton, Pennsylvania},
 pages = {101--115},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/2517349.2522718},
 doi = {10.1145/2517349.2522718},
 acmid = {2522718},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@inproceedings{ccem12,
 author = {Kedia, Piyus and Bansal, Sorav and Deshpande, Deepak and Iyer, Sreekanth},
 title = {Building Resilient Cloud Over Unreliable Commodity Infrastructure},
 booktitle = {IEEE Cloud Computing for Emerging Markets (CCEM), Bangalore '12},
}

@misc{scribe,
  author = "Viennot Nicolas",
  title = {Scribe: Transparent, Deterministic Record-Replay},
  howpublished = "\url{http://systems.cs.columbia.edu/projects/scribe}",
}

@misc{ rdrr_software,
  author = "Kedia, Piyus and Bansal, Sorav and Jaffer, Shehbaz and Vijay, Ankur",
  title = "Improving Remote Desktopping through Adaptive Record/Replay",
  month = "January",
  year = "2013",
  howpublished = "\url{http://www.cse.iitd.ernet.in/$\sim$sbansal/rdrr}",
  institution = "IIT Delhi",
  key = "Kedia, Piyus and Bansal, Sorav and Jaffer, Shehbaz and Vijay, Ankur",
}

@inproceedings{rdrr,
 author = {Jaffer, Shehbaz and Kedia, Piyus and Bansal, Sorav},
 title = {Improving Remote Desktopping Through Adaptive Record/Replay},
 booktitle = {Proceedings of the 11th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments},
 series = {VEE '15},
 year = {2015},
 isbn = {978-1-4503-3450-1},
 location = {Istanbul, Turkey},
 pages = {161--172},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2731186.2731193},
 doi = {10.1145/2731186.2731193},
 acmid = {2731193},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cloud computing, deterministic replay, record/replay, remote desktop, virtual desktop infrastructure, virtualization},
}

@inproceedings{igor,
 author = {Feldman, Stuart I. and Brown, Channing B.},
 title = {IGOR: A System for Program Debugging via Reversible Execution},
 booktitle = {PADD '88},
}

@inproceedings{hypervisor,
 author = {Bressoud, T. C. and Schneider, F. B.},
 title = {Hypervisor-based Fault Tolerance},
 booktitle = {SOSP '95},
}



@inproceedings{machreplay,
 author = {Russinovich, Mark and Cogswell, Bryce},
 title = {Replay for Concurrent Non-deterministic Shared-memory Applications},
 booktitle = {PLDI '96},
}

@inproceedings{dejavu,
    author = {Jong-deok Choi and Ton Ngo and John Vlissides and Bowen Alpern and Bowen Alpern and Manu Sridharan and Manu Sridharan},
    title = {A Perturbation-Free Replay Platform for Cross-Optimized Multithreaded Applications},
    booktitle = {In Int. Parallel and Distributed Processing Symp},
    year = {2001},
    pages = {10}
}

@inproceedings{hwreplay,
 author = {Bacon, David F. and Goldstein, Seth Copen},
 title = {Hardware-assisted Replay of Multiprocessor Programs},
 booktitle = {PADD '91},
}

@inproceedings{rerun,
 author = {Hower, Derek R. and Hill, Mark D.},
 title = {Rerun: Exploiting Episodes for Lightweight Memory Race Recording},
 booktitle = {ISCA '08},
}



@inproceedings{Montesinos:2008:DRD:1381306.1382146,
 author = {Montesinos, Pablo and Ceze, Luis and Torrellas, Josep},
 title = {DeLorean: Recording and Deterministically Replaying Shared-Memory Multiprocessor Execution Ef?Ciently},
 booktitle = {ISCA '08},
}



@inproceedings{strata,
 author = {Narayanasamy, Satish and Pereira, Cristiano and Calder, Brad},
 title = {Recording Shared Memory Dependencies Using Strata},
 booktitle = {ASPLOS '06},
}

@inproceedings{opttracing,
 author = {Netzer, Robert H. B.},
 title = {Optimal Tracing and Replay for Debugging Shared-memory Parallel Programs},
 booktitle = {PADD '93},
}

@inproceedings{paralog,
 author = {Vlachos, Evangelos and Goodstein, Michelle L. and Kozuch, Michael A. and Chen, Shimin and Falsafi, Babak and Gibbons, Phillip B. and Mowry, Todd C.},
 title = {ParaLog: Enabling and Accelerating Online Parallel Monitoring of Multithreaded Applications},
 booktitle = {ASPLOS '10},
}

@inproceedings{itracing,
 author = {Bhansali, Sanjay and Chen, Wen-Ke and de Jong, Stuart and Edwards, Andrew and Murray, Ron and Drini\'{c}, Milenko and Miho\v{c}ka, Darek and Chau, Joe},
 title = {Framework for Instruction-level Tracing and Analysis of Program Executions},
 booktitle = {VEE '06},
}

@article{courtois71,
 author = {Courtois, P. J. and Heymans, F. and Parnas, D. L.},
 title = {Concurrent Control with \&Ldquo;Readers\&Rdquo; and \&Ldquo;Writers\&Rdquo;},
 journal = {Commun. ACM},
 volume = {14},
 number = {10},
 month = oct,
 year = {1971},
 issue_date = {Oct. 1971},
}

@article{recplay,
 author = {Ronsse, Michiel and De Bosschere, Koen},
 title = {RecPlay: A Fully Integrated Practical Record/Replay System},
 journal = {ACM Trans. Comput. Syst.},
 issue_date = {May 1999},
 volume = {17},
 number = {2},
 month = may,
 year = {1999},
}



@inproceedings{respec,
 author = {Lee, Dongyoon and Wester, Benjamin and Veeraraghavan, Kaushik and Narayanasamy, Satish and Chen, Peter M. and Flinn, Jason},
 title = {Respec: Efficient Online Multiprocessor Replayvia Speculation and External Determinism},
 booktitle = {Proceedings of the Fifteenth Edition of ASPLOS on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS XV},
 year = {2010},
 isbn = {978-1-60558-839-1},
 location = {Pittsburgh, Pennsylvania, USA},
 pages = {77--90},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1736020.1736031},
 doi = {10.1145/1736020.1736031},
 acmid = {1736031},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {external determinism, replay, speculative execution},
}

@inproceedings{schedule_memoization,
 author = {Cui, Heming and Wu, Jingyue and Tsai, Chia-Che and Yang, Junfeng},
 title = {Stable Deterministic Multithreading Through Schedule Memoization},
 booktitle = {OSDI'10},
}

@inproceedings{dmp,
 author = {Devietti, Joseph and Lucia, Brandon and Ceze, Luis and Oskin, Mark},
 title = {DMP: Deterministic Shared Memory Multiprocessing},
 booktitle = {ASPLOS '09},
}

@inproceedings{kendo,
 author = {Olszewski, Marek and Ansel, Jason and Amarasinghe, Saman},
 title = {Kendo: Efficient Deterministic Multithreading in Software},
 booktitle = {ASPLOS '09},
}

@inproceedings{dthreads,
 author = {Liu, Tongping and Curtsinger, Charlie and Berger, Emery D.},
 title = {Dthreads: Efficient Deterministic Multithreading},
 booktitle = {SOSP '11},
}

@inproceedings{reemu,
 author = {Chen, Yufei and Chen, Haibo},
 title = {Scalable Deterministic Replay in a Parallel Full-system Emulator},
 booktitle = {PPoPP '13},
}

@article{fastio,
  author    = {Piyus Kedia and
               Sorav Bansal},
  title     = {A Software-only Mechanism for Device Passthrough and Sharing},
  journal   = {CoRR},
  volume    = {abs/1508.06367},
  year      = {2015},
  url       = {http://arxiv.org/abs/1508.06367},
  timestamp = {Tue, 01 Sep 2015 14:42:40 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/KediaB15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{bugnet,
 author = {Narayanasamy, Satish and Pokam, Gilles and Calder, Brad},
 title = {BugNet: Continuously Recording Program Execution for Deterministic Replay Debugging},
 booktitle = {Proceedings of the 32Nd Annual International Symposium on Computer Architecture},
 series = {ISCA '05},
 year = {2005},
 isbn = {0-7695-2270-X},
 pages = {284--295},
 numpages = {12},
 url = {https://doi.org/10.1109/ISCA.2005.16},
 doi = {10.1109/ISCA.2005.16},
 acmid = {1069994},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@inproceedings{hypervisor_based_fault_tolerance,
 author = {Bressoud, T. C. and Schneider, F. B.},
 title = {Hypervisor-based Fault Tolerance},
 booktitle = {Proceedings of the Fifteenth ACM Symposium on Operating Systems Principles},
 series = {SOSP '95},
 year = {1995},
 isbn = {0-89791-715-4},
 location = {Copper Mountain, Colorado, USA},
 pages = {1--11},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/224056.224058},
 doi = {10.1145/224056.224058},
 acmid = {224058},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{covert_channels,
 author = {Chen, Ang and Moore, W. Brad and Xiao, Hanjun and Haeberlen, Andreas and Phan, Linh Thi Xuan and Sherr, Micah and Zhou, Wenchao},
 title = {Detecting Covert Timing Channels with Time-deterministic Replay},
 booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'14},
 year = {2014},
 isbn = {978-1-931971-16-4},
 location = {Broomfield, CO},
 pages = {541--554},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=2685048.2685091},
 acmid = {2685091},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{revirt,
 author = {Dunlap, George W. and King, Samuel T. and Cinar, Sukru and Basrai, Murtaza A. and Chen, Peter M.},
 title = {ReVirt: Enabling Intrusion Analysis Through Virtual-machine Logging and Replay},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {Winter 2002},
 volume = {36},
 number = {SI},
 month = dec,
 year = {2002},
 issn = {0163-5980},
 pages = {211--224},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/844128.844148},
 doi = {10.1145/844128.844148},
 acmid = {844148},
 publisher = {ACM},
 address = {New York, NY, USA},
}



@inproceedings{address_sanitizer,
  author    = {Konstantin Serebryany and
               Derek Bruening and
               Alexander Potapenko and
               Dmitriy Vyukov},
  title     = {AddressSanitizer: {A} Fast Address Sanity Checker},
  booktitle = {2012 {USENIX} Annual Technical Conference, Boston, MA, USA, June 13-15,
               2012},
  pages     = {309--318},
  year      = {2012},
  url       = {https://www.usenix.org/conference/atc12/technical-sessions/presentation/serebryany},
  timestamp = {Mon, 19 May 2014 07:40:42 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/usenix/SerebryanyBPV12},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{smprevirt,
 author = {Dunlap, George W. and Lucchetti, Dominic G. and Fetterman, Michael A. and Chen, Peter M.},
 title = {Execution Replay of Multiprocessor Virtual Machines},
 booktitle = {Proceedings of the Fourth ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments},
 series = {VEE '08},
 year = {2008},
 isbn = {978-1-59593-796-4},
 location = {Seattle, WA, USA},
 pages = {121--130},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1346256.1346273},
 doi = {10.1145/1346256.1346273},
 acmid = {1346273},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {ReVirt, Xen, determinism, direct memory access, execution replay, hardware page protections, multiprocessors, multithreading, virtual machines},
}

@inproceedings{asplos13,
 author = {Mittal, Aashish and Bansal, Dushyant and Bansal, Sorav and Sethi, Varun},
 title = {Efficient Virtualization on Embedded Power Architecture\textregistered Platforms},
 booktitle = {Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '13},
 year = {2013},
 isbn = {978-1-4503-1870-9},
 location = {Houston, Texas, USA},
 pages = {445--458},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2451116.2451163},
 doi = {10.1145/2451116.2451163},
 acmid = {2451163},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {adaptive data mirroring, adaptive page resizing, architecture design, code patching, dynamic binary translation, in-place binary translation, power architecture platforms, read/write tracing, tlb, virtual machine monitor, virtualization},
}

@inproceedings{software_packet_processing,
  author = {Bhardwaj, Ankit and Shree, Atul and Reddy V, Bhargav and Sorav Bansal},
  booktitle = {to appear in Proceedings of the Eighth SIGOPS Asia-Pacific Workshop on Systems 2017},
  series = {APSys '17},
  year = {2017},
  location = {Mumbai, India},
}

@inproceedings{mapreduce,
 author = {Dean, Jeffrey and Ghemawat, Sanjay},
 title = {MapReduce: Simplified Data Processing on Large Clusters},
 booktitle = {Proceedings of the 6th Conference on Symposium on Opearting Systems Design \& Implementation - Volume 6},
 series = {OSDI'04},
 year = {2004},
 location = {San Francisco, CA},
 pages = {10--10},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1251254.1251264},
 acmid = {1251264},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}



@inproceedings{dryadlinq,
 author = {Yu, Yuan and Isard, Michael and Fetterly, Dennis and Budiu, Mihai and Erlingsson, \'{U}lfar and Gunda, Pradeep Kumar and Currey, Jon},
 title = {DryadLINQ: A System for General-purpose Distributed Data-parallel Computing Using a High-level Language},
 booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'08},
 year = {2008},
 location = {San Diego, California},
 pages = {1--14},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=1855741.1855742},
 acmid = {1855742},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{ironclad,
 author = {Hawblitzel, Chris and Howell, Jon and Lorch, Jacob R. and Narayan, Arjun and Parno, Bryan and Zhang, Danfeng and Zill, Brian},
 title = {Ironclad Apps: End-to-end Security via Automated Full-system Verification},
 booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'14},
 year = {2014},
 isbn = {978-1-931971-16-4},
 location = {Broomfield, CO},
 pages = {165--181},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=2685048.2685062},
 acmid = {2685062},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{tvi,
 author = {Necula, George C.},
 title = {Translation Validation for an Optimizing Compiler},
 booktitle = {Proceedings of the ACM SIGPLAN 2000 Conference on Programming Language Design and Implementation},
 series = {PLDI '00},
 year = {2000},
 isbn = {1-58113-199-2},
 location = {Vancouver, British Columbia, Canada},
 pages = {83--94},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/349299.349314},
 doi = {10.1145/349299.349314},
 acmid = {349314},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{ddec,
 author = {Sharma, Rahul and Schkufza, Eric and Churchill, Berkeley and Aiken, Alex},
 title = {Data-driven Equivalence Checking},
 booktitle = {Proceedings of the 2013 ACM SIGPLAN International Conference on Object Oriented Programming Systems Languages \&\#38; Applications},
 series = {OOPSLA '13},
 year = {2013},
 isbn = {978-1-4503-2374-1},
 location = {Indianapolis, Indiana, USA},
 pages = {391--406},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2509136.2509509},
 doi = {10.1145/2509136.2509509},
 acmid = {2509509},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {binary analysis, compilers, markov chain monte carlo, optimization, smt, superoptimization, verification, x86},
}

@inproceedings{pec,
 author = {Kundu, Sudipta and Tatlock, Zachary and Lerner, Sorin},
 title = {Proving Optimizations Correct Using Parameterized Program Equivalence},
 booktitle = {Proceedings of the 2009 ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '09},
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {327--337},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1542476.1542513},
 doi = {10.1145/1542476.1542513},
 acmid = {1542513},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler optimization, correctness, translation validation},
}


@inproceedings{pnueli98,
 author = {Pnueli, Amir and Siegel, Michael and Singerman, Eli},
 title = {Translation Validation},
 booktitle = {Proceedings of the 4th International Conference on Tools and Algorithms for Construction and Analysis of Systems},
 series = {TACAS '98},
 year = {1998},
 isbn = {3-540-64356-7},
 pages = {151--166},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=646482.691453},
 acmid = {691453},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
}

@inproceedings{cobalt,
 author = {Lerner, Sorin and Millstein, Todd and Chambers, Craig},
 title = {Automatically Proving the Correctness of Compiler Optimizations},
 booktitle = {Proceedings of the ACM SIGPLAN 2003 Conference on Programming Language Design and Implementation},
 series = {PLDI '03},
 year = {2003},
 isbn = {1-58113-662-5},
 location = {San Diego, California, USA},
 pages = {220--231},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/781131.781156},
 doi = {10.1145/781131.781156},
 acmid = {781156},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated correctness proofs, compiler optimization},
}

@inproceedings{rhodium,
 author = {Lerner, Sorin and Millstein, Todd and Rice, Erika and Chambers, Craig},
 title = {Automated Soundness Proofs for Dataflow Analyses and Transformations via Local Rules},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '05},
 year = {2005},
 isbn = {1-58113-830-X},
 location = {Long Beach, California, USA},
 pages = {364--377},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1040305.1040335},
 doi = {10.1145/1040305.1040335},
 acmid = {1040335},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated correctness proofs, compiler optimization},
}

@article{permute,
 author = {Zuck, Lenore and Pnueli, Amir and Goldberg, Benjamin and Barrett, Clark and Fang, Yi and Hu, Ying},
 title = {Translation and Run-Time Validation of Loop Transformations},
 journal = {Form. Methods Syst. Des.},
 issue_date = {November  2005},
 volume = {27},
 number = {3},
 month = nov,
 year = {2005},
 issn = {0925-9856},
 pages = {335--360},
 numpages = {26},
 url = {http://dx.doi.org/10.1007/s10703-005-3402-z},
 doi = {10.1007/s10703-005-3402-z},
 acmid = {1107808},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {global optimizations, loop transformations, optimizing compilers, reordering transformations, run-time validation, speculative optimizations, translation validation, verification conditions},
}

@inproceedings{compcert,
  author = {Xavier Leroy},
  title = {Formal certification of a compiler back-end, or:
                   programming a compiler with a proof assistant},
  booktitle = {33rd ACM symposium on Principles of Programming Languages},
  year = 2006,
  publisher = {ACM Press},
  pages = {42--54},
  url = {http://gallium.inria.fr/~xleroy/publi/compiler-certif.pdf},
  urlpublisher = {http://doi.acm.org/10.1145/1111037.1111042},
  hal = {http://hal.inria.fr/inria-00000963/},
  abstract = {This paper reports on the development and formal certification (proof
of semantic preservation) of a compiler from Cminor (a C-like
imperative language) to PowerPC assembly code, using the Coq proof
assistant both for programming the compiler and for proving its
correctness.  Such a certified compiler is useful in the context of
formal methods applied to the certification of critical software: the
certification of the compiler guarantees that the safety properties
proved on the source code hold for the executable compiled code as well.},
  pubkind = {conf-int-mono}
}

@InProceedings{yices,
  author =   {Dutertre, Bruno},
  title =    {Yices 2.2},
  booktitle = {Computer-Aided Verification (CAV'2014)},
  editor =       {Biere, Armin and Bloem, Roderick},
  year =   2014,
  volume =       8559,
  series =       {Lecture Notes in Computer Science},
  pages =        {737--744},
  month =    {July},
  publisher =    {Springer}}

@misc{yices_bug,
  title = {Yices2 bug report},
  howpublished = "\url{https://github.com/SRI-CSL/yices2/issues/146}",
  year = {2020}
}

@misc{dietlibc,
  title = {diet libc webpage},
  howpublished = "\url{https://www.fefe.de/dietlibc/}",
  year = {2020}
}

@misc{openbsdlibc,
  title = {OpenBSD libc sources},
  howpublished = "\url{https://github.com/openbsd/src/tree/master/lib/libc}",
  year = {2020}
}

@inproceedings{eqsat,
  author = {Tate, Ross and Stepp, Michael and Tatlock, Zachary and Lerner, Sorin},
  title = {Equality Saturation: a New Approach to Optimization},
  booktitle = {{POPL} '09: Proceedings of the 36th annual {ACM} {SIGPLAN-SIGACT} symposium on Principles of Programming Languages},
  year = {2009},
  isbn = {978-1-60558-379-2},
  pages = {264--276},
  location = {Savannah, GA, USA},
  doi = {http://doi.acm.org/10.1145/1480881.1480915},
  publisher = {{ACM}},
  address = {New York, NY, USA},
  url = {http://www.cs.cornell.edu/~ross/publications/eqsat/}
}

@inproceedings{stackc,
 author = {Wang, Xi and Zeldovich, Nickolai and Kaashoek, M. Frans and Solar-Lezama, Armando},
 title = {Towards Optimization-safe Systems: Analyzing the Impact of Undefined Behavior},
 booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
 series = {SOSP '13},
 year = {2013},
 isbn = {978-1-4503-2388-8},
 location = {Farminton, Pennsylvania},
 pages = {260--275},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2517349.2522728},
 doi = {10.1145/2517349.2522728},
 acmid = {2522728},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{houdini,
year={2001},
isbn={978-3-540-41791-0},
booktitle={FME 2001: Formal Methods for Increasing Software Productivity},
volume={2021},
series={Lecture Notes in Computer Science},
doi={10.1007/3-540-45251-6_29},
title={Houdini, an Annotation Assistant for ESC/Java},
url={http://dx.doi.org/10.1007/3-540-45251-6_29},
publisher={Springer Berlin Heidelberg},
author={Flanagan, Cormac and Leino, K.RustanM.},
pages={500-517},
language={English}
}

@misc{spec_cint2000,
  TITLE={{S}{P}{E}{C} {C}{I}{N}{T}2000 {B}enchmark descriptions},
  howpublished="\url{https://www.spec.org/cpu2000/CINT2000/}",
  key={SPEC CINT2000 Benchmark Descriptions},
}

@article{spec_cpu2006,
 author = {Henning, John L.},
 title = {{S}{P}{E}{C} {C}{P}{U}2006 {B}enchmark descriptions},
 journal = {SIGARCH Comput. Archit. News},
 issue_date = {September 2006},
 volume = {34},
 number = {4},
 month = sep,
 year = {2006},
 issn = {0163-5964},
 pages = {1--17},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/1186736.1186737},
 doi = {10.1145/1186736.1186737},
 acmid = {1186737},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@incollection{onthefly,
year={1992},
isbn={978-3-540-55179-9},
booktitle={Computer Aided Verification},
volume={575},
series={Lecture Notes in Computer Science},
editor={Larsen, KimG. and Skou, Arne},
doi={10.1007/3-540-55179-4_18},
title={"On the fly" verification of behavioural equivalences and preorders},
url={http://dx.doi.org/10.1007/3-540-55179-4_18},
publisher={Springer Berlin Heidelberg},
author={Fernandez, Jean-Claude and Mounier, Laurent},
pages={181-191},
language={English}
}

@MISC{onthefly2,
    author = {Jean-Claude Fernandez and Laurent Mounier},
    title = {Verifying Bisimulations "On the Fly"},
    year = {1990}
}

@ARTICLE{bisim,
    author = {Jean-Claude Fernandez},
    title = {An Implementation of an Efficient Algorithm for Bisimulation Equivalence},
    journal = {Science of Computer Programming},
    year = {1989},
    volume = {13},
    pages = {13--219}
}

@inproceedings{z3,
 author = {De Moura, Leonardo and Bj{\o}rner, Nikolaj},
 title = {Z3: An Efficient SMT Solver},
 booktitle = {Proceedings of the Theory and Practice of Software, 14th International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
 series = {TACAS'08/ETAPS'08},
 year = {2008},
 isbn = {3-540-78799-2, 978-3-540-78799-0},
 location = {Budapest, Hungary},
 pages = {337--340},
 numpages = {4},
 url = {http://dl.acm.org/citation.cfm?id=1792734.1792766},
 acmid = {1792766},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}


@article{simplify,
 author = {Detlefs, David and Nelson, Greg and Saxe, James B.},
 title = {Simplify: A Theorem Prover for Program Checking},
 journal = {J. ACM},
 issue_date = {May 2005},
 volume = {52},
 number = {3},
 month = may,
 year = {2005},
 issn = {0004-5411},
 pages = {365--473},
 numpages = {109},
 url = {http://doi.acm.org/10.1145/1066100.1066102},
 doi = {10.1145/1066100.1066102},
 acmid = {1066102},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Theorem proving, decision procedures, program checking}
}

@book{sieve_algo,
 author = {Sedgewick, Robert},
 title = {Algorithms in C++},
 year = {2013},
 isbn = {0321606337, 9780321606334},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
}
@inproceedings{invgen,
 author = {Gupta, Ashutosh and Rybalchenko, Andrey},
 title = {InvGen: An Efficient Invariant Generator},
 booktitle = {Proceedings of the 21st International Conference on Computer Aided Verification},
 series = {CAV '09},
 year = {2009},
 isbn = {978-3-642-02657-7},
 location = {Grenoble, France},
 pages = {634--640},
 numpages = {7},
 url = {http://dx.doi.org/10.1007/978-3-642-02658-4_48},
 doi = {10.1007/978-3-642-02658-4_48},
 acmid = {1575112},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@article{daikon,
 author = {Ernst, Michael D. and Perkins, Jeff H. and Guo, Philip J. and McCamant, Stephen and Pacheco, Carlos and Tschantz, Matthew S. and Xiao, Chen},
 title = {The Daikon System for Dynamic Detection of Likely Invariants},
 journal = {Sci. Comput. Program.},
 issue_date = {December, 2007},
 volume = {69},
 number = {1-3},
 month = dec,
 year = {2007},
 issn = {0167-6423},
 pages = {35--45},
 numpages = {11},
 url = {http://dx.doi.org/10.1016/j.scico.2007.01.015},
 doi = {10.1016/j.scico.2007.01.015},
 acmid = {1321800},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Daikon, Dynamic analysis, Dynamic invariant detection, Inductive logic programming, Inference, Invariant, Likely invariant, Program understanding, Specification, Specification mining},
}

@inproceedings{abstract_int,
 author = {Cousot, Patrick and Halbwachs, Nicolas},
 title = {Automatic Discovery of Linear Restraints Among Variables of a Program},
 booktitle = {Proceedings of the 5th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
 series = {POPL '78},
 year = {1978},
 location = {Tucson, Arizona},
 pages = {84--96},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/512760.512770},
 doi = {10.1145/512760.512770},
 acmid = {512770},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{hawblitzel13,
 author = {Hawblitzel, Chris and Lahiri, Shuvendu K. and Pawar, Kshama and Hashmi, Hammad and Gokbulut, Sedar and Fernando, Lakshan and Detlefs, Dave and Wadsworth, Scott},
 title = {Will You Still Compile Me Tomorrow? Static Cross-version Compiler Validation},
 booktitle = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering},
 series = {ESEC/FSE 2013},
 year = {2013},
 isbn = {978-1-4503-2237-9},
 location = {Saint Petersburg, Russia},
 pages = {191--201},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2491411.2491442},
 doi = {10.1145/2491411.2491442},
 acmid = {2491442},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Compilers, Translation Validation, Verification},
}

@inproceedings{lahiri15,
author       = {Shuvendu Lahiri and Rohit Sinha and Chris Hawblitzel},
booktitle    = {Computer Aided Verification (CAV'15)},
month        = {July},
publisher    = {Springer},
title        = {Automatic Rootcausing for Program Equivalence Failures in Binaries},
url          = {http://research.microsoft.com/apps/pubs/default.aspx?id=244567},
year         = {2015},
}

@incollection{strichman_regressverify,
year={2008},
isbn={978-3-540-69147-1},
booktitle={Verified Software: Theories, Tools, Experiments},
volume={4171},
series={Lecture Notes in Computer Science},
editor={Meyer, Bertrand and Woodcock, Jim},
doi={10.1007/978-3-540-69149-5_54},
title={Regression Verification - A Practical Way to Verify Programs},
url={http://dx.doi.org/10.1007/978-3-540-69149-5_54},
publisher={Springer Berlin Heidelberg},
author={Strichman, Ofer and Godlin, Benny},
pages={496-501},
language={English}
}

@inproceedings{felsing14,
 author = {Felsing, Dennis and Grebing, Sarah and Klebanov, Vladimir and R\"{u}mmer, Philipp and Ulbrich, Mattias},
 title = {Automating Regression Verification},
 booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
 series = {ASE '14},
 year = {2014},
 isbn = {978-1-4503-3013-8},
 location = {Vasteras, Sweden},
 pages = {349--360},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2642937.2642987},
 doi = {10.1145/2642937.2642987},
 acmid = {2642987},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {formal methods, invariant generation, program equivalence, regression verification},
}

@Inproceedings {lahiri13,
author       = {Shuvendu Lahiri and Ken McMillan and Rahul Sharma and Chris Hawblitzel},
booktitle    = {Foundations of Software Engineering (FSE'13)},
month        = {August},
publisher    = {ACM},
title        = {Differential Assertion Checking},
url          = {http://research.microsoft.com/apps/pubs/default.aspx?id=193772},
year         = {2013},
}

@Inproceedings {symdiff,
author       = {Shuvendu Lahiri and Chris Hawblitzel and Ming Kawaguchi and Henrique Rebelo},
booktitle    = {Computer Aided Verification (CAV '12)  (Tool description)},
month        = {July},
publisher    = {Springer},
title        = {SymDiff: A language-agnostic semantic diff tool for imperative programs},
url          = {http://research.microsoft.com/apps/pubs/default.aspx?id=161804},
year         = {2012},
}

@inproceedings{ramos11,
 author = {Ramos, David A and Engler, Dawson R.},
 title = {Practical, Low-effort Equivalence Verification of Real Code},
 booktitle = {Proceedings of the 23rd International Conference on Computer Aided Verification},
 series = {CAV'11},
 year = {2011},
 isbn = {978-3-642-22109-5},
 location = {Snowbird, UT},
 pages = {669--685},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=2032305.2032360},
 acmid = {2032360},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{stoke,
 author = {Schkufza, Eric and Sharma, Rahul and Aiken, Alex},
 title = {Stochastic Superoptimization},
 booktitle = {Proceedings of the Eighteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '13},
 year = {2013},
 isbn = {978-1-4503-1870-9},
 location = {Houston, Texas, USA},
 pages = {305--316},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2451116.2451150},
 doi = {10.1145/2451116.2451150},
 acmid = {2451150},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {64-bit, binary, markov chain monte carlo, mcmc, smt, stochastic search, superoptimization, x86, x86-64},
}

@techreport{milner71,
 author = {Milner, Robin},
 title = {An Algebraic Definition of Simulation Between Programs},
 year = {1971},
 publisher = {Stanford University},
 address = {Stanford, CA, USA},
}

@incollection{namjoshi13,
year={2013},
isbn={978-3-642-38855-2},
booktitle={Static Analysis},
volume={7935},
series={Lecture Notes in Computer Science},
editor={Logozzo, Francesco and Fähndrich, Manuel},
doi={10.1007/978-3-642-38856-9_17},
title={Witnessing Program Transformations},
url={http://dx.doi.org/10.1007/978-3-642-38856-9_17},
publisher={Springer Berlin Heidelberg},
author={Namjoshi, KedarS. and Zuck, LenoreD.},
pages={304-323},
language={English}
}

@incollection{boolector,
year={2009},
isbn={978-3-642-00767-5},
booktitle={Tools and Algorithms for the Construction and Analysis of Systems},
volume={5505},
series={Lecture Notes in Computer Science},
editor={Kowalewski, Stefan and Philippou, Anna},
doi={10.1007/978-3-642-00768-2_16},
title={Boolector: An Efficient SMT Solver for Bit-Vectors and Arrays},
url={http://dx.doi.org/10.1007/978-3-642-00768-2_16},
publisher={Springer Berlin Heidelberg},
author={Brummayer, Robert and Biere, Armin},
pages={174-177},
language={English}
}

@article{kanade09,
 author = {Kanade, Aditya and Sanyal, Amitabha and Khedker, Uday P.},
 title = {Validation of GCC Optimizers Through Trace Generation},
 journal = {Softw. Pract. Exper.},
 issue_date = {April 2009},
 volume = {39},
 number = {6},
 month = apr,
 year = {2009},
 issn = {0038-0644},
 pages = {611--639},
 numpages = {29},
 url = {http://dx.doi.org/10.1002/spe.v39:6},
 doi = {10.1002/spe.v39:6},
 acmid = {1526667},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
 keywords = {GCC, PVS, compiler optimization, temporal logic, translation validation},
}

@inproceedings{tristan_tv_eqsat11,
 author = {Tristan, Jean-Baptiste and Govereau, Paul and Morrisett, Greg},
 title = {Evaluating Value-graph Translation Validation for LLVM},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {295--305},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1993498.1993533},
 doi = {10.1145/1993498.1993533},
 acmid = {1993533},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {llvm, optimization, symbolic evaluation, translation validation},
}

@inproceedings{stepp_eqsat_llvm11,
 author = {Stepp, Michael and Tate, Ross and Lerner, Sorin},
 title = {Equality-based Translation Validator for LLVM},
 booktitle = {Proceedings of the 23rd International Conference on Computer Aided Verification},
 series = {CAV'11},
 year = {2011},
 isbn = {978-3-642-22109-5},
 location = {Snowbird, UT},
 pages = {737--742},
 numpages = {6},
 url = {http://dl.acm.org/citation.cfm?id=2032305.2032364},
 acmid = {2032364},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{llvm_verify_zhao12,
 author = {Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo M.K. and Zdancewic, Steve},
 title = {Formalizing the LLVM Intermediate Representation for Verified Program Transformations},
 booktitle = {Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '12},
 year = {2012},
 isbn = {978-1-4503-1083-3},
 location = {Philadelphia, PA, USA},
 pages = {427--440},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2103656.2103709},
 doi = {10.1145/2103656.2103709},
 acmid = {2103709},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, LLVM, memory safety},
}

@inproceedings{ssa_verify_zhao13,
 author = {Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo M.K. and Zdancewic, Steve},
 title = {Formal Verification of SSA-based Optimizations for LLVM},
 booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '13},
 year = {2013},
 isbn = {978-1-4503-2014-6},
 location = {Seattle, Washington, USA},
 pages = {175--186},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2491956.2462164},
 doi = {10.1145/2491956.2462164},
 acmid = {2462164},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coq, llvm, single static assignment},
}

@inproceedings{alive15,
 author = {Lopes, Nuno P. and Menendez, David and Nagarakatte, Santosh and Regehr, John},
 title = {Provably Correct Peephole Optimizations with Alive},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI 2015},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {22--32},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2737924.2737965},
 doi = {10.1145/2737924.2737965},
 acmid = {2737965},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Alive, Compiler Verification, Peephole Optimization},
}

@inproceedings{csmith,
 author = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
 title = {Finding and Understanding Bugs in C Compilers},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {283--294},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993532},
 doi = {10.1145/1993498.1993532},
 acmid = {1993532},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated testing, compiler defect, compiler testing, random program generation, random testing},
}

@inproceedings{emi,
 author = {Le, Vu and Afshari, Mehrdad and Su, Zhendong},
 title = {Compiler Validation via Equivalence Modulo Inputs},
 booktitle = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '14},
 year = {2014},
 isbn = {978-1-4503-2784-8},
 location = {Edinburgh, United Kingdom},
 pages = {216--226},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/2594291.2594334},
 doi = {10.1145/2594291.2594334},
 acmid = {2594334},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated testing, compiler testing, equivalent program variants, miscompilation},
}

@inproceedings{emi_stochastic,
 author = {Le, Vu and Sun, Chengnian and Su, Zhendong},
 title = {Finding Deep Compiler Bugs via Guided Stochastic Program Mutation},
 booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA 2015},
 year = {2015},
 isbn = {978-1-4503-3689-5},
 location = {Pittsburgh, PA, USA},
 pages = {386--399},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2814270.2814319},
 doi = {10.1145/2814270.2814319},
 acmid = {2814319},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Compiler testing, Markov Chain Monte Carlo, automated testing, equivalent program variants},
}

@inproceedings{bap,
 author = {Brumley, David and Jager, Ivan and Avgerinos, Thanassis and Schwartz, Edward J.},
 title = {BAP: A Binary Analysis Platform},
 booktitle = {Proceedings of the 23rd International Conference on Computer Aided Verification},
 series = {CAV'11},
 year = {2011},
 isbn = {978-3-642-22109-5},
 location = {Snowbird, UT},
 pages = {463--469},
 numpages = {7},
 url = {http://dl.acm.org/citation.cfm?id=2032305.2032342},
 acmid = {2032342},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{opt_from_proofs,
 author = {Tate, Ross and Stepp, Michael and Lerner, Sorin},
 title = {Generating Compiler Optimizations from Proofs},
 booktitle = {Proceedings of the 37th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '10},
 year = {2010},
 isbn = {978-1-60558-479-9},
 location = {Madrid, Spain},
 pages = {389--402},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1706299.1706345},
 doi = {10.1145/1706299.1706345},
 acmid = {1706345},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler optimization, explanation-based learning, proof generalization},
}

@inproceedings{cove,
 author = {Sharma, Rahul and Schkufza, Eric and Churchill, Berkeley and Aiken, Alex},
 title = {Conditionally Correct Superoptimization},
 booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA 2015},
 year = {2015},
 isbn = {978-1-4503-3689-5},
 location = {Pittsburgh, PA, USA},
 pages = {147--162},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2814270.2814278},
 doi = {10.1145/2814270.2814278},
 acmid = {2814278},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Binary Analysis, Compilers, Markov Chain Monte Carlo, Optimization, SMT, Superoptimization, Verification, x86},
}

@inproceedings{scaling_up_superopt,
 author = {Phothilimthana, Phitchaya Mangpo and Thakur, Aditya and Bodik, Rastislav and Dhurjati, Dinakar},
 title = {Scaling Up Superoptimization},
 booktitle = {Proceedings of the Twenty-First International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '16},
 year = {2016},
 isbn = {978-1-4503-4091-5},
 location = {Atlanta, Georgia, USA},
 pages = {297--310},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2872362.2872387},
 doi = {10.1145/2872362.2872387},
 acmid = {2872387},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {SMT, program synthesis, superoptimization},
}

@online{agnerfog,
  author = {Fog, Agner},
  title = "Instruction Tables",
  url = {http://www.agner.org/optimize/instruction\_tables.pdf},
  urldate = "2016-01-09",
  year = 2016,
  key = "Instruction Tables",
}

@inproceedings{mapreduce_program_synthesis,
 author = {Smith, Calvin and Albarghouthi, Aws},
 title = {MapReduce Program Synthesis},
 booktitle = {Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '16},
 year = {2016},
 isbn = {978-1-4503-4261-2},
 location = {Santa Barbara, CA, USA},
 pages = {326--340},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/2908080.2908102},
 doi = {10.1145/2908080.2908102},
 acmid = {2908102},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data analysis, program synthesis, verification},
}

@inproceedings{synthesis_poly_refinement_types,
 author = {Polikarpova, Nadia and Kuraj, Ivan and Solar-Lezama, Armando},
 title = {Program Synthesis from Polymorphic Refinement Types},
 booktitle = {Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '16},
 year = {2016},
 isbn = {978-1-4503-4261-2},
 location = {Santa Barbara, CA, USA},
 pages = {522--538},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/2908080.2908093},
 doi = {10.1145/2908080.2908093},
 acmid = {2908093},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Functional Programming, Predicate Abstraction, Program Synthesis, Refinement Types},
}

@INPROCEEDINGS{c_to_verilog,
author={A. Leung and D. Bounov and S. Lerner},
booktitle={Formal Methods and Models for Codesign (MEMOCODE), 2015 ACM/IEEE International Conference on},
title={C-to-Verilog translation validation},
year={2015},
pages={42-47},
keywords={C language;formal specification;hardware description languages;high level synthesis;program compilers;program verification;C language;C program;C++ language;C-to-Verilog translation validation;HLS tools;HLS translation process;VTV tool;Verilog code generation;Xilinx Vivado HLS compiler;bugs;correctness verification;digital circuit design;hardware description language;high-level languages;high-level specifications;high-level synthesis tools;Hardware;Hardware design languages;Ports (Computers);Program processors;Protocols;Semantics;Syntactics},
doi={10.1109/MEMCOD.2015.7340466},
month={Sept},
}



@article{lopes16,
 author = {Lopes, Nuno P. and Monteiro, Jos{\'e}},
 title = {Automatic Equivalence Checking of Programs with Uninterpreted Functions and Integer Arithmetic},
 journal = {Int. J. Softw. Tools Technol. Transf.},
 issue_date = {August    2016},
 volume = {18},
 number = {4},
 month = aug,
 year = {2016},
 issn = {1433-2779},
 pages = {359--374},
 numpages = {16},
 url = {http://dx.doi.org/10.1007/s10009-015-0366-1},
 doi = {10.1007/s10009-015-0366-1},
 acmid = {2974572},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {Automatic verification, Compiler optimizations, Program equivalence},
}

@inproceedings{covac,
 author = {Zaks, Anna and Pnueli, Amir},
 title = {CoVaC: Compiler Validation by Program Analysis of the Cross-Product},
 booktitle = {Proceedings of the 15th International Symposium on Formal Methods},
 series = {FM '08},
 year = {2008},
 isbn = {978-3-540-68235-6},
 location = {Turku, Finland},
 pages = {35--51},
 numpages = {17},
 url = {http://dx.doi.org/10.1007/978-3-540-68237-0_5},
 doi = {10.1007/978-3-540-68237-0_5},
 acmid = {1423691},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{debray98,
 author = {Debray, Saumya and Muth, Robert and Weippert, Matthew},
 title = {Alias Analysis of Executable Code},
 booktitle = {Proceedings of the 25th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '98},
 year = {1998},
 isbn = {0-89791-979-3},
 location = {San Diego, California, USA},
 pages = {12--24},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/268946.268948},
 doi = {10.1145/268946.268948},
 acmid = {268948},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{fernandez02,
 author = {Fern\'{a}ndez, Manel and Espasa, Roger},
 title = {Speculative Alias Analysis for Executable Code},
 booktitle = {Proceedings of the 2002 International Conference on Parallel Architectures and Compilation Techniques},
 series = {PACT '02},
 year = {2002},
 isbn = {0-7695-1620-3},
 pages = {222--231},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=645989.674312},
 acmid = {674312},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@Article{zuck03,
  author =     "Lenore Zuck and Amir Pnueli and Yi Fang and Benjamin Goldberg",
  title =      "VOC: A Methodology for the Translation Validation of Optimizing Compilers",
  journal =    j-jucs,
  year =       "2003",
  volume =     "9",
  number =     "3",
  pages =      "223--247",
  date =       "2003-03-28",
  month =      "mar",
}

@article{zuck05,
 author = {Zuck, Lenore and Pnueli, Amir and Goldberg, Benjamin and Barrett, Clark and Fang, Yi and Hu, Ying},
 title = {Translation and Run-Time Validation of Loop Transformations},
 journal = {Form. Methods Syst. Des.},
 issue_date = {November  2005},
 volume = {27},
 number = {3},
 month = nov,
 year = {2005},
 issn = {0925-9856},
 pages = {335--360},
 numpages = {26},
 url = {http://dx.doi.org/10.1007/s10703-005-3402-z},
 doi = {10.1007/s10703-005-3402-z},
 acmid = {1107808},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {global optimizations, loop transformations, optimizing compilers, reordering transformations, run-time validation, speculative optimizations, translation validation, verification conditions},
}

@article{heffter05,
 author = {Poetzsch-Heffter, Arnd and Gawkowski, Marek},
 title = {Towards Proof Generating Compilers},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {May, 2005},
 volume = {132},
 number = {1},
 month = may,
 year = {2005},
 issn = {1571-0661},
 pages = {37--51},
 numpages = {15},
 url = {http://dx.doi.org/10.1016/j.entcs.2005.03.023},
 doi = {10.1016/j.entcs.2005.03.023},
 acmid = {1705784},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {automatic proof generation, compilation correctness, formal translation contract, proof checking, translation validation},
}

@article{l4,
 author = {Liedtke, Jochen},
 title = {Toward Real Microkernels},
 journal = {Commun. ACM},
 issue_date = {Sept. 1996},
 volume = {39},
 number = {9},
 month = sep,
 year = {1996},
 issn = {0001-0782},
 pages = {70--77},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/234215.234473},
 doi = {10.1145/234215.234473},
 acmid = {234473},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Bansal:2006:AGP:1168857.1168906,
 author = {Bansal, Sorav and Aiken, Alex},
 title = {Automatic Generation of Peephole Superoptimizers},
 booktitle = {Proceedings of the 12th International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS XII},
 year = {2006},
 isbn = {1-59593-451-0},
 location = {San Jose, California, USA},
 pages = {394--403},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1168857.1168906},
 doi = {10.1145/1168857.1168906},
 acmid = {1168906},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {code selection, peephole optimization, superoptimization},
}

@article{singularity,
 author = {Hunt, Galen C. and Larus, James R.},
 title = {Singularity: Rethinking the Software Stack},
 journal = {SIGOPS Oper. Syst. Rev.},
 issue_date = {April 2007},
 volume = {41},
 number = {2},
 month = apr,
 year = {2007},
 issn = {0163-5980},
 pages = {37--49},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1243418.1243424},
 doi = {10.1145/1243418.1243424},
 acmid = {1243424},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {hardware protection domains, manifest-based programs (MBPs), operating systems, program specification, program verification, safe programming languages, sealed kernel, sealed process architecture, software-isolated processes (SIPs), unsafe code tax},
}

@inproceedings{tockos,
 author = {Levy, Amit and Campbell, Bradford and Ghena, Branden and Giffin, Daniel B. and Pannuto, Pat and Dutta, Prabal and Levis, Philip},
 title = {Multiprogramming a 64kB Computer Safely and Efficiently},
 booktitle = {Proceedings of the 26th Symposium on Operating Systems Principles},
 series = {SOSP '17},
 year = {2017},
 isbn = {978-1-4503-5085-3},
 location = {Shanghai, China},
 pages = {234--251},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/3132747.3132786},
 doi = {10.1145/3132747.3132786},
 acmid = {3132786},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{unicorn,
 author = {Beri, Tarun and Bansal, Sorav and Kumar, Subodh},
 title = {The Unicorn Runtime: Efficient Distributed Shared Memory Programming for Hybrid CPU-GPU Clusters},
 journal = {IEEE Trans. Parallel Distrib. Syst.},
 issue_date = {May 2017},
 volume = {28},
 number = {5},
 month = may,
 year = {2017},
 issn = {1045-9219},
 pages = {1518--1534},
 numpages = {17},
 url = {https://doi.org/10.1109/TPDS.2016.2616314},
 doi = {10.1109/TPDS.2016.2616314},
 acmid = {3083912},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
}

@INPROCEEDINGS{ipdps15,
author={T. Beri and S. Bansal and S. Kumar},
booktitle={2015 IEEE International Parallel and Distributed Processing Symposium},
title={A Scheduling and Runtime Framework for a Cluster of Heterogeneous Machines with Multiple Accelerators},
year={2015},
volume={},
number={},
pages={146-155},
keywords={graphics processing units;parallel processing;resource allocation;scheduling;CPU+GPU cluster programming;accelerator;data transfer;graphics processing unit;heterogeneous machine;high-performance computing;load balancing;runtime framework;scheduling framework;task allocation;transaction style bulk-synchronous semantics;Data transfer;Graphics processing units;Kernel;Message systems;Programming;Runtime;Subscriptions;Heterogeneous Architectures;High Performance Computing;Hybrid CPU-GPU Clusters;Multi Scheduling;Work Stealing},
doi={10.1109/IPDPS.2015.12},
ISSN={1530-2075},
month={May},
}

@INPROCEEDINGS{prosteal,
author={T. Beri and S. Bansal and S. Kumar},
booktitle={2015 IEEE International Parallel and Distributed Processing Symposium Workshop},
title={ProSteal: A Proactive Work Stealer for Bulk Synchronous Tasks Distributed on a Cluster of Heterogeneous Machines with Multiple Accelerators},
year={2015},
volume={},
number={},
pages={17-26},
keywords={graphics processing units;parallel programming;resource allocation;shared memory systems;GPUs;ProSteal;Unicorn;bulk synchronous tasks;compute-communication overlap;half steal strategy;healthy steal success rate;heterogeneous machines;load balancing technique;many-core accelerators;multiple CPUs;multiple accelerators;proactive work stealer;random victim selection;remote data transfers;shared memory parallel programming;termination detection;Convolution;Data transfer;Graphics processing units;Load management;Matrix decomposition;Performance evaluation;Pipelines;Heterogeneous Architectures;High Performance Computing;Hybrid CPU-GPU Clusters;Multi Scheduling;Work Stealing},
doi={10.1109/IPDPSW.2015.7},
ISSN={},
month={May},
}

@inproceedings{fast04,
 author = {Bansal, Sorav and Modha, Dharmendra S.},
 title = {CAR: Clock with Adaptive Replacement},
 booktitle = {Proceedings of the 3rd USENIX Conference on File and Storage Technologies},
 series = {FAST '04},
 year = {2004},
 location = {San Francisco, CA},
 pages = {187--200},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=1096673.1096699},
 acmid = {1096699},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{winet06,
  author    = {Sorav Bansal and
               Rajeev Shorey and
               Rajeev Gupta and
               Archan Misra},
  title     = {Energy Efficiency and Capacity for {TCP} Traffic in Multi-Hop Wireless
               Networks},
  journal   = {Wireless Networks},
  volume    = {12},
  number    = {1},
  pages     = {5--21},
  year      = {2006},
  url       = {https://doi.org/10.1007/s11276-006-6146-9},
  doi       = {10.1007/s11276-006-6146-9},
  timestamp = {Sat, 27 May 2017 14:24:30 +0200},
  biburl    = {http://dblp.org/rec/bib/journals/winet/BansalSGM06},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{broadnets04,
  author    = {Arup Acharya and
               Archan Misra and
               Sorav Bansal},
  title     = {Design and Analysis of a Cooperative Medium Access Scheme for Wireless
               Mesh Networks},
  booktitle = {1st International Conference on Broadband Networks {(BROADNETS} 2004),
               25-29 October 2004, San Jose, CA, {USA}},
  pages     = {621--631},
  year      = {2004},
  url       = {https://doi.org/10.1109/BROADNETS.2004.29},
  doi       = {10.1109/BROADNETS.2004.29},
  timestamp = {Fri, 19 May 2017 01:25:51 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/broadnets/AcharyaMB04},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{wcnc,
  author    = {Sorav Bansal and
               Rajeev Shorey and
               Arzad Alam Kherani},
  title     = {Performance of {TCP} and {UDP} protocols in multi-hop multi-rate wireless
               networks},
  booktitle = {2004 {IEEE} Wireless Communications and Networking Conference , {WCNC}
               2004, Atlanta, Georgia, USA, 21-25 March 2004},
  pages     = {231--236},
  year      = {2004},
  url       = {https://doi.org/10.1109/WCNC.2004.1311548},
  doi       = {10.1109/WCNC.2004.1311548},
  timestamp = {Wed, 24 May 2017 08:29:05 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/wcnc/BansalSK04},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{wc03,
  author    = {Arup Acharya and
               Archan Misra and
               Sorav Bansal},
  title     = {High-performance architectures for IP-based multihop 802.11 networks},
  journal   = {{IEEE} Wireless Commun.},
  volume    = {10},
  number    = {5},
  pages     = {22--28},
  year      = {2003},
  url       = {https://doi.org/10.1109/MWC.2003.1241091},
  doi       = {10.1109/MWC.2003.1241091},
  timestamp = {Sat, 27 May 2017 14:23:10 +0200},
  biburl    = {http://dblp.org/rec/bib/journals/wc/AcharyaMB03},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{macap,
  author    = {Arup Acharya and
               Archan Misra and
               Sorav Bansal},
  title     = {{MACA-P:} {A} {MAC} for Concurrent Transmissions in Multi-Hop Wireless
               Networks},
  booktitle = {Proceedings of the First {IEEE} International Conference on Pervasive
               Computing and Communications (PerCom'03), March 23-26, 2003, Fort
               Worth, Texas, {USA}},
  pages     = {505--508},
  year      = {2003},
  url       = {https://doi.org/10.1109/PERCOM.2003.1192780},
  doi       = {10.1109/PERCOM.2003.1192780},
  timestamp = {Tue, 23 May 2017 01:10:48 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/percom/AcharyaMB03},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{wcnc03,
  author    = {Sorav Bansal and
               Rajeev Shorey and
               Archan Misra},
  title     = {Comparing the routing energy overheads of ad-hoc routing protocols},
  booktitle = {2003 {IEEE} Wireless Communications and Networking, {WCNC} 2003, New
               Orleans, LA, USA, 16-20 March, 2003},
  pages     = {1155--1161},
  year      = {2003},
  url       = {https://doi.org/10.1109/WCNC.2003.1200534},
  doi       = {10.1109/WCNC.2003.1200534},
  timestamp = {Wed, 24 May 2017 08:29:13 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/wcnc/BansalSM03},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}



@article{ocean,
  author    = {Sorav Bansal and
               Mary Baker},
  title     = {Observation-based Cooperation Enforcement in Ad Hoc Networks},
  journal   = {CoRR},
  volume    = {cs.NI/0307012},
  year      = {2003},
  url       = {http://arxiv.org/abs/cs.NI/0307012},
  timestamp = {Wed, 07 Jun 2017 14:42:19 +0200},
  biburl    = {http://dblp.org/rec/bib/journals/corr/cs-NI-0307012},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}


@inproceedings{globecom02,
  author    = {Sorav Bansal and
               Rajeev Shorey and
               Shobhit Chugh and
               Anurag Goel and
               Kapil Kumar and
               Archan Misra},
  title     = {The capacity of multi-hop wireless networks with {TCP} regulated traffic},
  booktitle = {Proceedings of the Global Telecommunications Conference, 2002. {GLOBECOM}
               '02, Taipei, Taiwan, 17-21 November, 2002},
  pages     = {133--137},
  year      = {2002},
  url       = {https://doi.org/10.1109/GLOCOM.2002.1188056},
  doi       = {10.1109/GLOCOM.2002.1188056},
  timestamp = {Tue, 23 May 2017 01:12:57 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/globecom/BansalSCGKM02},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{infocom02,
  author    = {Imran Ali and
               Rajeev Gupta and
               Sorav Bansal and
               Archan Misra and
               Ashu Razdan and
               Rajeev Shorey},
  title     = {Energy Efficiency and Throughput for {TCP} Traffic in Multi-Hop Wireless
               Networks},
  booktitle = {Proceedings {IEEE} {INFOCOM} 2002, The 21st Annual Joint Conference
               of the {IEEE} Computer and Communications Societies, New York, USA,
               June 23-27, 2002},
  pages     = {210--219},
  year      = {2002},
  url       = {https://doi.org/10.1109/INFCOM.2002.1019262},
  doi       = {10.1109/INFCOM.2002.1019262},
  timestamp = {Tue, 16 May 2017 16:26:31 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/infocom/AliGBMRS02},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{wowmom02,
  author    = {Arup Acharya and
               Archan Misra and
               Sorav Bansal},
  title     = {A label-switching packet forwarding architecture for multi-hop wireless
               LANs},
  booktitle = {The Fifth International Workshop on Wireless Mobile Multimedia, {WOWMOM}
               2002, Atlanta, Georgia, 28 September 2002, Proceedings},
  pages     = {33--40},
  year      = {2002},
  url       = {http://doi.acm.org/10.1145/570790.570797},
  doi       = {10.1145/570790.570797},
  timestamp = {Fri, 26 May 2017 00:50:21 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/wowmom/AcharyaMB02},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{hscc01,
  author    = {Arup Acharya and
               Archan Misra and
               Sorav Bansal},
  title     = {A label-switching packet forwarding architecture for multi-hop wireless
               LANs},
  booktitle = {The Fifth International Workshop on Wireless Mobile Multimedia, {WOWMOM}
               2002, Atlanta, Georgia, 28 September 2002, Proceedings},
  pages     = {33--40},
  year      = {2002},
  url       = {http://doi.acm.org/10.1145/570790.570797},
  doi       = {10.1145/570790.570797},
  timestamp = {Fri, 26 May 2017 00:50:21 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/wowmom/AcharyaMB02},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{comsnets11,
  author    = {Swati Sharma and
               Huzur Saran and
               Sorav Bansal},
  title     = {An Empirical study of clock skew behavior in modern mobile and hand-held
               devices},
  booktitle = {Third International Conference on Communication Systems and Networks,
               {COMSNETS} 2011, Bangalore, India, January 4-8, 2011},
  pages     = {1--4},
  year      = {2011},
  url       = {https://doi.org/10.1109/COMSNETS.2011.5716494},
  doi       = {10.1109/COMSNETS.2011.5716494},
  timestamp = {Sun, 21 May 2017 00:20:52 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/comsnets/SharmaSB11},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}


@inproceedings{issta13,
  author    = {Sandeep Bindal and
               Sorav Bansal and
               Akash Lal},
  title     = {Variable and thread bounding for systematic testing of multithreaded
               programs},
  booktitle = {International Symposium on Software Testing and Analysis, {ISSTA}
               '13, Lugano, Switzerland, July 15-20, 2013},
  pages     = {145--155},
  year      = {2013},
  url       = {http://doi.acm.org/10.1145/2483760.2483764},
  doi       = {10.1145/2483760.2483764},
  timestamp = {Fri, 03 Feb 2017 11:58:32 +0100},
  biburl    = {http://dblp.org/rec/bib/conf/issta/BindalBL13},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{dnis11,
  author    = {Abhishek Gupta and
               Jatin Kumar and
               Daniel J. Mathew and
               Sorav Bansal and
               Subhashis Banerjee and
               Huzur Saran},
  title     = {Design and Implementation of the Workflow of an Academic Cloud},
  booktitle = {Databases in Networked Information Systems - 7th International Workshop,
               {DNIS} 2011, Aizu-Wakamatsu, Japan, December 12-14, 2011. Proceedings},
  pages     = {16--25},
  year      = {2011},
  url       = {https://doi.org/10.1007/978-3-642-25731-5_2},
  doi       = {10.1007/978-3-642-25731-5_2},
  timestamp = {Wed, 17 May 2017 14:25:06 +0200},
  biburl    = {http://dblp.org/rec/bib/conf/dnis/GuptaKMBBS11},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}



@article{p4,
 author = {Bosshart, Pat and Daly, Dan and Gibb, Glen and Izzard, Martin and McKeown, Nick and Rexford, Jennifer and Schlesinger, Cole and Talayco, Dan and Vahdat, Amin and Varghese, George and Walker, David},
 title = {P4: Programming Protocol-independent Packet Processors},
 journal = {SIGCOMM Comput. Commun. Rev.},
 issue_date = {July 2014},
 volume = {44},
 number = {3},
 month = jul,
 year = {2014},
 issn = {0146-4833},
 pages = {87--95},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2656877.2656890},
 doi = {10.1145/2656877.2656890},
 acmid = {2656890},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {p4, protocol-independent, reconfigurability, sdn},
}

@inproceedings{intermittent,
  author = {Dahiya, Manjeet and Bansal, Sorav},
  title = {Automatic Verification of Intermittent Systems},
  booktitle = {Proceedings of the 19th International Conference on Verification, Model Checking, and Abstract Interpretation},
  series = {VMCAI'18},
  year = {2018},
  location = {Los Angeles, CA},
  numpages = {22},
  publisher = {Springer-Verlag},
}
#howpublished = {http://www.cse.iitd.ac.in/$\sim$sbansal/pubs/intermittent.pdf},

@misc{aplas17_src_award,
  title = {{A}{P}{L}{A}{S} 2017 {S}tudent {R}esearch {C}ompetition {F}irst {P}lace {A}ward awarded to {M}anjeet {D}ahiya for his work on ``{A}utomatic {V}erification of {I}ntermittent {S}ystems''},
  howpublished = "\url{https://www-aplas.github.io/SRC.html}",
  key = {{A}{P}{L}{A}{S} 2017 {S}tudent {R}esearch {C}ompetition {F}irst {P}lace {A}ward awarded to {M}anjeet {D}ahiya},
}

@misc{llvm_passes,
  title = {{L}{L}{V}{M} {A}nalysis and {T}ransformation {P}asses},
  howpublished = "\url{https://llvm.org/docs/Passes.html}",
  key = {{L}{L}{V}{M} {A}nalysis and {T}ransformation {P}asses},
}

@inproceedings{aplas17,
  author    = {Manjeet Dahiya and
               Sorav Bansal},
  title     = {Black-Box Equivalence Checking Across Compiler Optimizations},
  booktitle = {Programming Languages and Systems - 15th Asian Symposium, {APLAS}
               2017, Suzhou, China, November 27-29, 2017, Proceedings},
  pages     = {127--147},
  year      = {2017},
  url       = {https://doi.org/10.1007/978-3-319-71237-6_7},
  doi       = {10.1007/978-3-319-71237-6_7},
  timestamp = {Mon, 20 Nov 2017 11:29:53 +0100},
  biburl    = {http://dblp.org/rec/bib/conf/aplas/DahiyaB17},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{hvc17,
  author    = {Manjeet Dahiya and
               Sorav Bansal},
  title     = {Modeling Undefined Behaviour Semantics for Checking Equivalence Across
               Compiler Optimizations},
  booktitle = {Hardware and Software: Verification and Testing - 13th International
               Haifa Verification Conference, {HVC} 2017, Haifa, Israel, November
               13-15, 2017, Proceedings},
  pages     = {19--34},
  year      = {2017},
  url       = {https://doi.org/10.1007/978-3-319-70389-3_2},
  doi       = {10.1007/978-3-319-70389-3_2},
  timestamp = {Tue, 14 Nov 2017 14:54:55 +0100},
  biburl    = {http://dblp.org/rec/bib/conf/hvc/DahiyaB17},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}


@inproceedings{synthesis_machine_code,
 author = {Srinivasan, Venkatesh and Reps, Thomas},
 title = {Synthesis of Machine Code from Semantics},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {596--607},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2737924.2737960},
 doi = {10.1145/2737924.2737960},
 acmid = {2737960},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CEGIS, IA-32 instruction set, Machine-code synthesis, SMT, divide-and-conquer},
}

@misc{bacus,
	TITLE = "{P}4+{B}acus for developing high-performance software switches",
	howpublished = "\url{http://www.cse.iitd.ac.in/~sbansal/bacus.pdf}",
	key = "{P}4+{B}acus for developing high-performance software switches",
}

@book{dragonbook,
 author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
 title = {Compilers: Principles, Techniques, and Tools (2Nd Edition)},
 year = {2006},
 isbn = {0321486811},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{sangiorgi_rutten,
 author = {Sangiorgi, Davide and Rutten, Jan},
 title = {Advanced Topics in Bisimulation and Coinduction},
 year = {2011},
 isbn = {1107004977, 9781107004979},
 edition = {1st},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@inproceedings{tsvc,
 author = {Maleki, Saeed and Gao, Yaoqing and Garzar\'{a}n, Maria J. and Wong, Tommy and Padua, David A.},
 title = {An Evaluation of Vectorizing Compilers},
 booktitle = {Proceedings of the 2011 International Conference on Parallel Architectures and Compilation Techniques},
 series = {PACT '11},
 year = {2011},
 isbn = {978-0-7695-4566-0},
 pages = {372--382},
 numpages = {11},
 url = {https://doi.org/10.1109/PACT.2011.68},
 doi = {10.1109/PACT.2011.68},
 acmid = {2121464},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@inproceedings{semalign,
 author = {Churchill, Berkeley and Padon, Oded and Sharma, Rahul and Aiken, Alex},
 title = {Semantic Program Alignment for Equivalence Checking},
 booktitle = {Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI 2019},
 year = {2019},
 isbn = {978-1-4503-6712-7},
 location = {Phoenix, AZ, USA},
 pages = {1027--1040},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/3314221.3314596},
 doi = {10.1145/3314221.3314596},
 acmid = {3314596},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {equivalence checking, verification},
}

@InProceedings{tvoc_cav05,
author="Barrett, Clark
and Fang, Yi
and Goldberg, Benjamin
and Hu, Ying
and Pnueli, Amir
and Zuck, Lenore",
editor="Etessami, Kousha
and Rajamani, Sriram K.",
title="TVOC: A Translation Validator for Optimizing Compilers",
booktitle="Computer Aided Verification",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="291--295",
abstract="We describe a tool called TVOC, that uses the translation validation approach to check the validity of compiler optimizations: for a given source program, TVOC proves the equivalence of the source code and the target code produced by running the compiler. There are two phases to the verification process: the first phase verifies loop transformations using the proof rule permute; the second phase verifies structure-preserving optimizations using the proof rule Validate. Verification conditions are validated using the automatic theorem prover CVC Lite.",
isbn="978-3-540-31686-2"
}

@inproceedings{syncCHC,
  author    = {Dmitry Mordvinov and Grigory Fedyukovich},
  title     = {Synchronizing Constrained Horn Clauses},
  booktitle = {LPAR-21. 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning},
  editor    = {Thomas Eiter and David Sands},
  series    = {EPiC Series in Computing},
  volume    = {46},
  pages     = {338--355},
  year      = {2017},
  publisher = {EasyChair},
  bibsource = {EasyChair, https://easychair.org},
  issn      = {2398-7340},
  url       = {https://easychair.org/publications/paper/LlxW},
  doi       = {10.29007/gr5c}
}

@InProceedings{CHCeq,
author="De Angelis, Emanuele
and Fioravanti, Fabio
and Pettorossi, Alberto
and Proietti, Maurizio",
editor="Rival, Xavier",
title="Relational Verification Through Horn Clause Transformation",
booktitle="Static Analysis",
year="2016",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="147--169",
abstract="We present a method for verifying relational program properties, that is, properties that relate the input and the output of two programs. Our verification method is parametric with respect to the definition of the operational semantics of the programming language in which the two programs are written. That definition of the semantics consists of a set Int of constrained Horn clauses (CHCs) that encode the interpreter of the programming language. Then, given the programs and the relational property we want to verify, we generate, by using Int, a set of constrained Horn clauses whose satisfiability is equivalent to the validity of the property. Unfortunately, state-of-the-art solvers for CHCs have severe limitations in proving the satisfiability, or the unsatisfiability, of such sets of clauses. We propose some transformation techniques that increase the power of CHC solvers when verifying relational properties. We show that these transformations, based on unfold/fold rules, preserve satisfiability. Through an experimental evaluation, we show that in many cases CHC solvers are able to prove the satisfiability (or the unsatisfiability) of sets of clauses obtained by applying the transformations we propose, whereas the same solvers are unable to perform those proofs when given as input the original, untransformed sets of CHCs.",
isbn="978-3-662-53413-7"
}

@book{c_standard,
  added-at = {2012-10-08T01:11:26.000+0200},
  address = {Geneva, Switzerland},
  author = {{ISO}},
  bibdate = {Mon Dec 19 11:12:12 2011},
  bibsource = {http://www.math.utah.edu/pub/tex/bib/isostd.bib},
  biburl = {https://www.bibsonomy.org/bibtex/264bc1cf4b2d3d46315a953c6f1688352/gron},
  day = 8,
  interhash = {c06a7dbbcb6724820875e51543282440},
  intrahash = {64bc1cf4b2d3d46315a953c6f1688352},
  keywords = {C Specification Standard},
  month = {December},
  pages = {683 (est.)},
  publisher = {International Organization for Standardization},
  remark = {Revises ISO/IEC 9899:1999, ISO/IEC 9899:1999/Cor
            1:2001, ISO/IEC 9899:1999/Cor 2:2004, and ISO/IEC
            9899:1999/Cor 3:2007.},
  timestamp = {2012-10-08T01:11:26.000+0200},
  title = {{ISO/IEC 9899:2011 Information technology ---
           Programming languages --- C}},
  url = {http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=57853},
  year = 2011
}

@techreport{crediblecompilation,
 author = {Rinard, M.},
 title = {Credible Compilers},
 year = {1999},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Amitai%3AMIT-LCS%2F%2FMIT%2FLCS%2FTR-776},
 publisher = {Massachusetts Institute of Technology},
 address = {Cambridge, MA, USA},
}

@inproceedings{crellvm18,
 author = {Kang, Jeehoon and Kim, Yoonseung and Song, Youngju and Lee, Juneyoung and Park, Sanghoon and Shin, Mark Dongyeon and Kim, Yonghyun and Cho, Sungkeun and Choi, Joonwon and Hur, Chung-Kil and Yi, Kwangkeun},
 title = {Crellvm: Verified Credible Compilation for LLVM},
 booktitle = {Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI 2018},
 year = {2018},
 isbn = {978-1-4503-5698-5},
 location = {Philadelphia, PA, USA},
 pages = {631--645},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/3192366.3192377},
 doi = {10.1145/3192366.3192377},
 acmid = {3192377},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, LLVM, compiler verification, credible compilation, relational Hoare logic, translation validation},
}
@inproceedings{hyperkernel,
 author = {Nelson, Luke and Sigurbjarnarson, Helgi and Zhang, Kaiyuan and Johnson, Dylan and Bornholt, James and Torlak, Emina and Wang, Xi},
 title = {Hyperkernel: Push-Button Verification of an OS Kernel},
 booktitle = {Proceedings of the 26th Symposium on Operating Systems Principles},
 series = {SOSP '17},
 year = {2017},
 isbn = {978-1-4503-5085-3},
 location = {Shanghai, China},
 pages = {252--269},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/3132747.3132748},
 doi = {10.1145/3132747.3132748},
 acmid = {3132748},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@InProceedings{esop05,
author="M{\"u}ller-Olm, Markus
and Seidl, Helmut",
editor="Sagiv, Mooly",
title="Analysis of Modular Arithmetic",
booktitle="Programming Languages and Systems",
year="2005",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="46--60",
abstract="We consider integer arithmetic modulo a power of 2 as provided by mainstream programming languages like Java or standard implementations of C. The difficulty here is that the ring ¿mof integers modulo m = 2w, w > 1, has zero divisors and thus cannot be embedded into a field. Not withstanding that, we present intra- and inter-procedural algorithms for inferring for every program point u, affine relations between program variables valid at u. Our algorithms are not only sound but also complete in that they detect all valid affine relations. Moreover, they run in time linear in the program size and polynomial in the number of program variables and can be implemented by using the same modular integer arithmetic as the target language to be analyzed.",
isbn="978-3-540-31987-0"
}

@INPROCEEDINGS{nodeSplitting1,
author={A. M. {Erosa} and L. J. {Hendren}},
booktitle={Proceedings of 1994 IEEE International Conference on Computer Languages (ICCL'94)},
title={Taming control flow: a structured approach to eliminating goto statements},
year={1994},
volume={},
number={},
pages={229-240},
keywords={program compilers;C language;parallel programming;goto statements;control flow;parallelizing compilers;optimizing compilers;C programs;high-level abstract syntax tree;AST representation;intermediate representation;goto-movement transformations;goto-elimination;McCAT;McGill Compiler Architecture Testbed;Program processors;Optimizing compilers;Programming profession;Switches;Computer science;Design optimization;Software testing;Software engineering;Information analysis;Flow graphs},
doi={10.1109/ICCL.1994.288377},
ISSN={null},
month={May},}

@ARTICLE{nodeSplitting2,
author={Z. {Ammarguellat}},
journal={IEEE Transactions on Software Engineering},
title={A control-flow normalization algorithm and its complexity},
year={1992},
volume={18},
number={3},
pages={237-251},
keywords={computational complexity;graph theory;parallel algorithms;structured programming;control-flow normalization algorithm;complexity;automatic parallelization;control flowgraphs;control-flow cycles;GOTOs;node-splitting techniques;control dependence relations;syntax tree;Automatic control;Data analysis;Tree graphs;Performance analysis;Algorithm design and analysis;Pathology;Program processors},
doi={10.1109/32.126773},
ISSN={2326-3881},
month={March},}

@incollection{turingEquivalenceChecking,
 author = {Turing, A.},
 chapter = {Checking a Large Routine},
 title = {The Early British Computer Conferences},
 editor = {Campbell-Kelly, Martin},
 year = {1989},
 isbn = {0-262-23136-0},
 pages = {70--72},
 numpages = {3},
 url = {http://dl.acm.org/citation.cfm?id=94938.94952},
 acmid = {94952},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
}

@misc{ gdbgui,
  title = "gdbgui",
  howpublished = "\url{https://www.gdbgui.com}",
  year={2019},
}

@misc {ibmDebugVsOpt,
  title="Debugging optimized code",
  howpublished = "\\\url{https://www.ibm.com/support/knowledgecenter/SSGH2K_13.1.2/com.ibm.xlc131.aix.doc/proguide/debuggingoptimizedcode.html}",
  year={2019},
}

@misc{do178,
  title="{D}{O}-178{B}",
  howpublished = "\url{https://en.wikipedia.org/wiki/DO-178B}",
  year={2019},
 keywords = {Coq, LLVM, compiler verification, credible compilation, relational Hoare logic, translation validation},
}

@misc{baadal_nmeict,
  title="NMEICT Baadal",
  howpublished = "\url{https://baadal.nmeict.in/}",
  year={2019},
}
@misc{commoncriteria,
  title="Common {C}riteria",
  howpublished = "\url{https://www.commoncriteriaportal.org/}",
  year={2019},
}

@misc{absint,
  title="Abs{I}nt",
  howpublished = "\url{https://www.absint.com/}",
  year={2019},
}

@misc{galois,
  title="Galois",
  howpublished = "\url{https://galois.com/}",
  year={2019},
}

@misc{rv,
  title="Runtime {V}erification",
  howpublished = "\url{https://runtimeverification.com/}",
  year={2019},
}

@misc{ghostLocomotion,
  title="{G}host {L}ocomotion",
  howpublished = "\url{https://www.gh.st/}",
  year={2019},
}

@misc{skymizer,
  title="{S}kymizer {T}aiwan {I}nc.",
  howpublished = "\url{https://skymizer.com/}",
  year={2013},
}


@inproceedings{ooelala,
author = {Phulia, Ankush and Bhagee, Vaibhav and Bansal, Sorav},
title = {OOElala: Order-of-Evaluation Based Alias Analysis for Compiler Optimization},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3385962},
doi = {10.1145/3385412.3385962},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {839–853},
numpages = {15},
keywords = {Undefined Behaviour, Compiler Optimization},
location = {London, UK},
series = {PLDI 2020}
}

@misc{typed_superopt,
  title="A Look at the Smallest Type-Correct Program",
  author="Bansal, Sorav",
  howpublished="Technical Report at \url{http://www.cse.iitd.ac.in/~sbansal/pubs/typed_superopt.pdf}",
  year={2019},
}

@misc{webasm,
  title = "Web assembly",
  howpublished = "\url{https://webassembly.org/}",
  year={2019},
}
@misc{sentry,
  title = "Sentry",
  howpublished = "\url{https://sentry.io/}",
  year={2019},
}

@InProceedings{sat18,
author="Gupta, Shubhani
and Saxena, Aseem
and Mahajan, Anmol
and Bansal, Sorav",
editor="Beyersdorff, Olaf
and Wintersteiger, Christoph M.",
title="Effective Use of SMT Solvers for Program Equivalence Checking Through Invariant-Sketching and Query-Decomposition",
booktitle="Theory and Applications of Satisfiability Testing -- SAT 2018",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="365--382",
abstract="Program equivalence checking is a fundamental problem in computer science with applications to translation validation and automatic synthesis of compiler optimizations. Contemporary equivalence checkers employ SMT solvers to discharge proof obligations generated by their equivalence checking algorithm. Equivalence checkers also involve algorithms to infer invariants that relate the intermediate states of the two programs being compared for equivalence. We present a new algorithm, called invariant-sketching, that allows the inference of the required invariants through the generation of counter-examples using SMT solvers. We also present an algorithm, called query-decomposition, that allows a more capable use of SMT solvers for application to equivalence checking. Both invariant-sketching and query-decomposition help us prove equivalence across program transformations that could not be handled by previous equivalence checking algorithms.",
isbn="978-3-319-94144-8"
}

@phdthesis{manjeet_thesis,
 author = {Dahiya, Manjeet},
 advisor = {Bansal, Sorav},
 title = {Black-box Equivalence Checking across Compiler Transformations},
 year = {2018},
 publisher = {Indian Institute of Technology Delhi},
 address = {Delhi, India},
}

@phdthesis{armando_thesis,
 author = {Solar-Lezama, Armando},
 advisor = {Bodik, Rastislav},
 title = {Program Synthesis by Sketching},
 year = {2008},
 isbn = {978-1-109-09745-0},
 note = {AAI3353225},
 publisher = {University of California at Berkeley},
 address = {Berkeley, CA, USA},
}

@misc{regehr_blogpost_peephole_superopt,
  author = {Regehr, John},
  howpublished = "\url{https://blog.regehr.org/archives/1109}",
  year={2014},
}

@misc{regehr_talkvideo_peephole_superopt,
  author = {Regehr, John},
  howpublished = "\url{https://youtu.be/Ux0YnVEaI6A?t=880}",
  year={2014},
}

@InProceedings{witnessing_compiler,
author="Namjoshi, Kedar S.
and Tagliabue, Giacomo
and Zuck, Lenore D.",
editor="Legay, Axel
and Bensalem, Saddek",
title="A Witnessing Compiler: A Proof of Concept",
booktitle="Runtime Verification",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="340--345",
abstract="In prior work we proposed a mechanism of ``witness generation and propagation'' to construct proofs of the correctness of program transformations. Here we present a simpler theory, and describe our experience with an initial implementation based on the LLVM open-source compiler and the Z3 SMT solver.",
isbn="978-3-642-40787-1"
}

@misc{formalmethods,
  title = "Formal Methods",
  howpublished = "\url{https://en.wikipedia.org/wiki/Formal_methods}",
  year={2019},
}

@inproceedings{ironfleet,
 author = {Hawblitzel, Chris and Howell, Jon and Kapritsos, Manos and Lorch, Jacob R. and Parno, Bryan and Roberts, Michael L. and Setty, Srinath and Zill, Brian},
 title = {IronFleet: Proving Practical Distributed Systems Correct},
 booktitle = {Proceedings of the 25th Symposium on Operating Systems Principles},
 series = {SOSP '15},
 year = {2015},
 isbn = {978-1-4503-3834-9},
 location = {Monterey, California},
 pages = {1--17},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/2815400.2815428},
 doi = {10.1145/2815400.2815428},
 acmid = {2815428},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@misc{sel4,
  title="The se{L}4 Microkernel",
  howpublished = "\url{https://sel4.systems/}",
  year={2019},
}

@misc{mooreslaw,
  title = "Moore's law",
  howpublished = "\url{https://en.wikipedia.org/wiki/Moore\%27s_law}",
  year={2019},
}

@inproceedings{hawkeye,
  author    = {Ashish Panwar and
               Sorav Bansal and
               K. Gopinath},
  title     = {HawkEye: Efficient Fine-grained {OS} Support for Huge Pages},
  booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural
               Support for Programming Languages and Operating Systems, {ASPLOS}
               2019, Providence, RI, USA, April 13-17, 2019},
  pages     = {347--360},
  year      = {2019},
  url       = {https://doi.org/10.1145/3297858.3304064},
  doi       = {10.1145/3297858.3304064},
}

@inproceedings{ingens,
 author = {Kwon, Youngjin and Yu, Hangchen and Peter, Simon and Rossbach, Christopher J. and Witchel, Emmett},
 title = {Coordinated and Efficient Huge Page Management with Ingens},
 booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'16},
 year = {2016},
 isbn = {978-1-931971-33-1},
 location = {Savannah, GA, USA},
 pages = {705--721},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=3026877.3026931},
 acmid = {3026931},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@misc{llvm_intrinsics,
  TITLE="{L}{L}{V}{M} Standard {C} Library Intrinsics",
  howpublished = "\url{http://llvm.org/docs/LangRef.html#standard-c-library-intrinsics}",
  key ="{L}{L}{V}{M} Standard {C} Library Intrinsics",
}

@article{norrish,
author = {Norrish, Michael},
year = {2002},
month = {10},
pages = {},
title = {An abstract dynamic semantics for C}
}

@article{norishcpp,
author = {Norrish, Michael},
year = {2019},
month = {07},
pages = {},
title = {A Formal Semantics for C++}
}

@article{cpp17_proposal,
author = {Dos Reis, Gabriel and Sutter, Herb and Caves, Jonathan},
year = {2016},
month = {02},
title = {Refining Expression Evaluation Order for Idiomatic C++ (Revision 2)}
}

@inproceedings{norrish99,
  author    = {Michael Norrish},
  title     = {Deterministic Expressions in {C}},
  booktitle = {Programming Languages and Systems, 8th European Symposium on Programming,
               ESOP'99, Held as Part of the European Joint Conferences on the Theory
               and Practice of Software, ETAPS'99, Amsterdam, The Netherlands, 22-28
               March, 1999, Proceedings},
  pages     = {147--161},
  year      = {1999},
  url       = {https://doi.org/10.1007/3-540-49099-X\_10},
  doi       = {10.1007/3-540-49099-X\_10},
  timestamp = {Tue, 14 May 2019 10:00:41 +0200},
  biburl    = {https://dblp.org/rec/bib/conf/esop/Norrish99},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{krebbers14,
 author = {Krebbers, Robbert},
 title = {An Operational and Axiomatic Semantics for Non-determinism and Sequence Points in C},
 booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '14},
 year = {2014},
 isbn = {978-1-4503-2544-8},
 location = {San Diego, California, USA},
 pages = {101--112},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2535838.2535878},
 doi = {10.1145/2535838.2535878},
 acmid = {2535878},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {c verification, coq, interactive theorem proving, operational semantics, separation logic},
}

@article{krebbers16,
author="Krebbers, Robbert",
title="A Formal C Memory Model for Separation Logic",
journal="Journal of Automated Reasoning",
year="2016",
month="Dec",
day="01",
volume="57",
number="4",
pages="319--387",
issn="1573-0670",
doi="10.1007/s10817-016-9369-1",
url="https://doi.org/10.1007/s10817-016-9369-1"
}

@inProceedings{krebbers13,
author="Krebbers, Robbert",
editor="Gonthier, Georges
and Norrish, Michael",
title="Aliasing Restrictions of C11 Formalized in Coq",
booktitle="Certified Programs and Proofs",
year="2013",
publisher="Springer International Publishing",
address="Cham",
pages="50--65",
isbn="978-3-319-03545-1"
}

@inproceedings{batty,
 author = {Batty, Mark and Owens, Scott and Sarkar, Susmit and Sewell, Peter and Weber, Tjark},
 title = {Mathematizing C++ Concurrency},
 booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '11},
 year = {2011},
 isbn = {978-1-4503-0490-0},
 location = {Austin, Texas, USA},
 pages = {55--66},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1926385.1926394},
 doi = {10.1145/1926385.1926394},
 acmid = {1926394},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {relaxed memory models, semantics},
}

@Article{blazy,
author="Blazy, Sandrine
and Leroy, Xavier",
title="Mechanized Semantics for the Clight Subset of the C Language",
journal="Journal of Automated Reasoning",
year="2009",
month="Oct",
day="01",
volume="43",
number="3",
pages="263--288",
issn="1573-0670",
doi="10.1007/s10817-009-9148-3",
url="https://doi.org/10.1007/s10817-009-9148-3"
}

@inproceedings{hackett,
 author = {Hackett, Brian and Aiken, Alex},
 title = {How is Aliasing Used in Systems Software?},
 booktitle = {Proceedings of the 14th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
 series = {SIGSOFT '06/FSE-14},
 year = {2006},
 isbn = {1-59593-468-5},
 location = {Portland, Oregon, USA},
 pages = {69--80},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1181775.1181785},
 doi = {10.1145/1181775.1181785},
 acmid = {1181785},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {aliasing, program analysis, satisfiability},
}

@InProceedings{farzan,
author="Farzan, Azadeh
and Madhusudan, P.",
editor="Grumberg, Orna
and Huth, Michael",
title="Causal Dataflow Analysis for Concurrent Programs",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2007",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="102--116",
isbn="978-3-540-71209-1"
}

@inproceedings{ellison12,
 author = {Ellison, Chucky and Rosu, Grigore},
 title = {An Executable Formal Semantics of C with Applications},
 booktitle = {Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '12},
 year = {2012},
 isbn = {978-1-4503-1083-3},
 location = {Philadelphia, PA, USA},
 pages = {533--544},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2103656.2103719},
 doi = {10.1145/2103656.2103719},
 acmid = {2103719},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C, k, semantics},
}

@inproceedings{hathhorn14,
 author = {Hathhorn, Chris and Ellison, Chucky and Ro\c{s}u, Grigore},
 title = {Defining the Undefinedness of C},
 booktitle = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '15},
 year = {2015},
 isbn = {978-1-4503-3468-6},
 location = {Portland, OR, USA},
 pages = {336--345},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2737924.2737979},
 doi = {10.1145/2737924.2737979},
 acmid = {2737979},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {C11, K Framework, Programming language semantics, Undefined behavior},
}

@inproceedings{morisett,
 author = {Morisset, Robin and Pawan, Pankaj and Zappa Nardelli, Francesco},
 title = {Compiler Testing via a Theory of Sound Optimisations in the C11/C++11 Memory Model},
 booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '13},
 year = {2013},
 isbn = {978-1-4503-2014-6},
 location = {Seattle, Washington, USA},
 pages = {187--196},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2491956.2491967},
 doi = {10.1145/2491956.2491967},
 acmid = {2491967},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {c11/c++11 memory model, compiler testing},
}

@article{papaspyrou,
title = "Denotational semantics of ANSI C",
journal = "Computer Standards \& Interfaces",
volume = "23",
number = "3",
pages = "169 - 185",
year = "2001",
issn = "0920-5489",
doi = "https://doi.org/10.1016/S0920-5489(01)00059-9",
url = "http://www.sciencedirect.com/science/article/pii/S0920548901000599",
author = "Nikolaos S. Papaspyrou",
keywords = "ANSI C programming language, ISO/IEC 9899:1999 standard, Formal definition, Denotational semantics, Monads",
}

@inproceedings{c_semantics92,
 author = {Gurevich, Yuri and Huggins, James K.},
 title = {The Semantics of the C Programming Language},
 booktitle = {Selected Papers from the Workshop on Computer Science Logic},
 series = {CSL '92},
 year = {1993},
 isbn = {3-540-56992-8},
 pages = {274--308},
 numpages = {35},
 url = {http://dl.acm.org/citation.cfm?id=647842.736414},
 acmid = {736414},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
}

@inproceedings{wang13,
 author = {Wang, Xi and Zeldovich, Nickolai and Kaashoek, M. Frans and Solar-Lezama, Armando},
 title = {Towards Optimization-safe Systems: Analyzing the Impact of Undefined Behavior},
 booktitle = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
 series = {SOSP '13},
 year = {2013},
 isbn = {978-1-4503-2388-8},
 location = {Farminton, Pennsylvania},
 pages = {260--275},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/2517349.2522728},
 doi = {10.1145/2517349.2522728},
 acmid = {2522728},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{hind01,
 author = {Hind, Michael},
 title = {Pointer Analysis: Haven'T We Solved This Problem Yet?},
 booktitle = {Proceedings of the 2001 ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering},
 series = {PASTE '01},
 year = {2001},
 isbn = {1-58113-413-4},
 location = {Snowbird, Utah, USA},
 pages = {54--61},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/379605.379665},
 doi = {10.1145/379605.379665},
 acmid = {379665},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{norrish_thesis,
  title={Formalized in HOL. PhD Thes. University of Cambridge},
  author={Norrish, M},
  journal={Computer Laboratory},
  year={1998}
}

@misc{polybench,
  title={Polybench/{C}},
  year={2019},
  howpublished="\url{https://sourceforge.net/projects/polybench/}",
}

@misc{llvmRestrictSupport,
  title={Discussion on restrict support in {L}{L}{V}{M}},
  year={2019},
  howpublished="\url{https://lists.llvm.org/pipermail/llvm-dev/2019-October/135672.html}",
}

@misc{llvmAALimitations,
  title={Limitations of the {L}{L}{V}{M} alias analysis infrastructure},
  year={2019},
  howpublished="\url{https://llvm.org/docs/AliasAnalysis.html\#limitations}",
}

@misc{restrictRedundancyInC,
  title={On the redundancy of {C}99's restrict},
  year={2012},
  month={July},
  date={25},
  author={pascal},
  howpublished="\url{http://blog.frama-c.com/index.php?post/2012/07/25/On-the-redundancy-of-C99-s-restrict}"
}

@article{autoRestrictAnnotation,
author = {Mock, Markus},
year = {2004},
month = {01},
pages = {},
title = {Why Programmer-specified Aliasing is a Bad Idea}
}

@article{hoareTriple,
author = {Hoare, C. A. R.},
title = {An Axiomatic Basis for Computer Programming},
year = {1969},
issue_date = {Oct. 1969},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {10},
issn = {0001-0782},
url = {https://doi.org/10.1145/363235.363259},
doi = {10.1145/363235.363259},
journal = {Commun. ACM},
month = oct,
pages = {576¿580},
numpages = {5},
keywords = {programming language design, machine-independent programming, theory of programming¿ proofs of programs, program documentation, axiomatic method, formal language definition}
}



@inproceedings{relationalHoareLogic,
author = {Benton, Nick},
title = {Simple Relational Correctness Proofs for Static Analyses and Program Transformations},
year = {2004},
isbn = {158113729X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/964001.964003},
doi = {10.1145/964001.964003},
booktitle = {Proceedings of the 31st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {14¿25},
numpages = {12},
keywords = {security, dependency, program analysis, denotational semantics, types, information flow, partial equivalence relations, Hoare logic, optimizing compilation},
location = {Venice, Italy},
series = {POPL ¿04}
}

@article{llreve,
author = {Kiefer, Moritz and Klebanov, Vladimir and Ulbrich, Mattias},
title = {Relational Program Reasoning Using Compiler IR},
year = {2018},
issue_date = {March 2018},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
volume = {60},
number = {3},
issn = {0168-7433},
url = {https://doi.org/10.1007/s10817-017-9433-5},
doi = {10.1007/s10817-017-9433-5},
journal = {J. Autom. Reason.},
month = mar,
pages = {337–363},
numpages = {27}
}

@inproceedings{lore,
author={Z. {Chen} and Z. {Gong} and J. J. {Szaday} and D. C. {Wong} and D. {Padua} and A. {Nicolau} and A. V. {Veidenbaum} and N. {Watkinson} and Z. {Sura} and S. {Maleki} and J. {Torrellas} and G. {DeJong}},
booktitle={2017 IEEE International Symposium on Workload Characterization (IISWC)},
title={LORE: A loop repository for the evaluation of compilers},
year={2017},
volume={},
number={},
pages={219-228},
}

@misc{compilerai,
  title = {Compiler.AI},
  howpublished = "\url{https://compiler.ai}",
  year = {2020}
}

@misc{doubleBlind,
  title = {Citation removed for double-blind review},
  howpublished = "\url{https://double.blind}",
  year={2020},
}


@inproceedings{eqcheck_crypto,
  title={Automatic equivalence checking for assembly implementations of cryptography libraries},
  author={Lim, Jay P and Nagarakatte, Santosh},
  booktitle={2019 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages={37--49},
  year={2019},
  organization={IEEE}
}

@inproceedings{jia2019taso,
  title={TASO: optimizing deep learning computation with automatic generation of graph substitutions},
  author={Jia, Zhihao and Padon, Oded and Thomas, James and Warszawski, Todd and Zaharia, Matei and Aiken, Alex},
  booktitle={Proceedings of the 27th ACM Symposium on Operating Systems Principles},
  pages={47--62},
  year={2019}
}

@article{transkernel,
  title={Transkernel: An Executor for Commodity Kernels on Peripheral Cores},
  author={Liwei Guo and Shuang Zhai and Yi Qiao and Felix Xiaozhu Lin},
  journal={ArXiv},
  year={2018},
  volume={abs/1811.05000}
}

@inproceedings{learningbt,
author = {Song, Changheng and Wang, Wenwen and Yew, Pen-Chung and Zhai, Antonia and Zhang, Weihua},
title = {Unleashing the Power of Learning: An Enhanced Learning-Based Approach for Dynamic Binary Translation},
year = {2019},
isbn = {9781939133038},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 2019 USENIX Conference on Usenix Annual Technical Conference},
pages = {77–89},
numpages = {13},
location = {Renton, WA, USA},
series = {USENIX ATC ’19}
}

@article{retargetable_system_level_dbt,
author = {Spink, Tom and Wagstaff, Harry and Franke, Bj\"{o}rn},
title = {A Retargetable System-Level DBT Hypervisor},
year = {2020},
issue_date = {June 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {36},
number = {4},
issn = {0734-2071},
url = {https://doi.org/10.1145/3386161},
doi = {10.1145/3386161},
journal = {ACM Trans. Comput. Syst.},
month = may,
articleno = {14},
numpages = {24},
keywords = {hypervisor, Virtualization, dynamic binary translation}
}


@inproceedings{mitosis,
author = {Achermann, Reto and Panwar, Ashish and Bhattacharjee, Abhishek and Roscoe, Timothy and Gandhi, Jayneel},
title = {Mitosis: Transparently Self-Replicating Page-Tables for Large-Memory Machines},
year = {2020},
isbn = {9781450371025},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3373376.3378468},
doi = {10.1145/3373376.3378468},
booktitle = {Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {283–300},
numpages = {18},
keywords = {page-table replication, linux, tlb, numa, large pages, tlb miss overhead},
location = {Lausanne, Switzerland},
series = {ASPLOS ’20}
}

@inproceedings{cuckoopt,
author = {Skarlatos, Dimitrios and Kokolis, Apostolos and Xu, Tianyin and Torrellas, Josep},
title = {Elastic Cuckoo Page Tables: Rethinking Virtual Memory Translation for Parallelism},
year = {2020},
isbn = {9781450371025},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3373376.3378493},
doi = {10.1145/3373376.3378493},
booktitle = {Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {1093–1108},
numpages = {16},
keywords = {virtual memory, page tables, cuckoo hashing},
location = {Lausanne, Switzerland},
series = {ASPLOS ’20}
}

@inproceedings{perforatedPage,
  author={C. H. {Park} and S. {Cha} and B. {Kim} and Y. {Kwon} and D. {Black-Schaffer} and J. {Huh}},
  booktitle={2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)},
  title={Perforated Page: Supporting Fragmented Memory Allocation for Large Pages},
  year={2020},
  volume={},
  number={},
  pages={913-925},
}

@inproceedings{contiguity_memvirt,
  author={C. {Alverti} and S. {Psomadakis} and V. {Karakostas} and J. {Gandhi} and K. {Nikas} and G. {Goumas} and N. {Koziris}},
  booktitle={2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)},
  title={Enhancing and Exploiting Contiguity for Fast Memory Virtualization},
  year={2020},
  volume={},
  number={},
  pages={515-528},
}

@inproceedings{superpage_management_analysis,
  author    = {Weixi Zhu and
               Alan L. Cox and
               Scott Rixner},
  title     = {A Comprehensive Analysis of Superpage Management Mechanisms and Policies},
  booktitle = {2020 {USENIX} Annual Technical Conference, {USENIX} {ATC} 2020, July
               15-17, 2020},
  pages     = {829--842},
  year      = {2020},
  url       = {https://www.usenix.org/conference/atc20/presentation/zhu-weixi},
  timestamp = {Tue, 28 Jul 2020 13:58:39 +0200},
  biburl    = {https://dblp.org/rec/conf/usenix/ZhuCR20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
#crossref  = {DBLP:conf/usenix/2020},

@inproceedings{tailored_page_sizes,
  author={F. {Guvenilir} and Y. N. {Patt}},
  booktitle={2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)},
  title={Tailored Page Sizes},
  year={2020},
  volume={},
  number={},
  pages={900-912},
}

@article{oopsla20,
author = {Gupta, Shubhani and Rose, Abhishek and Bansal, Sorav},
title = {Counterexample-Guided Correlation Algorithm for Translation Validation},
year = {2020},
issue_date = {November 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {OOPSLA},
url = {https://doi.org/10.1145/3428289},
doi = {10.1145/3428289},
abstract = {Automatic translation validation across the unoptimized intermediate representation (IR) of the original source code and the optimized executable assembly code is a desirable capability, and has the potential to compete with existing approaches to verified compilation such as CompCert. A difficult subproblem is the automatic identification of the correlations across the transitions between the two programs' respective locations. We present a counterexample-guided algorithm to identify these correlations in a robust and scalable manner. Our algorithm has both theoretical and empirical advantages over prior work in this problem space.},
journal = {Proc. ACM Program. Lang.},
month = nov,
articleno = {221},
numpages = {29},
keywords = {Translation Validation, Equivalence Checking, Certified Compilation, Automatic Verification}
}

@inproceedings{shemer2019property,
  title={Property directed self composition},
  author={Shemer, Ron and Gurfinkel, Arie and Shoham, Sharon and Vizel, Yakir},
  booktitle={International Conference on Computer Aided Verification},
  pages={161--179},
  year={2019},
  organization={Springer}
}

@inproceedings{kamkin2020deductive,
  title={Deductive Binary Code Verification Against Source-Code-Level Specifications},
  author={Kamkin, Alexander and Khoroshilov, Alexey and Kotsynyak, Artem and Putro, Pavel},
  booktitle={International Conference on Tests and Proofs},
  pages={43--58},
  year={2020},
  organization={Springer}
}

@misc{oopsla20Reviews,
	TITLE = {{ [PAPER-REVIEWS] OOPSLA20 Reviews for Counterexample-Guided Correlation Algorithm for Translation Validation }},
	howpublished = "\url{http://www.cse.iitd.ac.in/~sbansal/tmp/oopsla20_reviews.txt}",
	key = ""
}

@misc{asplos13_reviewer_quote,
	TITLE = {{ [REVIEWER-QUOTE] ASPLOS13 Reviewer Quote for Efficient Virtualization on Embedded Power Architecture\textregistered Platforms }},
	howpublished = "\url{http://www.cse.iitd.ac.in/~sbansal/tmp/asplos13_reviewer_quote.txt}",
	key = ""
}

@misc{alias_set_attributes,
  author = { Finkel, Hal and Tong, Hubert and Carruth, Chandler and Nelson, Clark and Vandevoode, Daveed and Wong, Michael },
	TITLE = {{ Alias-Set Attributes: Toward restrict-like aliasing semantics for C++ }},
	howpublished = "\url{http://open-std.org/JTC1/SC22/WG21/docs/papers/2014/n4150.pdf}",
	key = ""
}



@inproceedings{zhang2015hermes,
  title={HERMES: a fast cross-ISA binary translator with post-optimization},
  author={Zhang, Xiaochun and Guo, Qi and Chen, Yunji and Chen, Tianshi and Hu, Weiwu},
  booktitle={2015 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages={246--256},
  year={2015},
  organization={IEEE}
}

@inproceedings{shimada2015real,
  title={A real-time hypervisor for embedded systems with hardware virtualization support},
  author={Shimada, Takumi and Yashiro, Takeshi and Koshizuka, Noboru and Sakamura, Ken},
  booktitle={2015 TRON Symposium (TRONSHOW)},
  pages={1--7},
  year={2015},
  organization={IEEE}
}

@article{shuja2016qualitative,
  title={A qualitative comparison of mpsoc mobile and embedded virtualization techniques},
  author={Shuja, Junaid and Gani, Abdullah and Madani, Sajjad A},
  journal={arXiv preprint arXiv:1605.01168},
  year={2016}
}

@article{shimada2018t,
  title={T-Visor: A Hypervisor for Mixed Criticality Embedded Real-time System with Hardware Virtualization Support},
  author={Shimada, Takumi and Yashiro, Takeshi and Sakamura, Ken},
  journal={arXiv preprint arXiv:1810.05068},
  year={2018}
}

@inproceedings{disco,
  author    = {Edouard Bugnion and
               Scott Devine and
               Mendel Rosenblum},
  editor    = {Michel Ban{\^{a}}tre and
               Henry M. Levy and
               William M. Waite},
  title     = {{DISCO:} Running Commodity Operating Systems on Scalable Multiprocessors},
  booktitle = {Proceedings of the Sixteenth {ACM} Symposium on Operating System Principles,
               {SOSP} 1997, St. Malo, France, October 5-8, 1997},
  pages     = {143--156},
  publisher = {{ACM}},
  year      = {1997},
  url       = {https://doi.org/10.1145/268998.266672},
  doi       = {10.1145/268998.266672},
}

@inproceedings{suspend_resume,
author = {Zhai, Shuang and Guo, Liwei and Li, Xiangyu and Lin, Felix Xiaozhu},
title = {Decelerating Suspend and Resume in Operating Systems},
year = {2017},
isbn = {9781450349079},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3032970.3032975},
doi = {10.1145/3032970.3032975},
booktitle = {Proceedings of the 18th International Workshop on Mobile Computing Systems and Applications},
pages = {31–36},
numpages = {6},
location = {Sonoma, CA, USA},
series = {HotMobile ’17}
}

@inproceedings{coppik2017treker,
  title={TrEKer: Tracing error propagation in operating system kernels},
  author={Coppik, Nicolas and Schwahn, Oliver and Winter, Stefan and Suri, Neeraj},
  booktitle={2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  pages={377--387},
  year={2017},
  organization={IEEE}
}

@article{kim2014design,
  title={Design and Implementation of a Dynamic Instrumentation Framework based on Light-weight Dynamic Binary Translation},
  author={Kim, Jeehong and Lee, Dongwoo and Kim, Inhyeok and Eom, Young Ik},
  journal={Journal of KIISE},
  volume={41},
  number={11},
  pages={892--899},
  year={2014},
  publisher={Korean Institute of Information Scientists and Engineers}
}

@article{chickforgoing,
  title={Forgoing hypervisor fidelity for measuring virtual machine performance},
  author={Chick, Oliver RA}
}

@InProceedings{c_memory_model_symbolic_values,
author="Besson, Fr{\'e}d{\'e}ric
and Blazy, Sandrine
and Wilke, Pierre",
editor="Garrigue, Jacques",
title="A Precise and Abstract Memory Model for C Using Symbolic Values",
booktitle="Programming Languages and Systems",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="449--468",
isbn="978-3-319-12736-1"
}

@Manual{DPDK,
	title = {Intel Data Plane Development Kit},
	author = {},
	note = {\url{http://dpdk.org/}},
}

@Manual{xeon,
	title = {Intel Xeon Processor E5-2640 v3},
	author = {},
	note = {\url{http://ark.intel.com/products/83359/Intel-Xeon-Processor-E5-2640-v3-20M-Cache-2_60-GHz}},
}

@Manual{pktgen,
	title = {Pktgen-DPDK},
	author = {},
	note = {\url{http://dpdk.org/browse/apps/pktgen-dpdk/refs/}},
}

@Manual{l2crypto,
	title = {L2 Forwarding with Crypto},
	author = {},
	note = {\url{http://dpdk.org/doc/guides-16.07/sample_app_ug/l2_forward_crypto.html}},
}

@inproceedings {189006,
	author = {Anuj Kalia and Dong Zhou and Michael Kaminsky and David G. Andersen},
	title = {Raising the Bar for Using GPUs in Software Packet Processing},
	booktitle = {12th USENIX Symposium on Networked Systems Design and Implementation (NSDI 15)},
	year = {2015},
	isbn = {978-1-931971-218},
	address = {Oakland, CA},
	pages = {409--423},
	url = {https://www.usenix.org/conference/nsdi15/technical-sessions/presentation/kalia},
	publisher = {USENIX Association},
}

@inproceedings{dobrescu2009routebricks,
  title={RouteBricks: exploiting parallelism to scale software routers},
  author={Dobrescu, Mihai and Egi, Norbert and Argyraki, Katerina and Chun, Byung-Gon and Fall, Kevin and Iannaccone, Gianluca and Knies, Allan and Manesh, Maziar and Ratnasamy, Sylvia},
  booktitle={Proceedings of the ACM SIGOPS 22nd symposium on Operating systems principles},
  pages={15--28},
  year={2009},
  organization={ACM}
}

@article{Bosshart:2014:PPP:2656877.2656890,
 author = {Bosshart, Pat and Daly, Dan and Gibb, Glen and Izzard, Martin and McKeown, Nick and Rexford, Jennifer and Schlesinger, Cole and Talayco, Dan and Vahdat, Amin and Varghese, George and Walker, David},
 title = {P4: Programming Protocol-independent Packet Processors},
 journal = {SIGCOMM Comput. Commun. Rev.},
 issue_date = {July 2014},
 volume = {44},
 number = {3},
 month = jul,
 year = {2014},
 issn = {0146-4833},
 pages = {87--95},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/2656877.2656890},
 doi = {10.1145/2656877.2656890},
 acmid = {2656890},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {p4, protocol-independent, reconfigurability, sdn},
}

@inproceedings{Laki:2016:HSP:2934872.2959080,
 author = {Laki, S\'{a}ndor and Horp\'{a}csi, D\'{a}niel and V\"{o}r\"{o}s, P{\'e}ter and Kitlei, R\'{o}bert and Lesk\'{o}, D\'{a}niel and Tejfel, M\'{a}t{\'e}},
 title = {High Speed Packet Forwarding Compiled from Protocol Independent Data Plane Specifications},
 booktitle = {Proceedings of the 2016 ACM SIGCOMM Conference},
 series = {SIGCOMM '16},
 year = {2016},
 isbn = {978-1-4503-4193-6},
 location = {Florianopolis, Brazil},
 pages = {629--630},
 numpages = {2},
 url = {http://doi.acm.org/10.1145/2934872.2959080},
 doi = {10.1145/2934872.2959080},
 acmid = {2959080},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {P4, Packet forwarding, Programmable data plane, SDN},
}

@inproceedings{Dobrescu:2010:CPM:1921151.1921154,
 author = {Dobrescu, Mihai and Argyraki, Katerina and Iannaccone, Gianluca and Manesh, Maziar and Ratnasamy, Sylvia},
 title = {Controlling Parallelism in a Multicore Software Router},
 booktitle = {Proceedings of the Workshop on Programmable Routers for Extensible Services of Tomorrow},
 series = {PRESTO '10},
 year = {2010},
 isbn = {978-1-4503-0467-2},
 location = {Philadelphia, Pennsylvania},
 pages = {2:1--2:6},
 articleno = {2},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1921151.1921154},
 doi = {10.1145/1921151.1921154},
 acmid = {1921154},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{DBLP:conf/globecom/ZhangWYLL13,
  author    = {Ting Zhang and
               Yi Wang and
               Tong Yang and
               Jianyuan Lu and
               Bin Liu},
  title     = {NDNBench: {A} benchmark for Named Data Networking lookup},
  booktitle = {2013 {IEEE} Global Communications Conference, {GLOBECOM} 2013, Atlanta,
               GA, USA, December 9-13, 2013},
  pages     = {2152--2157},
  publisher = {{IEEE}},
  year      = {2013},
  url       = {https://doi.org/10.1109/GLOCOM.2013.6831393},
  doi       = {10.1109/GLOCOM.2013.6831393},
  timestamp = {Fri, 28 Apr 2017 01:00:00 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/globecom/ZhangWYLL13},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@INPROCEEDINGS{Gupta98routinglookups,
    author = {Pankaj Gupta and Steven Lin and Nick Mckeown},
    title = {Routing Lookups in Hardware at Memory Access Speeds},
    booktitle = {},
    year = {1998},
    pages = {1240--1247}
}

@inproceedings{Chen:2005:SAH:1065010.1065038,
 author = {Chen, Michael K. and Li, Xiao Feng and Lian, Ruiqi and Lin, Jason H. and Liu, Lixia and Liu, Tao and Ju, Roy},
 title = {Shangri-La: Achieving High Performance from Compiled Network Applications While Enabling Ease of Programming},
 booktitle = {Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '05},
 year = {2005},
 isbn = {1-59593-056-6},
 location = {Chicago, IL, USA},
 pages = {224--236},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1065010.1065038},
 doi = {10.1145/1065010.1065038},
 acmid = {1065038},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {chip multiprocessors, dataflow programming, network processors, packet processing, program partitioning, throughput-oriented computing},
}

@inproceedings{Zhou:2013:SHP:2535372.2535379,
 author = {Zhou, Dong and Fan, Bin and Lim, Hyeontaek and Kaminsky, Michael and Andersen, David G.},
 title = {Scalable, High Performance Ethernet Forwarding with CuckooSwitch},
 booktitle = {Proceedings of the Ninth ACM Conference on Emerging Networking Experiments and Technologies},
 series = {CoNEXT '13},
 year = {2013},
 isbn = {978-1-4503-2101-3},
 location = {Santa Barbara, California, USA},
 pages = {97--108},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2535372.2535379},
 doi = {10.1145/2535372.2535379},
 acmid = {2535379},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cuckoo hashing, scalability, software switch},
}

@inproceedings{Kim:2012:PBC:2349896.2349910,
 author = {Kim, Joongi and Huh, Seonggu and Jang, Keon and Park, KyoungSoo and Moon, Sue},
 title = {The Power of Batching in the Click Modular Router},
 booktitle = {Proceedings of the Asia-Pacific Workshop on Systems},
 series = {APSYS '12},
 year = {2012},
 isbn = {978-1-4503-1669-9},
 location = {Seoul, Republic of Korea},
 pages = {14:1--14:6},
 articleno = {14},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/2349896.2349910},
 doi = {10.1145/2349896.2349910},
 acmid = {2349910},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{kohler2000click,
  title={The Click modular router},
  author={Kohler, Eddie and Morris, Robert and Chen, Benjie and Jannotti, John and Kaashoek, M Frans},
  journal={ACM Transactions on Computer Systems (TOCS)},
  volume={18},
  number={3},
  pages={263--297},
  year={2000},
  publisher={ACM}
}



@inproceedings{data_representation_synthesis,
 author = {Hawkins, Peter and Aiken, Alex and Fisher, Kathleen and Rinard, Martin and Sagiv, Mooly},
 title = {Data Representation Synthesis},
 booktitle = {Proceedings of the 32Nd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '11},
 year = {2011},
 isbn = {978-1-4503-0663-8},
 location = {San Jose, California, USA},
 pages = {38--49},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993498.1993504},
 doi = {10.1145/1993498.1993504},
 acmid = {1993504},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {composite data structures, synthesis},
}

@inproceedings{concurrent_data_representation_synthesis,
 author = {Hawkins, Peter and Aiken, Alex and Fisher, Kathleen and Rinard, Martin and Sagiv, Mooly},
 title = {Concurrent Data Representation Synthesis},
 booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '12},
 year = {2012},
 isbn = {978-1-4503-1205-9},
 location = {Beijing, China},
 pages = {417--428},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2254064.2254114},
 doi = {10.1145/2254064.2254114},
 acmid = {2254114},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {lock placement, synthesis},
}


@phdthesis{loop_fission, place={United States}, title={Optimizing supercompilers for supercomputers}, abstractNote={This thesis discusses several problems facing compiler design for supercomputers. One problem is that of building a comprehensive yet efficient means of representing the flow of data in a program. A means is proposed of computing a data dependence graph and labelling the arcs with direction vectors that show how the flow of data corresponds to the loop structure of the program. These data dependence direction vectors are used in several high level compiler loop optimizations, namely, loop vectorization, loop fission, loop fusion and loop interchanging. It is shown how to perform these transformations and how to use them to optimize programs for a wide range of supercomputers. The problems of recurrence relations are also discussed. Arithmetic recurrences with IF statements, and recurrences involving both data and control dependence relations in a cycle are studied. The wavefront method of solving recurrences is also treated. Another problem for a compiler is the management of compiler temporary variables; supercomputer compilers must manage temporary arrays, and ways to make this problem more tractable are discussed. Finally WHILE loops are discussed and it is shown how they relate to iterative DO loops, and several methods to execute WHILE loops on a machine are shown. THe general structure of an optimizing compiler for supercomputers, developed from the experience with a test-bed compiler, is given.}, school={Univ. of Illinois,Urbana, IL}, author={Wolfe, M.J.}, year={1982}, month={Jan}}

@misc{mlir,
      title={MLIR: A Compiler Infrastructure for the End of Moore's Law},
      author={Chris Lattner and Mehdi Amini and Uday Bondhugula and Albert Cohen and Andy Davis and Jacques Pienaar and River Riddle and Tatiana Shpeisman and Nicolas Vasilache and Oleksandr Zinenko},
      year={2020},
      eprint={2002.11054},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

@inproceedings{sysForPmem,
author = {Dulloor, Subramanya R. and Kumar, Sanjay and Keshavamurthy, Anil and Lantz, Philip and Reddy, Dheeraj and Sankaran, Rajesh and Jackson, Jeff},
title = {System Software for Persistent Memory},
year = {2014},
isbn = {9781450327046},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2592798.2592814},
doi = {10.1145/2592798.2592814},
abstract = {Emerging byte-addressable, non-volatile memory technologies offer performance within
an order of magnitude of DRAM, prompting their inclusion in the processor memory subsystem.
However, such load/store accessible Persistent Memory (PM) has implications on system
design, both hardware and software. In this paper, we explore system software support
to enable low-overhead PM access by new and legacy applications. To this end, we implement
PMFS, a light-weight POSIX file system that exploits PM's byte-addressability to avoid
overheads of block-oriented storage and enable direct PM access by applications (with
memory-mapped I/O). PMFS exploits the processor's paging and memory ordering features
for optimizations such as fine-grained logging (for consistency) and transparent large
page support (for faster memory-mapped I/O). To provide strong consistency guarantees,
PMFS requires only a simple hardware primitive that provides software enforceable
guarantees of durability and ordering of stores to PM. Finally, PMFS uses the processor's
existing features to protect PM from stray writes, thereby improving reliability.Using
a hardware emulator, we evaluate PMFS's performance with several workloads over a
range of PM performance characteristics. PMFS shows significant (up to an order of
magnitude) gains over traditional file systems (such as ext4) on a RAMDISK-like PM
block device, demonstrating the benefits of optimizing system software for PM.},
booktitle = {Proceedings of the Ninth European Conference on Computer Systems},
articleno = {15},
numpages = {15},
location = {Amsterdam, The Netherlands},
series = {EuroSys '14}
}

@Book{programmingPersistentMemory,
author={Scargall, Steve},
title={Programming Persistent Memory : A Comprehensive Guide for Developers},
year={2020},
publisher={Springer Nature},
keywords={Computer science; Computer communication systems; Big data},
abstract={Beginning and experienced programmers will use this comprehensive guide to persistent memory programming. You will understand how persistent memory brings together several new software/hardware requirements, and offers great promise for better performance and faster application startup times---a huge leap forward in byte-addressable capacity compared with current DRAM offerings. This revolutionary new technology gives applications significant performance and capacity improvements over existing technologies. It requires a new way of thinking and developing, which makes this highly disruptive to the IT/computing industry. The full spectrum of industry sectors that will benefit from this technology include, but are not limited to, in-memory and traditional databases, AI, analytics, HPC, virtualization, and big data. Programming Persistent Memory describes the technology and why it is exciting the industry. It covers the operating system and hardware requirements as well as how to create development environments using emulated or real persistent memory hardware. The book explains fundamental concepts; provides an introduction to persistent memory programming APIs for C, C++, JavaScript, and other languages; discusses RMDA with persistent memory; reviews security features; and presents many examples. Source code and examples that you can run on your own systems are included. What You'll Learn Understand what persistent memory is, what it does, and the value it brings to the industry Become familiar with the operating system and hardware requirements to use persistent memory Know the fundamentals of persistent memory programming: why it is different from current programming methods, and what developers need to keep in mind when programming for persistence Look at persistent memory application development by example using the Persistent Memory Development Kit (PMDK) Design and optimize data structures for persistent memory Study how real-world applications are modified to leverage persistent memory Utilize the tools available for persistent memory programming, application performance profiling, and debugging Who This Book Is For C, C++, Java, and Python developers, but will also be useful to software, cloud, and hardware architects across a broad spectrum of sectors, including cloud service providers, independent software vendors, high performance compute, artificial intelligence, data analytics, big data, etc.},
doi={10.1007/978-1-4842-4932-1},
url={https://library.oapen.org/bitstream/id/e234e601-6128-4ee4-be45-32e8f2e417dd/1007325.pdf},
url={https://doi.org/10.1007/978-1-4842-4932-1},
language={English}
}

@inproceedings{espresso,
author = {Wu, Mingyu and Zhao, Ziming and Li, Haoyu and Li, Heting and Chen, Haibo and Zang, Binyu and Guan, Haibing},
title = {Espresso: Brewing Java For More Non-Volatility with Non-Volatile Memory},
year = {2018},
isbn = {9781450349116},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3173162.3173201},
doi = {10.1145/3173162.3173201},
abstract = {Fast, byte-addressable non-volatile memory (NVM) embraces both near-DRAM latency and
disk-like persistence, which has generated considerable interests to revolutionize
system software stack and programming models. However, it is less understood how NVM
can be combined with managed runtime like Java virtual machine (JVM) to ease persistence
management. This paper proposes Espresso, a holistic extension to Java and its runtime,
to enable Java programmers to exploit NVM for persistence management with high performance.
Espresso first provides a general persistent heap design called Persistent Java Heap
(PJH) to manage persistent data as normal Java objects. The heap is then strengthened
with a recoverable mechanism to provide crash consistency for heap metadata. Espresso
further provides a new abstraction called Persistent Java Object (PJO) to provide
an easy-to-use but safe persistence programming model for programmers to persist application
data. Evaluation confirms that Espresso significantly outperforms state-of-art NVM
support for Java (i.e., JPA and PCJ) while being compatible to data structures in
existing Java programs.},
booktitle = {Proceedings of the Twenty-Third International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {70–83},
numpages = {14},
keywords = {crash consistency, non-volatile memory, java virtual machine},
location = {Williamsburg, VA, USA},
series = {ASPLOS '18}
}

@inproceedings{autopersist,
author = {Shull, Thomas and Huang, Jian and Torrellas, Josep},
title = {AutoPersist: An Easy-to-Use Java NVM Framework Based on Reachability},
year = {2019},
isbn = {9781450367127},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3314221.3314608},
doi = {10.1145/3314221.3314608},
abstract = {Byte-addressable, non-volatile memory (NVM) is emerging as a revolutionary memory
technology that provides persistency, near-DRAM performance, and scalable capacity.
To facilitate its use, many NVM programming models have been proposed. However, most
models require programmers to explicitly specify the data structures or objects that
should reside in NVM. Such requirement increases the burden on programmers, complicates
software development, and introduces opportunities for correctness and performance
bugs. We believe that requiring programmers to identify the data structures that
should reside in NVM is untenable. Instead, programmers should only be required to
identify durable roots - the entry points to the persistent data structures at recovery
time. The NVM programming framework should then automatically ensure that all the
data structures reachable from these roots are in NVM, and stores to these data structures
are persistently completed in an intuitive order. To this end, we present a new NVM
programming framework, named AutoPersist, that only requires programmers to identify
durable roots. AutoPersist then persists all the data structures that can be reached
from the durable roots in an automated and transparent manner. We implement AutoPersist
as a thread-safe extension to the Java language and perform experiments with a variety
of applications running on Intel Optane DC persistent memory. We demonstrate that
AutoPersist requires minimal code modifications, and significantly outperforms expert-marked
Java NVM applications.},
booktitle = {Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {316–332},
numpages = {17},
keywords = {Non-Volatile Memory, Java, JIT Compilation},
location = {Phoenix, AZ, USA},
series = {PLDI 2019}
}

@misc{persistent_memory_programming_login_article,
  AUTHOR = "Andy Rudoff",
  TITLE = "{P}ersistent {M}emory {P}rogramming",
  howpublished = "The Usenix magazine, 34-40, 2017. \url{https://www.usenix.org/system/files/login/articles/login_summer17_07_rudoff.pdf}",
}

@inproceedings{logfree_concurrent_ds,
author = {David, Tudor and Dragojevi\'{c}, Aleksandar and Guerraoui, Rachid and Zablotchi, Igor},
title = {Log-Free Concurrent Data Structures},
year = {2018},
isbn = {9781931971447},
publisher = {USENIX Association},
address = {USA},
abstract = {Non-volatile RAM (NVRAM) makes it possible for data structures to tolerate transient
failures, assuming however that programmers have designed these structures such that
their consistency is preserved upon recovery. Previous approaches are typically transactional
and inherently make heavy use of logging, resulting in implementations that are significantly
slower than their DRAM counterparts. In this paper, we introduce a set of techniques
aimed at lock-free data structures that, in the large majority of cases, remove the
need for logging (and costly durable store instructions) both in the data structure
algorithm and in the associated memory management scheme. Together, these generic
techniques enable us to design what we call log-free concurrent data structures, which,
as we illustrate on linked lists, hash tables, skip lists, and BSTs, can provide several-fold
performance improvements over previous transaction-based implementations, with overheads
of the order of milliseconds for recovery after a failure. We also highlight how our
techniques can be integrated into practical systems, by presenting a durable version
of Memcached that maintains the performance of its volatile counterpart.},
booktitle = {Proceedings of the 2018 USENIX Conference on Usenix Annual Technical Conference},
pages = {373–385},
numpages = {13},
location = {Boston, MA, USA},
series = {USENIX ATC '18}
}

@inproceedings{whole_system_persistence,
author = {Narayanan, Dushyanth and Hodson, Orion},
title = {Whole-System Persistence},
year = {2012},
isbn = {9781450307598},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2150976.2151018},
doi = {10.1145/2150976.2151018},
abstract = {Today's databases and key-value stores commonly keep all their data in main memory.
A single server can have over 100 GB of memory, and a cluster of such servers can
have 10s to 100s of TB. However, a storage back end is still required for recovery
from failures. Recovery can last for minutes for a single server or hours for a whole
cluster, causing heavy load on the back end. Non-volatile main memory (NVRAM) technologies
can help by allowing near-instantaneous recovery of in-memory state. However, today's
software does not support this well. Block-based approaches such as persistent buffer
caches suffer from data duplication and block transfer overheads. Recently, user-level
persistent heaps have been shown to have much better performance than these. However
they require substantial application modification and still have significant runtime
overheads. This paper proposes whole-system persistence (WSP) as an alternative. WSP
is aimed at systems where all memory is non-volatile. It transparently recovers an
application's entire state, making a failure appear as a suspend/resume event. Runtime
overheads are eliminated by using "flush on fail": transient state in processor registers
and caches is flushed to NVRAM only on failure, using the residual energy from the
system power supply. Our evaluation shows that this approach has 1.6--13 times better
runtime performance than a persistent heap, and that flush-on-fail can complete safely
within 2--35% of the residual energy window provided by standard power supplies.},
booktitle = {Proceedings of the Seventeenth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {401–410},
numpages = {10},
keywords = {persistence, NVRAM},
location = {London, England, UK},
series = {ASPLOS XVII}
}

@inproceedings{splitfs,
author = {Kadekodi, Rohan and Lee, Se Kwon and Kashyap, Sanidhya and Kim, Taesoo and Kolli, Aasheesh and Chidambaram, Vijay},
title = {SplitFS: Reducing Software Overhead in File Systems for Persistent Memory},
year = {2019},
isbn = {9781450368735},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3341301.3359631},
doi = {10.1145/3341301.3359631},
abstract = {We present SplitFS, a file system for persistent memory (PM) that reduces software
overhead significantly compared to state-of-the-art PM file systems. SplitFS presents
a novel split of responsibilities between a user-space library file system and an
existing kernel PM file system. The user-space library file system handles data operations
by intercepting POSIX calls, memory-mapping the underlying file, and serving the read
and overwrites using processor loads and stores. Metadata operations are handled by
the kernel PM file system (ext4 DAX). SplitFS introduces a new primitive termed relink
to efficiently support file appends and atomic data operations. SplitFS provides three
consistency modes, which different applications can choose from, without interfering
with each other. SplitFS reduces software overhead by up-to 4x compared to the NOVA
PM file system, and 17x compared to ext4 DAX. On a number of micro-benchmarks and
applications such as the LevelDB key-value store running the YCSB benchmark, SplitFS
increases application performance by up to 2x compared to ext4 DAX and NOVA while
providing similar consistency guarantees.},
booktitle = {Proceedings of the 27th ACM Symposium on Operating Systems Principles},
pages = {494–508},
numpages = {15},
keywords = {crash consistency, persistent memory, direct access, file systems},
location = {Huntsville, Ontario, Canada},
series = {SOSP '19}
}

@inproceedings{caftl,
author = {Chen, Feng and Luo, Tian and Zhang, Xiaodong},
title = {CAFTL: A Content-Aware Flash Translation Layer Enhancing the Lifespan of Flash Memory Based Solid State Drives},
year = {2011},
isbn = {9781931971829},
publisher = {USENIX Association},
address = {USA},
abstract = {Although Flash Memory based Solid State Drive (SSD) exhibits high performance and
low power consumption, a critical concern is its limited lifespan along with the associated
reliability issues. In this paper, we propose to build a Content-Aware Flash Translation
Layer (CAFTL) to enhance the endurance of SSDs at the device level. With no need of
any semantic information from the host, CAFTL can effectively reduce write traffic
to flash memory by removing unnecessary duplicate writes and can also substantially
extend available free flash memory space by coalescing redundant data in SSDs, which
further improves the efficiency of garbage collection and wear-leveling. In order
to retain high data access performance, we have also designed a set of acceleration
techniques to reduce the runtime overhead and minimize the performance impact caused
by extra computational cost. Our experimental results show that our solution can effectively
identify up to 86.2% of the duplicate writes, which translates to a write traffic
reduction of up to 24.2% and extends the flash space by a factor of up to 31.2%. Meanwhile,
CAFTL only incurs a minimized performance overhead by a factor of up to 0.5%.},
booktitle = {Proceedings of the 9th USENIX Conference on File and Stroage Technologies},
pages = {6},
numpages = {1},
location = {San Jose, California},
series = {FAST'11}
}

@misc{fragmentation_in_pmem,
  TITLE = {Persistent allocator design - fragmentation},
  howpublished = "\url{https://pmem.io/2016/02/25/fragmentation.html}",
  key = {Persistent allocator design - fragmentation},
}

@article{hinfs,
title = {HiNFS: A Persistent Memory File System with Both Buffering and Direct-Access},
author = {Chen, Youmin and Shu, Jiwu and Ou, Jiaxin and Lu, Youyou},
year = {2018},
issue_date = {April 2018},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {1},
issn = {1553-3077},
url = {https://doi.org/10.1145/3204454},
doi = {10.1145/3204454},
journal = {ACM Trans. Storage},
month = apr,
articleno = {4},
numpages = {30},
keywords = {buffering, file system, direct access, Persistent memory}
}


@inproceedings{facebook_reducing_dram_footprint_using_nvm,
author = {Eisenman, Assaf and Gardner, Darryl and AbdelRahman, Islam and Axboe, Jens and Dong, Siying and Hazelwood, Kim and Petersen, Chris and Cidon, Asaf and Katti, Sachin},
title = {Reducing DRAM Footprint with NVM in Facebook},
year = {2018},
isbn = {9781450355841},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3190508.3190524},
doi = {10.1145/3190508.3190524},
abstract = {Popular SSD-based key-value stores consume a large amount of DRAM in order to provide
high-performance database operations. However, DRAM can be expensive for data center
providers, especially given recent global supply shortages that have resulted in increasing
DRAM costs. In this work, we design a key-value store, MyNVM, which leverages an NVM
block device to reduce DRAM usage, and to reduce the total cost of ownership, while
providing comparable latency and queries-per-second (QPS) as MyRocks on a server with
a much larger amount of DRAM. Replacing DRAM with NVM introduces several challenges.
In particular, NVM has limited read bandwidth, and it wears out quickly under a high
write bandwidth.We design novel solutions to these challenges, including using small
block sizes with a partitioned index, aligning blocks post-compression to reduce read
bandwidth, utilizing dictionary compression, implementing an admission control policy
for which objects get cached in NVM to control its durability, as well as replacing
interrupts with a hybrid polling mechanism. We implemented MyNVM and measured its
performance in Facebook's production environment. Our implementation reduces the size
of the DRAM cache from 96 GB to 16 GB, and incurs a negligible impact on latency and
queries-per-second compared to MyRocks. Finally, to the best of our knowledge, this
is the first study on the usage of NVM devices in a commercial data center environment.},
booktitle = {Proceedings of the Thirteenth EuroSys Conference},
articleno = {42},
numpages = {13},
location = {Porto, Portugal},
series = {EuroSys '18}
}

@inproceedings{go_pmem,
  title={go-pmem: Native Support for Programming Persistent Memory in Go},
  author={Jerrin Shaji George and Mohit Verma and R. Venkatasubramanian and Pratap Subrahmanyam},
  booktitle={USENIX Annual Technical Conference},
  year={2020}
}

@inproceedings{nvtraverse,
author = {Friedman, Michal and Ben-David, Naama and Wei, Yuanhao and Blelloch, Guy E. and Petrank, Erez},
title = {NVTraverse: In NVRAM Data Structures, the Destination is More Important than the Journey},
year = {2020},
isbn = {9781450376136},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3386031},
doi = {10.1145/3385412.3386031},
abstract = {The recent availability of fast, dense, byte-addressable non-volatile memory has led
to increasing interest in the problem of designing durable data structures that can
recover from system crashes. However, designing durable concurrent data structures
that are correct and efficient has proven to be very difficult, leading to many inefficient
or incorrect algorithms. In this paper, we present a general transformation that takes
a lock-free data structure from a general class called traversal data structure (that
we formally define) and automatically transforms it into an implementation of the
data structure for the NVRAM setting that is provably durably linearizable and highly
efficient. The transformation hinges on the observation that many data structure operations
begin with a traversal phase that does not need to be persisted, and thus we only
begin persisting when the traversal reaches its destination. We demonstrate the transformation's
efficiency through extensive measurements on a system with Intel's recently released
Optane DC persistent memory, showing that it can outperform competitors on many workloads.},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {377–392},
numpages = {16},
keywords = {Concurrent Data Structures, Lock-free, Non-blocking, Non-volatile Memory},
location = {London, UK},
series = {PLDI 2020}
}

@article{compiler_support_for_nvm_persistence,
author = {Elkhouly, Reem and Alshboul, Mohammad and Hayashi, Akihiro and Solihin, Yan and Kimura, Keiji},
title = {Compiler-Support for Critical Data Persistence in NVM},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {4},
issn = {1544-3566},
url = {https://doi.org/10.1145/3371236},
doi = {10.1145/3371236},
abstract = {Non-volatile Main Memories (NVMs) offer a promising way to preserve data persistence
and enable computation recovery in case of failure. While the use of NVMs can significantly
reduce the overhead of failure recovery, which is the case with High-Performance Computing
(HPC) kernels, rewriting existing programs or writing new applications for NVMs is
non-trivial. In this article, we present a compiler-support that automatically inserts
complex instructions into kernels to achieve NVM data-persistence based on a simple
programmer directive. Unlike checkpointing techniques that store the whole system
state, our technique only persists user-designated objects as well as some parameters
required for safe recovery such as loop induction variables. Also, our technique can
reduce the number of data transfer operations, because our compiler coalesces consecutive
memory-persisting operations into a single memory transaction per cache line when
possible.Our compiler-support is implemented in the LLVM tool-chain and introduces
the necessary modifications to loop-intensive computational kernels (e.g., TMM, LU,
Gauss, and FFT) to force data persistence. The experiments show that our proposed
compiler-support outperforms the most recent checkpointing techniques while its performance
overheads are insignificant.},
journal = {ACM Trans. Archit. Code Optim.},
month = dec,
articleno = {54},
numpages = {25},
keywords = {data persistence, NVM, Compiler-support, valid recovery}
}

@inproceedings{tv_oskernel,
author = {Sewell, Thomas Arthur Leck and Myreen, Magnus O. and Klein, Gerwin},
title = {Translation Validation for a Verified OS Kernel},
year = {2013},
isbn = {9781450320146},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2491956.2462183},
doi = {10.1145/2491956.2462183},
abstract = {We extend the existing formal verification of the seL4 operating system microkernel
from 9500 lines of C source code to the binary level. We handle all functions that
were part of the previous verification. Like the original verification, we currently
omit the assembly routines and volatile accesses used to control system hardware.More
generally, we present an approach for proving refinement between the formal semantics
of a program on the C source level and its formal semantics on the binary level, thus
checking the validity of compilation, including some optimisations, and linking, and
extending static properties proved of the source code to the executable. We make use
of recent improvements in SMT solvers to almost fully automate this process.We handle
binaries generated by unmodified gcc 4.5.1 at optimisation level 1, and can handle
most of seL4 even at optimisation level 2.},
booktitle = {Proceedings of the 34th ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {471–482},
numpages = {12},
keywords = {binary verification, seL4, microkernel},
location = {Seattle, Washington, USA},
series = {PLDI '13}
}

@inproceedings{alive2,
author = {Lopes, Nuno P. and Lee, Juneyoung and Hur, Chung-Kil and Liu, Zhengyang and Regehr, John},
title = {Alive2: Bounded Translation Validation for LLVM},
year = {2021},
isbn = {9781450383912},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453483.3454030},
doi = {10.1145/3453483.3454030},
abstract = {We designed, implemented, and deployed Alive2: a bounded translation validation tool for the LLVM compiler’s intermediate representation (IR). It limits resource consumption by, for example, unrolling loops up to some bound, which means there are circumstances in which it misses bugs. Alive2 is designed to avoid false alarms, is fully automatic through the use of an SMT solver, and requires no changes to LLVM. By running Alive2 over LLVM’s unit test suite, we discovered and reported 47 new bugs, 28 of which have been fixed already. Moreover, our work has led to eight patches to the LLVM Language Reference—the definitive description of the semantics of its IR—and we have participated in numerous discussions with the goal of clarifying ambiguities and fixing errors in these semantics. Alive2 is open source and we also made it available on the web, where it has active users from the LLVM community.},
booktitle = {Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation},
pages = {65–79},
numpages = {15},
keywords = {Translation Validation, IR Semantics, Automatic Software Verification, Compilers},
location = {Virtual, Canada},
series = {PLDI 2021}
}

@inproceedings{diffy,
  title = {Diffy: Inductive Reasoning of Array Programs using Difference Invariants},
  author = {Chakraborty, Supratik and Gupta, Ashutosh and Unadkat, Divyesh},
  booktitle={Proceedings of the 33rd International Conference on Computer-Aided Verification (CAV), to appear},
}

@article{samet78,
 author = {Samet, Hanan},
 title = {Proving the Correctness of Heuristically Optimized Code},
 journal = {Commun. ACM},
 issue_date = {July 1978},
 volume = {21},
 number = {7},
 month = jul,
 year = {1978},
 issn = {0001-0782},
 pages =  {570--582},
 numpages =  {13},
 xurl =  {http://doi.acm.org/10.1145/359545.359569},
 doi =  {10.1145/359545.359569},
 acmid = {359569},
 publisher =  {ACM},
 xaddress =  {New York, NY, USA},
 keywords = {Lisp, code optimization, compilers, correctness, debugging, program verification},
}

@inproceedings{superopt_nacl,
 author = {Churchill, Berkeley and Sharma, Rahul and Bastien, JF and Aiken, Alex},
 title = {Sound Loop Superoptimization for {Google} Native Client},
 booktitle = {Proceedings of the Twenty-Second International Conference on Architectural Support for Programming Languages and Operating Systems},
 series = {ASPLOS '17},
 year = {2017},
 isbn = {978-1-4503-4465-4},
 location = {Xi'an, China},
 pages = {313--326},
 numpages = {14},
 xurl = {http://doi.acm.org/10.1145/3037697.3037754},
 doi = {10.1145/3037697.3037754},
 acmid = {3037754},
 publisher = {ACM},
 xaddress = {New York, NY, USA},
 keywords = {assembly, bounded verification, data-driven verification, equivalence checking, native client, superoptimization, verification, x86-64},
}

@InProceedings{kedar13,
author="Namjoshi, Kedar S.
and Zuck, Lenore D.",
editor="Logozzo, Francesco
and F{\"a}hndrich, Manuel",
title="Witnessing Program Transformations",
booktitle="Static Analysis",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="304--323",
abstract="We study two closely related problems: (a) showing that a program transformation is correct and (b) propagating an invariant through a program transformation. The second problem is motivated by an application which utilizes program invariants to improve the quality of compiler optimizations. We show that both problems can be addressed by augmenting a transformation with an auxiliary witness generation procedure. For every application of the transformation, the witness generator constructs a relation which guarantees the correctness of that instance. We show that stuttering simulation is a sound and complete witness format. Completeness means that, under mild conditions, every correct transformation induces a stuttering simulation witness which is strong enough to prove that the transformation is correct. A witness is self-contained, in that its correctness is independent of the optimization procedure which generates it. Any invariant of a source program can be turned into an invariant of the target of a transformation by suitably composing it with its witness. Stuttering simulations readily compose, forming a single witness for a sequence of transformations. Witness generation is simpler than a formal proof of correctness, and it is comprehensive, unlike the heuristics used for translation validation. We define witnesses for a number of standard compiler optimizations; this exercise shows that witness generators can be implemented quite easily.",
isbn="978-3-642-38856-9"
}

@inproceedings{wort,
author = {Lee, Se Kwon and Lim, K. Hyun and Song, Hyunsub and Nam, Beomseok and Noh, Sam H.},
title = {WORT: Write Optimal Radix Tree for Persistent Memory Storage Systems},
year = {2017},
isbn = {9781931971362},
publisher = {USENIX Association},
address = {USA},
abstract = {Recent interest in persistent memory (PM) has stirred development of index structures
that are efficient in PM. Recent such developments have all focused on variations
of the B-tree. In this paper, we show that the radix tree, which is another less popular
indexing structure, can be more appropriate as an efficient PM indexing structure.
This is because the radix tree structure is determined by the prefix of the inserted
keys and also does not require tree rebalancing operations and node granularity updates.
However, the radix tree as-is cannot be used in PM. As another contribution, we present
three radix tree variants, namely, WORT (Write Optimal Radix Tree), WOART (Write Optimal
Adaptive Radix Tree), and ART+CoW. Of these, the first two are optimal for PM in the
sense that they only use one 8-byte failure-atomic write per update to guarantee the
consistency of the structure and do not require any duplicate copies for logging or
CoW. Extensive performance studies show that our proposed radix tree variants perform
considerable better than recently proposed B-tree variants for PM such NVTree, wB+Tree,
and FPTree for synthetic workloads as well as in implementations within Memcached.},
booktitle = {Proceedings of the 15th Usenix Conference on File and Storage Technologies},
pages = {257–270},
numpages = {14},
location = {Santa clara, CA, USA},
series = {FAST'17}
}

@inproceedings{debuginfoValidation,
author = {Li, Yuanbo and Ding, Shuo and Zhang, Qirun and Italiano, Davide},
title = {Debug Information Validation for Optimized Code},
year = {2020},
isbn = {9781450376136},
doi = {10.1145/3385412.3386020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3385412.3386020},
doi = {10.1145/3385412.3386020},
booktitle = {Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {1052–1065},
numpages = {14},
keywords = {Optimizing Compilers, Debug Information},
location = {London, UK},
series = {PLDI 2020}
}

@inproceedings{debuggingDebuggers,
author = {Di Luna, Giuseppe Antonio and Italiano, Davide and Massarelli, Luca and \"{O}sterlund, Sebastian and Giuffrida, Cristiano and Querzoni, Leonardo},
title = {Who’s Debugging the Debuggers? Exposing Debug Information Bugs in Optimized Binaries},
year = {2021},
isbn = {9781450383172},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3445814.3446695},
doi = {10.1145/3445814.3446695},
booktitle = {Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {1034–1045},
numpages = {12},
keywords = {Verification, Debug Information, Optimized Binaries},
location = {Virtual, USA},
series = {ASPLOS 2021}
}

@inproceedings{fulldoc,
author="Jaramillo, Clara
and Gupta, Rajiv
and Soffa, Mary Lou",
editor="Palsberg, Jens",
title="FULLDOC: A Full Reporting Debugger for Optimized Code",
booktitle="Static Analysis",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="240--259",
abstract="As compilers increasingly rely on optimizations to achieve high performance, the effectiveness of source level debuggers for optimized code continues to falter. Even if values of source variables are computed in the execution of the optimized code, source level debuggers of optimized code are unable to always report the expected values of source variables at breakpoints.",
isbn="978-3-540-45099-3"
}

@inproceedings{non-transparent-2000,
author = {Tice, Caroline M.},
year = {2000},
month = {2},
title = {Non-Transparent Debugging of Optimized Code},
url = {https://dl.acm.org/doi/book/10.5555/894940}
}

@inproceedings{interactive-high-level,
author = {Zellweger, Polle T.},
title = {An Interactive High-Level Debugger for Control-Flow Optimized Programs},
year = {1983},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1006147.1006183},
doi = {10.1145/1006147.1006183},
abstract = {The transformations performed by an optimizing compiler have traditionally impeded interactive debugging in source language terms. A prototype system called Navigator has been developed for debugging optimized programs written in Cedar, an Algol-like language. Navigator can be used to monitor program execution flow in the presence of two optimizations: inline procedure expansion and cross-jumping (merging identical tails of code paths that join). This paper describes the problems that these two optimizations create for debugging and Navigator's solutions to these problems. The selected approach collects extra information during the optimization phases of compilation. At runtime, Navigator uses the additional information to hide the effects of the optimizations from the programmer.},
booktitle = {Proceedings of the Symposium on High-Level Debugging},
pages = {159–172},
numpages = {14},
location = {Pacific Grove, California},
series = {SIGSOFT '83}
}

@article{symbolic-debugging,
author = {Hennessy, John},
title = {Symbolic Debugging of Optimized Code},
year = {1982},
issue_date = {July 1982},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {3},
url = {https://doi.org/10.1145/357172.357173},
doi = {10.1145/357172.357173},
journal = {ACM Trans. Program. Lang. Syst.},
month = {jul},
pages = {323–344},
numpages = {22}
}

@article{source-level-debugging,
  title={Source-level debugging of optimized programs using data flow analysis},
  author={Berger, Lutz and Wism{\"u}ller, Roland},
  year={1992},
  publisher={Citeseer}
}

@inproceedings{new-approach-to-debugging-optimized-code,
author = {Brooks, Gary and Hansen, Gilbert J. and Simmons, Steve},
title = {A New Approach to Debugging Optimized Code},
year = {1992},
isbn = {0897914759},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/143095.143108},
doi = {10.1145/143095.143108},
abstract = {Debugging optimized code is a desirable capability not provided by most current debuggers. Users are forced to debug the unoptimized code when a bug occurs in the optimized version. Current research offers partial solutions for a small class of optimizations, but not a unified approach that handles a wide range of optimizations, such as the sophisticated optimizations performed by supercomputer compilers.The trend with current research is to make the effects of optimization transparent, i.e., provide the same behavior as that of the unoptimized program. We contend that this approach is neither totally feasible nor entirely desirable. Instead, we propose a new approach based on the premise that one should be able to debug the optimized code. This implies mapping the current  state of execution back to the original source, tracking the location of variables, and mapping compiler-synthesized variables back to user-defined induction variables. To aid the user in understanding program behavior, various visual means are provided, e.g., different forms of highlighting and annotating of the source/assembly code. While this unavoidably requires the user to have a basic understanding of the optimizations performed, it permits the user to see what is actually happening, infer the optimizations performed, and detect bugs. An example illustrates the effectiveness of visual feedback.To support conventional debugger functionality for optimized code, the compiler must generate additional information. Current compiler-debugger interfaces (CDIs) were neither  designed to handle this new information nor are they extensible in a straight forward manner. Therefore, a new CDI was designed that supports providing visual feedback and the debugging of optimized code. This paper specifies the details of a new CDI and relates each feature back to the debugger functionality it supports.},
booktitle = {Proceedings of the ACM SIGPLAN 1992 Conference on Programming Language Design and Implementation},
pages = {1–11},
numpages = {11},
location = {San Francisco, California, USA},
series = {PLDI '92}
}

@article{debugging-without-misled,
author = {Copperman, Max},
title = {Debugging Optimized Code without Being Misled},
year = {1994},
issue_date = {May 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {3},
issn = {0164-0925},
url = {https://doi.org/10.1145/177492.177517},
doi = {10.1145/177492.177517},
abstract = {Correct optimization can change the behavior of an incorrect program; therefore at times it is necessary to debug optimized code. However, optimizing compilers produce code that impedes source-level debugging.Optimization can cause an inconsistency between where the user expects a breakpoint to be located and the breakpoint's actual location. This article describes a mapping between statements and breakpoint locations that ameliorates this problem. The mapping enables debugger behavior on optimized code that approximates debugger behavior on unoptimized code sufficiently closely for the user to use traditional debugging strategies.Optimization can also cause the value of a variable to be noncurrent—to differ from the value that would be predicted by a close reading of the source code. This article presents a method of determining when this has occurred, and shows how a debugger can describe the relevant effects of optimization. The determination method is more general than previously published methods; it handles global optimization and many flow graph transformations, and it is not tightly coupled to optimizations performed by a particular compiler. Necessary compiler support is also described.},
journal = {ACM Trans. Program. Lang. Syst.},
month = {may},
pages = {387–427},
numpages = {41}
}


@inproceedings{scalar,
author = {Adl-Tabatabai, Ali-Reza and Gross, Thomas},
title = {Source-Level Debugging of Scalar Optimized Code},
year = {1996},
isbn = {0897917952},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/231379.231388},
doi = {10.1145/231379.231388},
abstract = {Although compiler optimizations play a crucial role in the performance of modern computer systems, debugger technology has lagged behind in its support of optimization. Yet debugging the unoptimized translation is often impossible or futile, so handling of code optimizations in the debugger is necessary. But compiler optimizations make it difficult to provide source-level debugger functionality: Global optimizations can cause the runtime value of a variable to be inconsistent with the source-level value expected at a breakpoint; such variables are called endangered variables. A debugger must detect and warn the user of endangered variables otherwise the user may draw incorrect conclusions about the program. This paper presents a new algorithm for detecting variables that are endangered due to global scalar optimization. Our approach provides more precise classifications of variables and is still simpler than past approaches. We have implemented and evaluated our techniques in the context of the cmcc optimizing C compiler. We describe the compiler extensions necessary to perform the required bookkeeping of compiler optimization. We present measurements of the effect of optimizations on a debugger's ability to present the expected values of variables to the user.},
booktitle = {Proceedings of the ACM SIGPLAN 1996 Conference on Programming Language Design and Implementation},
pages = {33–43},
numpages = {11},
location = {Philadelphia, Pennsylvania, USA},
series = {PLDI '96}
}



@inproceedings{comparison-checking,
author = {Jaramillo, Clara and Gupta, Rajiv and Soffa, Mary Lou},
title = {Comparison Checking: An Approach to Avoid Debugging of Optimized Code},
year = {1999},
isbn = {3540665382},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
abstract = {We present a novel approach to avoid the debugging of optimized code through comparison checking. In the technique presented, both the unoptimized and optimized versions of an application program are executed, and computed values are compared to ensure the behaviors of the two versions are the same under the given input. If the values are different, the comparison checker displays where in the application program the differences occurred and what optimizations were involved. The user can utilize this information and a conventional debugger to determine if an error is in the unoptimized code. If the error is in the optimized code, the user can turn off those offending optimizations and leave the other optimizations in place. We implemented our comparison checking scheme, which executes the unoptimized and optimized versions of C programs, and ran experiments that demonstrate the approach is effective and practical.},
booktitle = {Proceedings of the 7th European Software Engineering Conference Held Jointly with the 7th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
pages = {268–284},
numpages = {17},
location = {Toulouse, France},
series = {ESEC/FSE-7}
}

@inproceedings{globally-opt-dfa,
author = {Wism\"{u}ller, Roland},
title = {Debugging of Globally Optimized Programs Using Data Flow Analysis},
year = {1994},
isbn = {089791662X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/178243.178430},
doi = {10.1145/178243.178430},
abstract = {Advanced processor and machine architectures need optimizing compilers to be efficiently programmed in high level languages. Therefore the need for source level debuggers that can handle optimized programs is rising. One difficulty in debugging optimized code arises from the problem to determine the values of source code variables. To ensure correct debugger behaviour with optimized programs, the debugger not only has to determine the variable's storage location or associated register. It must also verify that the variable is current, i.e. the value determined from that location is really the value that the variable would have in unoptimized code. We will deduce requirements on algorithms for currentness determination and present an algorithm meeting this requirements that is more general than previous work. We will also give first experiences with an implementation. To our knowledge this is the first implementation of a currentness determination algorithm for globally optimized code.},
booktitle = {Proceedings of the ACM SIGPLAN 1994 Conference on Programming Language Design and Implementation},
pages = {278–289},
numpages = {12},
location = {Orlando, Florida, USA},
series = {PLDI '94}
}

@inproceedings{dynamic-deopt,
author = {H\"{o}lzle, Urs and Chambers, Craig and Ungar, David},
title = {Debugging Optimized Code with Dynamic Deoptimization},
year = {1992},
isbn = {0897914759},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/143095.143114},
doi = {10.1145/143095.143114},
abstract = {SELF's debugging system provides complete source-level debugging (expected behavior) with globally optimized code. It shields the debugger from optimizations performed by the compiler by dynamically deoptimizing code on demand. Deoptimization only affects the procedure activations that are actively being debugged; all other code runs at full speed. Deoptimization requires the compiler to supply debugging information at discrete interrupt points; the compiler can still perform extensive optimizations between interrupt points without affecting debuggability. At the same time, the inability to interrupt between interrupt points is invisible to the user. Our debugging system also handles programming changes during debugging. Again, the system provides expected behavior: it is possible to change a running program and immediately observe the effects of the change. Dynamic deoptimization transforms old compiled code (which may contain inlined copies of the old version of the changed procedure) into new versions reflecting the current source-level state. To the best of our knowledge, SELF is the first practical system providing full expected behavior with globally optimized code.},
booktitle = {Proceedings of the ACM SIGPLAN 1992 Conference on Programming Language Design and Implementation},
pages = {32–43},
numpages = {12},
location = {San Francisco, California, USA},
series = {PLDI '92}
}

@book{rref,
  author = {Anton, Howard and Rorres, Chris},
  isbn = {9781118434413 1118434412 9781118474228 1118474228},
  keywords = {linear.algebra matrix textbook},
  publisher = {Wiley},
  title = {Elementary Linear Algebra: Applications Version},
}

@inproceedings{llvm_tv21,
author = {Kasampalis, Theodoros and Park, Daejun and Lin, Zhengyao and Adve, Vikram S. and Ro\c{s}u, Grigore},
title = {Language-Parametric Compiler Validation with Application to LLVM},
year = {2021},
isbn = {9781450383172},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
booktitle = {Proceedings of the 26th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {1004–1019},
numpages = {16},
keywords = {Translation Validation, Program Equivalence, Simulation, Compilers},
location = {Virtual, USA},
series = {ASPLOS 2021}
}

@book{knr,
author = {Kernighan, Brian W. and Ritchie, Dennis M.},
title = {The  C Programming Language},
year = {1988},
isbn = {0131103709},
publisher = {Prentice Hall Professional Technical Reference},
edition = {2nd},
}

@inproceedings{10.1145/93542.93585,
author = {Chase, David R. and Wegman, Mark and Zadeck, F. Kenneth},
title = {Analysis of Pointers and Structures},
year = {1990},
isbn = {0897913647},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/93542.93585},
doi = {10.1145/93542.93585},
booktitle = {Proceedings of the ACM SIGPLAN 1990 Conference on Programming Language Design and Implementation},
pages = {296–310},
numpages = {15},
location = {White Plains, New York, USA},
series = {PLDI '90}
}


@article{asiteAbs1,
author = {Chase, David R. and Wegman, Mark and Zadeck, F. Kenneth},
title = {Analysis of Pointers and Structures},
year = {1990},
issue_date = {Jun. 1990},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {25},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/93548.93585},
doi = {10.1145/93548.93585},
journal = {SIGPLAN Not.},
month = {jun},
pages = {296–310},
numpages = {15}
}

@inproceedings{asiteAbs2,
author = {Jones, Neil D. and Muchnick, Steven S.},
title = {A Flexible Approach to Interprocedural Data Flow Analysis and Programs with Recursive Data Structures},
year = {1982},
isbn = {0897910656},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/582153.582161},
doi = {10.1145/582153.582161},
abstract = {A new approach to data flow analysis of procedural programs and programs with recursive data structures is described. The method depends on simulation of the interpreter for the subject programming language using a retrieval function to approximate a program's data structures.},
booktitle = {Proceedings of the 9th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
pages = {66–74},
numpages = {9},
location = {Albuquerque, New Mexico},
series = {POPL '82}
}

@INPROCEEDINGS{cgo22,
  author={Kurhe, Vaibhav Kiran and Karia, Pratik and Gupta, Shubhani and Rose, Abhishek and Bansal, Sorav},
  booktitle={2022 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)}, 
  title={Automatic Generation of Debug Headers through BlackBox Equivalence Checking}, 
  year={2022},
  volume={},
  number={},
  pages={144-154},
  doi={10.1109/CGO53902.2022.9741273}}

@article{Intel3DXPoint,
  title={Understanding the intel/micron 3d xpoint memory},
  author={Handy, Jim},
  journal={Proc. SDC},
  volume={68},
  year={2015}
}

@ARTICLE{PCM,
  author={Wong, H.-S. Philip and Raoux, Simone and Kim, SangBum and Liang, Jiale and Reifenberg, John P. and Rajendran, Bipin and Asheghi, Mehdi and Goodson, Kenneth E.},
  journal={Proceedings of the IEEE}, 
  title={Phase Change Memory}, 
  year={2010},
  volume={98},
  number={12},
  pages={2201-2227},
  doi={10.1109/JPROC.2010.2070050}}

@ARTICLE{ReRAM,
  author={Akinaga, Hiroyuki and Shima, Hisashi},
  journal={Proceedings of the IEEE}, 
  title={Resistive Random Access Memory (ReRAM) Based on Metal Oxides}, 
  year={2010},
  volume={98},
  number={12},
  pages={2237-2251},
  doi={10.1109/JPROC.2010.2070830}}

@article{pmdk,
author = {Lersch, Lucas and Hao, Xiangpeng and Oukid, Ismail and Wang, Tianzheng and Willhalm, Thomas},
title = {Evaluating Persistent Memory Range Indexes},
year = {2019},
issue_date = {December 2019},
publisher = {VLDB Endowment},
volume = {13},
number = {4},
issn = {2150-8097},
url = {https://doi.org/10.14778/3372716.3372728},
doi = {10.14778/3372716.3372728},
journal = {Proc. VLDB Endow.},
month = {dec},
pages = {574–587},
numpages = {14}
}

@article{mnemosyne,
  title={Mnemosyne: Lightweight persistent memory},
  author={Volos, Haris and Tack, Andres Jaan and Swift, Michael M},
  journal={ACM SIGARCH Computer Architecture News},
  volume={39},
  number={1},
  pages={91--104},
  year={2011},
  publisher={ACM New York, NY, USA}
}

@article{nvheaps,
  title={NV-Heaps: Making persistent objects fast and safe with next-generation, non-volatile memories},
  author={Coburn, Joel and Caulfield, Adrian M and Akel, Ameen and Grupp, Laura M and Gupta, Rajesh K and Jhala, Ranjit and Swanson, Steven},
  journal={ACM SIGARCH Computer Architecture News},
  volume={39},
  number={1},
  pages={105--118},
  year={2011},
  publisher={ACM New York, NY, USA}
}

@article{atlas,
  title={Atlas: Leveraging locks for non-volatile memory consistency},
  author={Chakrabarti, Dhruva R and Boehm, Hans-J and Bhandari, Kumud},
  journal={ACM SIGPLAN Notices},
  volume={49},
  number={10},
  pages={433--452},
  year={2014},
  publisher={ACM New York, NY, USA}
}

@article{pointsto,
  title={Points-to analysis using BDDs},
  author={Berndl, Marc and Lhot{\'a}k, Ondrej and Qian, Feng and Hendren, Laurie and Umanee, Navindra},
  journal={ACM SIGPLAN Notices},
  volume={38},
  number={5},
  pages={103--114},
  year={2003},
  publisher={ACM New York, NY, USA}
}

@inproceedings{andersen,
  title={Fast and accurate flow-insensitive points-to analysis},
  author={Shapiro, Marc and Horwitz, Susan},
  booktitle={Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={1--14},
  year={1997}
}

@inproceedings{steensgaard,
  title={Points-to analysis in almost linear time},
  author={Steensgaard, Bjarne},
  booktitle={Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={32--41},
  year={1996}
}

@misc{fragmentation_in_pmem,
  TITLE = {Persistent allocator design - fragmentation},
  howpublished = "\url{https://pmem.io/2016/02/25/fragmentation.html}",
  key = {Persistent allocator design - fragmentation},
}

@misc{compilerDesignPlaylist,
  TITLE = {{Compiler Design Playlist on YouTube by Sorav Bansal}},
  howpublished = "\url{https://hohlabs.github.io/}",
  key = {Compiler Design Playlist on YouTube by Sorav Bansal},
}

@misc{coursesPage,
  TITLE = {{Sorav Bansal's Courses}},
  howpublished = "\url{https://sorav.compiler.ai/courses.html}",
  key = {Sorav Bansal's Courses},
}

@misc{porterCourse,
  TITLE = {{Don Porter's Course on Virtualization at Stony Brook University}},
  howpublished = "\url{https://www.cs.unc.edu/~porter/courses/cse591/s14/syllabus.html}",
  key = {{Don Porter's Course on Virtualization at Stony Brook University}}
}



@InProceedings{SimAbs,
author="Fedyukovich, Grigory
and Gurfinkel, Arie
and Sharygina, Natasha",
editor="Davis, Martin
and Fehnker, Ansgar
and McIver, Annabelle
and Voronkov, Andrei",
title="Automated Discovery of Simulation Between Programs",
booktitle="Logic for Programming, Artificial Intelligence, and Reasoning",
year="2015",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="606--621",
abstract="The paper presents SimAbs, the first fully automated SMT-based approach to synthesize an abstraction of one program (called target) that simulates another program (called source). SimAbs iteratively traverses the search space of existential abstractions of the target and choses the strongest abstraction among them that simulates the source. Deciding whether a given relation is a simulation relation is reduced to solving validity of {\$}{\$}{\backslash}forall {\backslash}exists {\$}{\$}-formulas iteratively. We present a novel algorithm for dealing with such formulas using an incremental SMT solver. In addition to deciding validity, our algorithm extracts witnessing Skolem relations which further drive simulation synthesis in SimAbs. Our evaluation confirms that SimAbs is able to efficiently discover both, simulations and abstractions, for C programs from the Software Verification Competition.",                                                                                                                                   isbn="978-3-662-48899-7"
}

@inproceedings{esop13,
 author = {Sharma, Rahul and Gupta, Saurabh and Hariharan, Bharath and Aiken, Alex and Liang, Percy and Nori, Aditya V.},
 title = {A Data Driven Approach for Algebraic Loop Invariants},
 booktitle = {Proceedings of the 22Nd European Conference on Programming Languages and Systems},
 series = {ESOP'13},
 year = {2013},
 isbn = {978-3-642-37035-9},
 location = {Rome, Italy},
 pages = {574--592},
 numpages = {19},
 url = {http://dx.doi.org/10.1007/978-3-642-37036-6_31},
 doi = {10.1007/978-3-642-37036-6\_31},
 acmid = {2450310},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {SMT, loop invariants, non-linear},
}


@inproceedings{autoregressverify14,
  title={Automating regression verification},
  author={Felsing, Dennis and Grebing, Sarah and Klebanov, Vladimir and R{\"u}mmer, Philipp and Ulbrich, Mattias},
  booktitle={Proceedings of the 29th ACM/IEEE international conference on Automated software engineering},
  pages={349--360},
  year={2014},
  organization={ACM}
}

@article{posthat,
 author = {Thakur, A. and Lal, A. and Lim, J. and Reps, T.},
 title = {PostHat and All That},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {February 2015},
 volume = {311},
 number = {C},
 month = feb,
 year = {2015},
 issn = {1571-0661},
 pages = {15--32},
 numpages = {18},
 url = {http://dx.doi.org/10.1016/j.entcs.2015.02.003},
 doi = {10.1016/j.entcs.2015.02.003},
 acmid = {2803851},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {abstract interpretation, decision procedures, invariant generation, symbolic abstraction},
}


@InProceedings{abstractInv,
author="Garoche, Pierre-Lo{\"i}c
and Kahsai, Temesghen
and Tinelli, Cesare",
editor="Brat, Guillaume
and Rungta, Neha
and Venet, Arnaud",
title="Incremental Invariant Generation Using Logic-Based Automatic Abstract Transformers",
booktitle="NASA Formal Methods",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="139--154",
abstract="Formal analysis tools for system models often require or benefit from the availability of auxiliary system invariants. Abstract interpretation is currently one of the best approaches for discovering useful invariants, in particular numerical ones. However, its application is limited by two orthogonal issues: (i) developing an abstract interpretation is often non-trivial; each transfer function of the system has to be represented at the abstract level, depending on the abstract domain used; (ii) with precise but costly abstract domains, the information computed by the abstract interpreter can be used only once a post fix point has been reached; this may take a long time for large systems or when widening is delayed to improve precision. We propose a new, completely automatic, method to build abstract interpreters which, in addition, can provide sound invariants of the system under analysis before reaching the end of the post fix point computation. In effect, such interpreters act as on-the-fly invariant generators and can be used by other tools such as logic-based model checkers. We present some experimental results that provide initial evidence of the practical usefulness of our method.",
isbn="978-3-642-38088-4"
}

@InProceedings{CEGAR,
author="Clarke, Edmund
and Grumberg, Orna
and Jha, Somesh
and Lu, Yuan
and Veith, Helmut",
editor="Emerson, E. Allen
and Sistla, Aravinda Prasad",
title="Counterexample-Guided Abstraction Refinement ",
booktitle="Computer Aided Verification",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="154--169",
abstract="We present an automatic iterative abstraction-refinement methodology in which the initial abstract model is generated by an automatic analysis of the control structures in the program to be verified. Abstract models may admit erroneous (or ``spurious'') counterexamples. We devise new symbolic techniques which analyze such counterexamples and refine the abstract model correspondingly. The refinement algorithm keeps the size of the abstract state space small due to the use of abstraction functions which distinguish many degrees of abstraction for each program variable. We describe an implementation of our methodology in NuSMV. Practical experiments including a large Fujitsu IP core design with about 500 latches and 10000 lines of SMV code confirm the effectiveness of our approach.",
isbn="978-3-540-45047-4"
}


@inproceedings{IC3,
author = {Somenzi, Fabio and Bradley, Aaron R.},
title = {IC3: Where Monolithic and Incremental Meet},
year = {2011},
isbn = {9780983567813},
publisher = {FMCAD Inc},
address = {Austin, Texas},
abstract = {IC3 is an approach to the verification of safety properties based on relative induction. It is incremental in the sense that instead of focusing on proving one assertion, it builds a sequence of small, relatively easy lemmas. These lemmas are in the form of clauses that are derived from counterexamples to induction and that are inductive relative to reachability assumptions. At the same time, IC3 progressively refines approximations of the states reachable in given numbers of steps. These approximations, also made up of clauses, are among the assumptions used to support the inductive reasoning, while their strengthening relies on the inductive clauses themselves. This interplay of the incremental and monolithic approaches lends IC3 efficiency and flexibility and produces high-quality property-driven abstractions. In contrast to other SAT-based approaches, IC3 performs very many, very inexpensive queries. This is another consequence of the incrementality of the algorithm and is a key to its ability to be implemented in highly parallel fashion.},
booktitle = {Proceedings of the International Conference on Formal Methods in Computer-Aided Design},
pages = {3–8},
numpages = {6},
location = {Austin, Texas},
series = {FMCAD '11}
}

@inproceedings{emi16,
author = {Sun, Chengnian and Le, Vu and Su, Zhendong},
title = {Finding Compiler Bugs via Live Code Mutation},
year = {2016},
isbn = {9781450344449},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2983990.2984038},
doi = {10.1145/2983990.2984038},
booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
pages = {849–863},
numpages = {15},
keywords = {Compiler testing, automated testing, miscompilation, equivalent program variants},
location = {Amsterdam, Netherlands},
series = {OOPSLA 2016}
}

@misc{github_copilot,
  TITLE = "{I}ntroducing {G}ithub {C}opilot: your {A}{I} pair programmer",
  howpublished = "\url{https://github.blog/2021-06-29-introducing-github-copilot-ai-pair-programmer/}",
  key = "{I}ntroducing {G}ithub {C}opilot: your {A}{I} pair programmer",
  month = {jun},
  year = {2021},
}

@misc{google_palm,
  TITLE = "{P}athways {L}anguage {M}odel ({P}a{L}{M}): {S}caling to 540 Billion Parameters for Breakthrough Performance",
  howpublished = "\url{https://ai.googleblog.com/2022/04/pathways-language-model-palm-scaling-to.html}",
  key = "{P}athways {L}anguage {M}odel ({P}a{L}{M}): {S}caling to 540 Billion Parameters for Breakthrough Performance",
  month = {apr},
  year = {2022},
}

@misc{i386abi,
  TITLE = "{S}ystem {V} {A}pplication {B}inary {I}nterface {A}{M}{D} {A}rchitecture {P}rocessor {S}upplement",
  author = {Matz, Michael and Hubicka, Jan and Jaeger, Andreas and Mitchell, Mark},
  howpublished = "\url{https://refspecs.linuxbase.org/elf/x86_64-abi-0.99.pdf}",
  month = {jul},
  year = {2012},
}



@article{ack_compiler,
author = {Tanenbaum, Andrew S. and van Staveren, Hans and Keizer, E. G. and Stevenson, Johan W.},
title = {A Practical Tool Kit for Making Portable Compilers},
year = {1983},
issue_date = {Sept. 1983},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {26},
number = {9},
issn = {0001-0782},
url = {https://doi.org/10.1145/358172.358182},
doi = {10.1145/358172.358182},
journal = {Commun. ACM},
month = {sep},
pages = {654–660},
numpages = {7},
keywords = {portability, compiler, interpreter, translator}
}

@inproceedings{Nguyen2012,
 author = {Nguyen, ThanhVu and Kapur, Deepak and Weimer, Westley and Forrest, Stephanie},
 title = {Using Dynamic Analysis to Discover Polynomial and Array Invariants},
 booktitle = {Proceedings of the 34th International Conference on Software Engineering},
 series = {ICSE '12},
 year = {2012},
 isbn = {978-1-4673-1067-3},
 location = {Zurich, Switzerland},
 pages = {683--693},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2337223.2337304},
 acmid = {2337304},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 

@InProceedings{dilling2018,
author="Humenberger, Andreas
and Jaroschek, Maximilian
and Kov{\'a}cs, Laura",
editor="Dillig, Isil
and Palsberg, Jens",
title="Invariant Generation for Multi-Path Loops with Polynomial Assignments",
booktitle="Verification, Model Checking, and Abstract Interpretation",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="226--246",
abstract="Program analysis requires the generation of program properties expressing conditions to hold at intermediate program locations. When it comes to programs with loops, these properties are typically expressed as loop invariants. In this paper we study a class of multi-path program loops with numeric variables, in particular nested loops with conditionals, where assignments to program variables are polynomial expressions over program variables. We call this class of loops extended P-solvable and introduce an algorithm for generating all polynomial invariants of such loops. By an iterative procedure employing Gr{\"o}bner basis computation, our approach computes the polynomial ideal of the polynomial invariants of each program path and combines these ideals sequentially until a fixed point is reached. This fixed point represents the polynomial ideal of all polynomial invariants of the given extended P-solvable loop. We prove termination of our method and show that the maximal number of iterations for reaching the fixed point depends linearly on the number of program variables and the number of inner loops. In particular, for a loop with m program variables and r conditional branches we prove an upper bound of {\$}{\$}m{\backslash}cdot r{\$}{\$}iterations. We implemented our approach in the Aligator software package. Furthermore, we evaluated it on 18 programs with polynomial arithmetic and compared it to existing methods in invariant generation. The results show the efficiency of our approach.",
isbn="978-3-319-73721-8"
}

@article{reps2018,
 author = {Kincaid, Zachary and Cyphert, John and Breck, Jason and Reps, Thomas},
 title = {Non-linear Reasoning for Invariant Synthesis},
 journal = {Proc. ACM Program. Lang.},
 issue_date = {January 2018},
 volume = {2},
 number = {POPL},
 month = dec,
 year = {2017},
 issn = {2475-1421},
 pages = {54:1--54:33},
 articleno = {54},
 numpages = {33},
 url = {http://doi.acm.org/10.1145/3158142},
 doi = {10.1145/3158142},
 acmid = {3158142},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Invariant generation, Operational calculus, Recurrence relation},
}

@InProceedings{eldarica,
author="Hojjat, Hossein
and Kone{\v{c}}n{\'y}, Filip
and Garnier, Florent
and Iosif, Radu
and Kuncak, Viktor
and R{\"u}mmer, Philipp",
editor="Giannakopoulou, Dimitra
and M{\'e}ry, Dominique",
title="A Verification Toolkit for Numerical Transition Systems",
booktitle="FM 2012: Formal Methods",
year="2012",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="247--251",
abstract="This paper presents a publicly available toolkit and a benchmark suite for rigorous verification of Integer Numerical Transition Systems (INTS), which can be viewed as control-flow graphs whose edges are annotated by Presburger arithmetic formulas. We present Flata and Eldarica, two verification tools for INTS. The Flata system is based on precise acceleration of the transition relation, while the Eldarica system is based on predicate abstraction with interpolation-based counterexample-driven refinement. The Eldarica verifier uses the Princess theorem prover as a sound and complete interpolating prover for Presburger arithmetic. Both systems can solve several examples for which previous approaches failed, and present a useful baseline for verifying integer programs. The infrastructure is a starting point for rigorous benchmarking, competitions, and standardized communication between tools.",
isbn="978-3-642-32759-9"
}

@inproceedings{datachc,
 author = {Zhu, He and Magill, Stephen and Jagannathan, Suresh},
 title = {A Data-driven CHC Solver},
 booktitle = {Proceedings of the 39th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI 2018},
 year = {2018},
 isbn = {978-1-4503-5698-5},
 location = {Philadelphia, PA, USA},
 pages = {707--721},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/3192366.3192416},
 doi = {10.1145/3192366.3192416},
 acmid = {3192416},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Constrained Horn Clauses (CHCs), Data-Driven Analysis, Invariant Inference, Program Verification},
} 

@InProceedings{kedar97,
author="Namjoshi, Kedar S.",
editor="Ramesh, S.
and Sivakumar, G.",
title="A simple characterization of stuttering bisimulation",
booktitle="Foundations of Software Technology and Theoretical Computer Science",
year="1997",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="284--296",
abstract="Showing equivalence of two systems at different levels of abstraction often entails mapping a single step in one system to a sequence of steps in the other, where the relevant state information does not change until the last step. In [BCG 88,dNV 90], bisimulations that take into account such ``stuttering'' are formulated. These definitions are, however, difficult to use in proofs of bisimulation, as they often require one to exhibit a finite, but unbounded sequence of transitions to match a single transition; thus introducing a large number of proof obligations. We present an alternative formulation of bisimulation under stuttering, in terms of a ranking function over a well-founded set. It has the desirable property, shared with strong bisimulation [Mil 90], that it requires matching single transitions only, which considerably reduces the number of proof obligations. This makes proofs of bisimulation short, and easier to demonstrate and understand. We show that the new formulation is equivalent to the original one, and illustrate its use with non-trivial examples that have infinite state spaces and exhibit unbounded stuttering.",
isbn="978-3-540-69659-9"
}

@article{SPgraph,
author = {Valdes, Jacobo and Tarjan, Robert E. and Lawler, Eugene L.},
title = {The Recognition of Series Parallel Digraphs},
journal = {SIAM Journal on Computing},
volume = {11},
number = {2},
pages = {298-313},
year = {1982},
doi = {10.1137/0211023},
URL = {https://doi.org/10.1137/0211023},
eprint = {https://doi.org/10.1137/0211023},
abstract = { We present a linear-time algorithm to recognize the class of vertex series-parallel (VSP) digraphs. Our method is based on the relationship between VSP digraphs and the class of edge series-parallel multidigraphs. As a byproduct of our analysis, we obtain efficient methods to compute the transitive closure and transitive reduction of VSP digraphs, and to test isomorphism of minimal VSP digraphs. }
}


@inproceedings{barthe11,
author = {Barthe, Gilles and Crespo, Juan Manuel and Kunz, C\'{e}sar},
title = {Relational Verification Using Product Programs},
year = {2011},
isbn = {9783642214363},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
abstract = {Relational program logics are formalisms for specifying and verifying properties about two programs or two runs of the same program. These properties range from correctness of compiler optimizations or equivalence between two implementations of an abstract data type, to properties like non-interference or determinism. Yet the current technology for relational verification remains underdeveloped. We provide a general notion of product program that supports a direct reduction of relational verification to standard verification. We illustrate the benefits of our method with selected examples, including non-interference, standard loop optimizations, and a state-of-the-art optimization for incremental computation. All examples have been verified using the Why tool.},
booktitle = {Proceedings of the 17th International Conference on Formal Methods},
pages = {200–214},
numpages = {15},
location = {Limerick, Ireland},
series = {FM'11}
}

@article{relverify19,
author = {Chen, Jia and Wei, Jiayi and Feng, Yu and Bastani, Osbert and Dillig, Isil},
title = {Relational Verification Using Reinforcement Learning},
year = {2019},
issue_date = {October 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {3},
number = {OOPSLA},
url = {https://doi.org/10.1145/3360567},
doi = {10.1145/3360567},
abstract = {Relational verification aims to prove properties that relate a pair of programs or two different runs of the same program. While relational properties (e.g., equivalence, non-interference) can be verified by reducing them to standard safety, there are typically many possible reduction strategies, only some of which result in successful automated verification. Motivated by this problem, we propose a novel relational verification algorithm that learns useful reduction strategies using reinforcement learning. Specifically, we show how to formulate relational verification as a Markov Decision Process (MDP) and use reinforcement learning to synthesize an optimal policy for the underlying MDP. The learned policy is then used to guide the search for a successful verification strategy. We have implemented this approach in a tool called Coeus and evaluate it on two benchmark suites. Our evaluation shows that Coeus solves significantly more problems within a given time limit compared to multiple baselines, including two state-of-the-art relational verification tools.},
journal = {Proc. ACM Program. Lang.},
month = {oct},
articleno = {141},
numpages = {30},
keywords = {reinforcement learning, proof search, relational property, verification, neural network, policy gradient}
}

@inproceedings{ic3vmcai11,
author = {Bradley, Aaron R.},
title = {SAT-Based Model Checking without Unrolling},
year = {2011},
isbn = {9783642182747},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
abstract = {A new form of SAT-based symbolic model checking is described. Instead of unrolling the transition relation, it incrementally generates clauses that are inductive relative to (and augment) stepwise approximate reachability information. In this way, the algorithm gradually refines the property, eventually producing either an inductive strengthening of the property or a counterexample trace. Our experimental studies show that induction is a powerful tool for generalizing the unreachability of given error states: it can refine away many states at once, and it is effective at focusing the proof search on aspects of the transition system relevant to the property. Furthermore, the incremental structure of the algorithm lends itself to a parallel implementation.},
booktitle = {Proceedings of the 12th International Conference on Verification, Model Checking, and Abstract Interpretation},
pages = {70–87},
numpages = {18},
location = {Austin, TX, USA},
series = {VMCAI'11}
}

@inproceedings{pdr,
author = {Een, Niklas and Mishchenko, Alan and Brayton, Robert},
title = {Efficient Implementation of Property Directed Reachability},
year = {2011},
isbn = {9780983567813},
publisher = {FMCAD Inc},
address = {Austin, Texas},
abstract = {Last spring, in March 2010, Aaron Bradley published the first truly new bit-level symbolic model checking algorithm since Ken McMillan's interpolation based model checking procedure introduced in 2003. Our experience with the algorithm suggests that it is stronger than interpolation on industrial problems, and that it is an important algorithm to study further. In this paper, we present a simplified and faster implementation of Bradley's procedure, and discuss our successful and unsuccessful attempts to improve it.},
booktitle = {Proceedings of the International Conference on Formal Methods in Computer-Aided Design},
pages = {125–134},
numpages = {10},
location = {Austin, Texas},
series = {FMCAD '11}
}

@InProceedings{vmcai04,
author="Reps, Thomas
and Sagiv, Mooly
and Yorsh, Greta",
editor="Steffen, Bernhard
and Levi, Giorgio",
title="Symbolic Implementation of the Best Transformer",
booktitle="Verification, Model Checking, and Abstract Interpretation",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="252--266",
abstract="This paper shows how to achieve, under certain conditions, abstract-interpretation algorithms that enjoy the best possible precision for a given abstraction. The key idea is a simple process of successive approximation that makes repeated calls to a decision procedure, and obtains the best abstract value for a set of concrete stores that are represented symbolically, using a logical formula.",
isbn="978-3-540-24622-0"
}

@article{wp1975,
author = {Dijkstra, Edsger W.},
title = {Guarded Commands, Nondeterminacy and Formal Derivation of Programs},
journal = {Commun. ACM},
issue_date = {Aug. 1975},
volume = {18},
number = {8},
month = aug,
year = {1975},
issn = {0001-0782},
pages = {453--457},
numpages = {5},
doi = {10.1145/360933.360975},
acmid = {360975},
publisher = {ACM},
address = {New York, NY, USA},
}

  
@InProceedings{seahorn,
author="Gurfinkel, Arie
and Kahsai, Temesghen
and Komuravelli, Anvesh
and Navas, Jorge A.",
editor="Kroening, Daniel
and P{\u{a}}s{\u{a}}reanu, Corina S.",
title="The SeaHorn Verification Framework",
booktitle="Computer Aided Verification",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="343--361",
abstract="In this paper, we present SeaHorn, a software verification framework. The key distinguishing feature of SeaHorn is its modular design that separates the concerns of the syntax of the programming language, its operational semantics, and the verification semantics. SeaHorn encompasses several novelties: it (a) encodes verification conditions using an efficient yet precise inter-procedural technique, (b) provides flexibility in the verification semantics to allow different levels of precision, (c) leverages the state-of-the-art in software model checking and abstract interpretation for verification, and (d) uses Horn-clauses as an intermediate language to represent verification conditions which simplifies interfacing with multiple verification tools based on Horn-clauses. SeaHorn provides users with a powerful verification tool and researchers with an extensible and customizable framework for experimenting with new software verification techniques. The effectiveness and scalability of SeaHorn are demonstrated by an extensive experimental evaluation using benchmarks from SV-COMP 2015 and real avionics code.",
isbn="978-3-319-21690-4"
}

@InProceedings{cpachecker,
author="Beyer, Dirk
and Keremoglu, M. Erkan",
editor="Gopalakrishnan, Ganesh
and Qadeer, Shaz",
title="CPAchecker: A Tool for Configurable Software Verification",
booktitle="Computer Aided Verification",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="184--190",
abstract="Configurable software verification is a recent concept for expressing different program analysis and model checking approaches in one single formalism. This paper presents CPAchecker, a tool and framework that aims at easy integration of new verification components. Every abstract domain, together with the corresponding operations, implements the interface of configurable program analysis (CPA). The main algorithm is configurable to perform a reachability analysis on arbitrary combinations of existing CPAs. In software verification, it takes a considerable amount of effort to convert a verification idea into actual experimental results --- we aim at accelerating this process. We hope that researchers find it convenient and productive to implement new verification ideas and algorithms using this flexible and easy-to-extend platform, and that it advances the field by making it easier to perform practical experiments. The tool is implemented in Java and runs as command-line tool or as eclipse plug-in. CPAchecker implements CPAs for several abstract domains. We evaluate the efficiency of the current version of our tool on software-verification benchmarks from the literature, and compare it with other state-of-the-art model checkers. CPAchecker is an open-source toolkit and publicly available.",
isbn="978-3-642-22110-1"
}

@InProceedings{tacas04,
author="Clarke, Edmund
and Kroening, Daniel
and Lerda, Flavio",
editor="Jensen, Kurt
and Podelski, Andreas",
title="A Tool for Checking ANSI-C Programs",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="168--176",
abstract="We present a tool for the formal verification of ANSI-C programs using Bounded Model Checking (BMC). The emphasis is on usability: the tool supports almost all ANSI-C language features, including pointer constructs, dynamic memory allocation, recursion, and the float and double data types. From the perspective of the user, the verification is highly automated: the only input required is the BMC bound. The tool is integrated into a graphical user interface. This is essential for presenting long counterexample traces: the tool allows stepping through the trace in the same way a debugger allows stepping through a program.",
isbn="978-3-540-24730-2"
}

@InProceedings{veriabs,
author="Darke, Priyanka
and Prabhu, Sumanth
and Chimdyalwar, Bharti
and Chauhan, Avriti
and Kumar, Shrawan
and Basakchowdhury, Animesh
and Venkatesh, R.
and Datar, Advaita
and Medicherla, Raveendra Kumar",
editor="Beyer, Dirk
and Huisman, Marieke",
title="VeriAbs: Verification by Abstraction and Test Generation",
booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="457--462",
abstract="VeriAbs is a portfolio software verifier for ANSI-C programs. To prove properties with better efficiency and scalability, this version implements output abstraction with k-induction in the presence of resets. VeriAbs now generates post conditions over the abstraction to find invariants by applying Z3's tactics of quantifier elimination. These invariants are then used to generate validation witnesses. To find errors in the absence of known program bounds, VeriAbs searches for property violating inputs by applying random test generation with fuzz testing for a better scalability as compared to bounded model checking.",
isbn="978-3-319-89963-3"
}

@inproceedings{aliveFP,
author = {Menendez, David and Nagarakatte, Santosh and Gupta, Aarti},
year = {2016},
month = {09},
pages = {317-337},
title = {Alive-FP: Automated Verification of Floating Point Based Peephole Optimizations in LLVM},
isbn = {978-3-662-53412-0},
doi = {10.1007/978-3-662-53413-7_16}
}
